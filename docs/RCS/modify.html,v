head	1.7;
access;
symbols;
locks;
comment	@# @;


1.7
date	2019.01.24.16.13.27;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2019.01.24.15.03.25;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2006.01.03.19.12.07;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2004.07.29.13.53.31;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	97.06.17.19.09.53;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	97.05.30.14.58.04;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	97.05.29.20.12.22;	author leith;	state Exp;
branches;
next	;


desc
@@


1.7
log
@*** empty log message ***
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
<head>
   <title>Adding your own subroutines to SPIDER</title>
</head>

<body>

<p />

<h2 align="center">Adding Your Own Subroutines to SPIDER</h2>
<p />
<hr />
<p />

We have added a set of stub routines to simplify adding your own
code to SPIDER. However, you will have to have some knowledge of
Fortran coding to do this. All subroutines added using these stubs
will be accessed using suboptions of the operation "MY" e.g. 
"MY TWO". To add your own subroutines: 

<ol>

<p>
<li>Edit <a href="../src/mod1.f"><i>src/mod1.f</i></a> and add code
   for accessing your own subroutine (called mymods2.f here).   <br />
   <pre>
    ELSEIF (FCHAR(4:6) == 'TWO' THEN                             
      CALL MYMODS2()                                             <br />
   </pre>
</li>
</p>

<p>
<li>Create mymods2.f in the SPIDER <i>src</i> directory. We have
  provided commented sample code in 
  <a href= "../src/mymods.f"><i>src/mymods.f</i></a> that will open an
  existing input file and a similar sized output file, read code from
  the input file, process the incoming data and output the processed
  data to an output file. </li>
</p>

<p>
<li>Edit <a href="../src/Makefile.inc"><i>src/Makefile.inc</i></a>
   and add <i>mymods2</i> to the listing there. </li>
</p>

<p>
<li>Run <i>make</i> to update your SPIDER system. </li>
</p>

</ol>

<hr />

<small>Source: modify.html &nbsp;&nbsp;&nbsp; 
       Last update: 3 Jan. 2006 &nbsp;&nbsp;&nbsp; 
       ArDean Leith
</small>

</body>
</html>

@


1.6
log
@cosmetic
@
text
@d9 1
a9 1
<hr />
d12 3
d26 5
a30 7
   for accessing your own subroutine (called mymods2.f here).
   <kbd>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    ELSEIF (FCHAR(4:6) == 'TWO' THEN<br>
    C USER SUPPLIED OPERATION "MY TWO"<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    CALL MYMODS2()<br>
   </kbd>
@


1.5
log
@update
@
text
@d9 1
a9 1
<hr>
d11 1
a11 1
<h3>Adding Your Own Subroutines to SPIDER</h3>
d25 1
a25 1
    ELSEIF (FCHAR(4:6) .EQ. 'TWO' THEN<br>
d53 2
a54 1
<hr>
d57 3
a59 1
       ArDean Leith</small>
@


1.4
log
@xtml
xhtml
@
text
@d4 1
a4 3
<meta name="generator" content="HTML Tidy, see www.w3.org">
<title></title>
<title>Adding your own subroutines to SPIDER</title>
d6 1
d8 1
d10 1
d16 2
a17 2
will be accessed using suboptions of the operation "MY" e.g. "MY
TWO". To add your own subroutines: 
a19 11
<li>edit <a href="../src/mod1.f"><i>src/mod1.f</i></a> and add code
for accessing your own subroutine (called mymods2.f here).
<kbd>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ELSEIF (FCHAR(4:6) .EQ.
'TWO' THEN<br>
 C USER SUPPLIED OPERATION "MY TWO"<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CALL
MYMODS2(MAXDIM)<br>
</kbd> 

<p></p>
</li>
d21 9
a29 14
<li>create mymods2.f in the SPIDER <i>src</i> directory. We have
provided commented sample code in <a href=
"../src/mymods.f"><i>src/mymods.f</i></a> that will open an
existing input file and a similar sized output file, read code from
the input file, process the incoming data and output the processed
data to an output file. 

<p></p>
</li>

<li>edit <a href="../src/Makefile.inc"><i>src/Makefile.inc</i></a>
and add <i>mymods2</i> to the listing there. 

<p></p>
d31 1
d33 17
a49 1
<li>Run <i>make</i> to update your SPIDER system. 
a50 2
<p></p>
</li>
d54 3
a56 2
<small>Source: modify.html &nbsp;&nbsp;&nbsp; Last update: 17 June
1997 &nbsp;&nbsp;&nbsp; ArDean Leith</small>
@


1.3
log
@Makfile.inc
@
text
@d1 58
a58 47
<HTML><HTML>
<HEAD>
<TITLE>Adding your own subroutines to SPIDER</TITLE>
</HEAD>

<BODY>
<HR>
     <H3>Adding Your Own Subroutines to SPIDER</H3>

     We have added a set of stub routines to simplify adding your own 
code to SPIDER.  However, you will have to have some knowledge of
Fortran coding to do this.  All subroutines added using these stubs will be
accessed using suboptions of the operation "MY" e.g. "MY TWO".   

     To add your own subroutines:
 <OL>
 <LI>edit <A HREF="../src/mod1.f"><I> src/mod1.f</I></A>
    and add code for accessing your own subroutine 
    (called mymods2.f here).

         <KBD>
         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ELSEIF (FCHAR(4:6) .EQ. 'TWO' THEN     <BR>
         C            USER SUPPLIED OPERATION  "MY TWO"<BR>
         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CALL  MYMODS2(MAXDIM)<BR>
         </KBD>
 <P>
 <LI>create mymods2.f in the SPIDER <I>src</I> directory.  
     We have provided commented sample code in 
      <A HREF="../src/mymods.f"><I> src/mymods.f</I></A>
    that will open an existing input file and a similar sized output 
    file, read code from the input file, process the incoming data 
    and output the processed data to an output file.
 <P>
 <LI>edit <A HREF="../src/Makefile.inc"><I> src/Makefile.inc</I></A> and
 add <I>mymods2</I> to the listing there. 
 <P>
 <LI>Run <I>make</I> to update your SPIDER system.
 <P>
 </OL>
 <P>
<HR> 
<SMALL>
Source: modify.html     &nbsp;&nbsp;&nbsp;  
Last update: 17 June 1997 &nbsp;&nbsp;&nbsp;
ArDean Leith  </SMALL><P>
</BODY>
</HTML>
@


1.2
log
@improved
@
text
@d34 1
a34 1
 <LI>edit <A HREF="../src/make.inc"><I> src/make.inc</I></A> and
d44 1
a44 1
Last update: 30 May 1997 &nbsp;&nbsp;&nbsp;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
<HTML>
d7 1
d22 3
a24 3
                 ELSEIF (FCHAR(4:6) .EQ. 'TWO' THEN
         C            USER SUPPLIED OPERATION  "MY TWO"
                     CALL  MYMODS2(MAXDIM)
d26 1
a26 1

d33 1
a33 1

d36 1
a36 1
 
d38 1
d41 1
a41 1
<HR> <P>
d44 1
a44 1
Last update: 29 May 1997 &nbsp;&nbsp;&nbsp;
a47 1
 
@

head	1.3;
access;
symbols;
locks;
comment	@# @;


1.3
date	2004.07.27.19.56.41;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.27.15.20.38;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	97.05.29.20.12.22;	author leith;	state Exp;
branches;
next	;


desc
@@


1.3
log
@xhtml
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<title>SPIDER: Batch use of SPIDER on UNIX</title>
</head>
<body>
<h2>Batch use of SPIDER on UNIX</h2>

<ul>
<li>Running process in Background. 

<p>Any UNIX command can be run in the background by simply placing
'&amp;' character at end of the command line.</p>

<p>If you want to run a SPIDER procedure called <i>b01.prj</i> in
the background, then place the <i>PROJECT CODE/DATA CODE</i> and
starting procedure file name (without <i>PROJECT CODE</i>) on the
command line for SPIDER. E.g. If your procedure file is in
<i>b01.prj</i>, the procedure can be executed in the background and
the output placed in a file called <i>"outfile"</i> as follows:</p>

<blockquote><kbd>$ spider prj/tom @@b01 &gt; outfile
&amp;</kbd></blockquote>

The system will respond giving PID number for your background
process. Should you want to terminate the process give the
following UNIX command: 

<blockquote><kbd>$ kill &lt;PID number&gt;</kbd></blockquote>

Should you want to suspend and restart the program give the give
the following UNIX commands: 

<blockquote><kbd>$ kill -STOP &lt;PID number&gt;<br>
 $ kill -CONT &lt;PID number&gt;<br>
</kbd></blockquote>

If you forget to start SPIDER in the background and want to place
the SPIDER process in the background while it is running, you can
halt the process with &lt;CTRL-Z&gt; then issue the "bg" command to
restart the process in the background. In the Bourne shell,
processes run in the background are terminated when you logout! To
prevent this use the "nohup" command: 

<blockquote><kbd>$ nohup spider prj/tom @@b01 &gt;outfile
&amp;</kbd></blockquote>

If you run a program in the background and want to retain any error
output you can redirect the error output to a file "errfile" as
follows: 

<blockquote><kbd>$ nohup spider prj/tom @@b01 &gt;outfile
2&gt;errfile &amp;</kbd></blockquote>

<p></p>
</li>

<li>Scheduling a process. 

<p>On Unix, to start SPIDER (or any given string of commands, for
that matter) at given date &amp; hour one can use the UNIX
<i>'at'</i> command (for exact format type <i>man at'</i> on your
UNIX machine):</p>

<blockquote><kbd>$ at 7:12pm Jan 22<br>
 $ SPIDER_LOC/spider prj/tom @@b01 &lt; start_up &gt; outfile<br>
 date &gt; done_at_this_time<br>
 ^D<br>
</kbd></blockquote>

<p></p>
</li>

<li>Queues. 

<p>Queues can be set up for different scheduling regimes if needed.
Until then you can ensure that your programs are run in desired
order by putting them in the desired order in the <i>"at"</i>
string of commands)</p>
</li>
</ul>

<p></p>

<hr>
<p><small>Source: user_doc.html &nbsp;&nbsp;&nbsp; Last update: 27
March 2001 &nbsp;&nbsp;&nbsp; ArDean Leith</small></p>
</body>
</html>

@


1.2
log
@updated
@
text
@d1 90
a90 92
<HTML>
<HEAD>
<TITLE>SPIDER: Batch use of SPIDER on UNIX</TITLE>
</HEAD>

<BODY>

<H2>Batch use of SPIDER on UNIX</H2>

<UL>
 <LI>Running process in Background.
        <P>
       Any UNIX command can be run in the background by simply 
       placing '&' character at end of the command line.<P>

       If you want to run a SPIDER procedure called <I>b01.prj</I> in
       the background, then place the <I>PROJECT CODE/DATA CODE</I> and
       starting procedure file name  (without <I>PROJECT CODE</I>) on
       the command line for SPIDER. E.g. If your procedure file is in
       <I>b01.prj</I>, the procedure can be executed in the background and
       the output placed in a file called <I>"outfile"</I> as follows:

        <BLOCKQUOTE><KBD>
        $ spider prj/tom @@b01  &gt; outfile &amp; 
        </KBD></BLOCKQUOTE>

       The system will respond giving PID number for 
       your background process.  Should you want to terminate the 
       process give the following UNIX command:

       <BLOCKQUOTE><KBD>
       $ kill  &lt;PID number&gt; 
       </KBD></BLOCKQUOTE>
            
       Should you want to suspend and restart the program give the
       give the following UNIX commands:
       <BLOCKQUOTE><KBD>
            $ kill  -STOP &lt;PID number&gt; <BR>
            $ kill  -CONT &lt;PID number&gt; <BR>
       </KBD></BLOCKQUOTE>

       If you forget to start SPIDER in the background and want to
       place the SPIDER process in the background while it is running,  you
       can halt the process with &lt;CTRL-Z&gt; then issue the "bg" command
       to restart the process in the background.

       In the Bourne shell, processes run in the background are 
       terminated when you logout!  To prevent this use the "nohup"
       command:

       <BLOCKQUOTE><KBD>
       $ nohup spider prj/tom @@b01  &gt;outfile &amp;
       </KBD></BLOCKQUOTE>

       If you run a program in the background and want to retain
       any error output you can redirect the error output to a file
       "errfile" as follows:

       <BLOCKQUOTE><KBD>      
       $ nohup spider prj/tom @@b01  &gt;outfile 2&gt;errfile &amp;
       </KBD></BLOCKQUOTE>

       <P>
       <LI>Scheduling a process.
       <P>On Unix, to start SPIDER (or any given string of commands, for that 
       matter) at given date & hour one can use the UNIX <I>'at'</I> command 
       (for exact format type <I>man at'</I> on your UNIX machine):

       <BLOCKQUOTE><KBD>
       $ at 7:12pm Jan 22 <BR>
       $ SPIDER_LOC/spider prj/tom @@b01 &lt; start_up &gt; outfile <BR>
       date &gt;  done_at_this_time <BR>
       ^D<BR>
       </KBD></BLOCKQUOTE>

       <P>
       <LI>Queues.
       <P>
       Queues can be set up for different scheduling regimes if 
       needed.  Until then you can ensure that your programs are 
       run in desired order by putting them in the desired order in 
       the <I>"at"</I> string of commands)

	</UL>
        <P>


<HR> <P><SMALL>
Source:      user_doc.html  &nbsp;&nbsp;&nbsp;  
Last update: 27 March 2001  &nbsp;&nbsp;&nbsp;
ArDean Leith  </SMALL><P>
</BODY>
a91 1
</HTML>
@


1.1
log
@Initial revision
@
text
@d10 2
a11 2
	<UL>
	<LI>Running process in Background.
d13 2
a14 14
       You can run SPIDER programs in the background (similar to using
       batch queues on VMS machines).  Since any UNIX command can be
       run in the background by simply placing '&' character at end of 
       the command line there are no special scripts necessary.
       There is only one version of SPIDER as well (no distinction
       between interactive and batch versions, driver and SPIDER).

       If you want to run a familiar batch program with do-loops 
       such as in VAX/VMS SPIDER then use a ordinary SPIDER batch file
       and place the DATA CODE and starting batch file name 
       (without DATA CODE) on the command line for SPIDER, e.g. 
       if your batch file is in B01.TOM the program can executed 
       in the background and the output placed in a file called
       "outfile" as follows:
d16 7
d24 1
a24 1
        $ spider TOM B01  &gt; outfile &amp; 
d27 1
a27 1
       In either case the system will respond giving PID number for 
d29 1
a29 1
       program give the following UNIX command:
d43 1
a43 1
       place the process in the background while it is running,  you
d52 1
a52 1
       $ nohup spider TOM B01  &gt;outfile &amp;
d60 1
a60 1
       $ nohup spider TOM B01  &gt;outfile 2&gt;errfile &amp;
d65 3
a67 4
       <P>
       To start Spider (or any given string of commands, for that 
       matter) at given date & hour one has to use UNIX 'at' command 
       (for exact format please type 'man at' on your UNIX machine):
d71 1
a71 1
       $ SPIDER_LOC/spider TOM B01 &lt; start_up &gt; outfile <BR>
d82 1
a82 1
       the "at" string of commands)
d87 5
a91 1
<HR> Last updated on 05/17/96 al
@

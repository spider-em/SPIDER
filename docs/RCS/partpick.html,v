head	1.24;
access;
symbols;
locks;
comment	@# @;


1.24
date	2018.12.31.17.08.42;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2008.02.07.16.44.15;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2006.09.13.12.42.40;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2004.09.10.15.39.05;	author bimal;	state Exp;
branches;
next	1.20;

1.20
date	2004.07.29.14.10.23;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2004.06.24.15.34.07;	author bimal;	state Exp;
branches;
next	1.18;

1.18
date	2004.06.24.14.47.52;	author bimal;	state Exp;
branches;
next	1.17;

1.17
date	2003.10.23.20.36.24;	author bimal;	state Exp;
branches;
next	1.16;

1.16
date	2003.10.23.20.31.44;	author bimal;	state Exp;
branches;
next	1.15;

1.15
date	2003.10.23.19.24.46;	author bimal;	state Exp;
branches;
next	1.14;

1.14
date	2003.10.23.15.58.07;	author bimal;	state Exp;
branches;
next	1.13;

1.13
date	2003.10.23.15.50.46;	author bimal;	state Exp;
branches;
next	1.12;

1.12
date	2003.07.29.16.31.34;	author bbaxter;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.30.16.12.35;	author bimal;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.30.16.01.23;	author bimal;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.23.13.28.33;	author bimal;	state Exp;
branches;
next	1.8;

1.8
date	2003.05.07.20.12.03;	author bimal;	state Exp;
branches;
next	1.7;

1.7
date	2003.05.07.19.12.24;	author bimal;	state Exp;
branches;
next	1.6;

1.6
date	2003.05.07.18.16.17;	author bimal;	state Exp;
branches;
next	1.5;

1.5
date	2003.05.07.18.15.07;	author bimal;	state Exp;
branches;
next	1.4;

1.4
date	2003.05.07.18.11.30;	author bimal;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.07.18.05.30;	author bimal;	state Exp;
branches;
next	1.2;

1.2
date	2000.11.06.16.09.57;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2000.11.03.20.32.00;	author leith;	state Exp;
branches;
next	;


desc
@new
@


1.24
log
@recon1a links,  cosmetic
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
<head>
   <title>Picking Particles from Micrographs</title>
</head>

<body>
<h2 align="center">Picking Particles from Micrographs</h2>

<hr />

<p>Picking particles from micrographs can be done in several ways:
"by hand"; i.e., interactively using 
<a href="../../web/docs/web.html">Web</a>, or by an automated procedure. At
this stage, the micrograph is normally presented on the screen in a
decimated form: for instance, only every second pixel is displayed,
so that the entire micrograph can be done in one round. The "hand"
procedure results in center coordinates of the selected particles
stored in a document file. The automated procedure (which works
best with globular particles) starts with a low-pass filtered
version of the micrograph or, what amounts to the same thing, the
result of cross-correlating the micrograph with a disk that has the
approximate size of the particle. Peak search then yields, again, a
list of center coordinates of particle candidates stored in a
document file.</p>

<p>The document file can be subsequently used to window particle
candidates from the large, undecimated micrograph file into many
small files. This is done by using a small SPIDER procedure that has a
Do-Loop over all particles and selects windows at coordinates that
are calculated from the stored coordinates, taking into account the
offset (since top left coos are needed by the windowing operation)
and the decimation factor.</p>

<p>Sample SPIDER procedure file (for the case of no decimation):</p>

<pre>
; ----- Parameters -----
[image-dim] = 64            ; Image dimension
[part]      = 1             ; First-particle number
 
; ------ Inputs -------
FR L
  [micrograph]mic001        ; Micrograph
FR L
  [coords_doc]doccoords001  ; Coordinates document file

;  ------- Output -------
FR L
  -
  [win]win{***[part]}       ; Windowed-image template

; -- END BATCH HEADER --

[half-dim] = [image-dim]/2

; Get number of keys
UD N [num-keys]
  [coords_doc]

; Do-loop running over index = key
DO [key] = 1,[num-keys]
    ; Unsave document, in-core, key, x-coord, y-coord
    UD IC, [key],[xcoord],[ycoord]
      [coords_doc]

    ; Compute top left coordinates for window operation (WI)
    [topleft-x] = [xcoord] - [half-dim]
    [topleft-y] = [ycoord] - [half-dim]

    ; Window
    WI
      [micrograph]             ; INPUT: micrograph
      [win]                    ; OUTPUT: windowed-image template
      [image-dim],[image-dim]  ; image dimensions, in x,y
      [topleft-x],[topleft-y]  ; top-left coordinates

    ; Increment particle number
    [part] = [part] + 1
ENDDO                          ; End loop

; Close in-core document file
UD ICE
  [coords_doc]

EN                             ; End of SPIDER procedure file
</pre>

<br />
<br />
 

<p>Examples for more sophisticated procedures, taking into account
decimation, checking margins, and applying a density ramp
corrections, can be found in  
<a href="./techs/recon1a/Docs/mr1.html">Techniques - 3D Reconstruction Using Projection Matching</a></p>

<p>The next step is to apply a screening procedure, which again can
be done interactively or in an automated way. Screening is
necessary since the decimated raw file does not allow a final
assessment of the quality. It is definitely needed if the particles
were picked automatically, since they were only selected by the
computer on account of their overall features (diameter).</p>

<p>Screening by hand is done by using the "categorize" option of <a
href="../../web/docs/web.html">Web</a>. This allows a gallery of
the selected particles to be displayed, and each particle to be
marked or categorized according to its quality. Most of the time,
"accept" and "reject" are the only categories used. According to
this classification, a flag is set in the output document file.</p>

<p>Another way of screening follows the method introduced by Lata
and coworkers (Ultramicroscopy 58 (1995) 381-391): particles are <a
href="./autopartpick.html">automatically classified</a> according
to texture descriptors. This is however not straightforward since
the parameters of the texture descriptors vary with the data. A
training procedure has to be followed first, in which, with the
help of a small particle subset and the "categorize option" in <a
href="../../web/docs/web.html">Web</a>, the user "trains" the
program in the use of the categories "noise", "good particle", and
"junk". On this basis, the texture descriptors are computed, which
are then used by the program to screen the data. This obviously
only makes sense if the data set to be screened is large.</p>

<p><a name="LFC"></a></p>

<h3>Local Fast Correlation</h3>

<p>Bimal Rath has developed a SPIDER procedure 
<a href="./techs/recon1a/Procs/pickparticle.spi">pickparticle.spi</a> to
automatically pick particles from a micrograph (B.K. Rath and J.
Frank, Journal of Structural Biology, Volume 145, Issues 1-2,
January 2004, Pages 84-90). The procedure uses local
cross-correlation function calculated using Fourier methods
outlined by Alan Roseman (Ultramicroscopy, Vol 94, Issues 3-4,
(2003), 225-236). The local normalization optimizes the numerical
scaling of the search image and hence search results are very
accurate. Since most of the computations are done in Fourier space
the computation time is of the order of few minutes. Currently, the
procedure needs a 3D volume of the search image(as input) to
generate projections at desired Eulerian angles for searching
different orientations of the search image in the micrograph.
Different input parameters can be used, to apply desired
interpolation, to choose types of mask (symmetric or asymmetric),
to use SPIDER selection doc files (as Eulerian angles input) and to
use average of a number of projections as template image. The
procedure can be accessed by typing @@pickparticle at the SPIDER
prompt or inside any SPIDER procedure file. Two sets of input
parameters follow as examples. Note: For picking ribosomes from
micrographs one may use a zero degree projection, a symmetric mask
and an interpolation factor of 2. It works quite well.</p>

<p>SET 1 : Takes a set of projections as template, interpolates
down to half and uses a symmetric mask.</p>

<pre>
micro001           ; Micrograph 
refvol001          ; 3d volume of the particle
noise              ; A noise image used to normalize the images as per histogram
particle           ; Windowed particle template
101                ; Starting particle number for windowed particles
annotate           ; Document file with particle co-ordinate
0                  ; Selection file is NOT used
0                  ; PHI start value
10                 ; PHI end value
2                  ; PHI step size
20                 ; THETA start value
50                 ; THETA end value
4                  ; THETA step size
30                 ; PSI start value
40                 ; PSI end value
5                  ; PSI step size
2                  ; Interpolation factor
20000              ; No of peaks to be searched (arbitrary; see Notes (I))
130                ; Peak separation distance (size of the paticle; see Notes (II))
1                  ; Symmetric mask is used

</pre>

<br />
<br />
 

<p>SET 2 : Takes a selection doc file to create projections as
   template, interpolates down to half and uses an asymmetric
   mask.</p>

<pre>
micro001           ; Micrograph 
refvol001          ; 3d volume of the particle
noise              ; A noise image used to normalize the images as per histogram
particle           ; Windowed particle template
101                ; Starting particle number for windowed particles
annotate           ; Document file with particle co-ordinate
1                  ; Selection file is used
0                  ; Each projection is used, average image is NOT used
2                  ; Interpolation factor
20000              ; No of peaks to be searched (arbitrary; see Notes (I))
130                ; Peak separation distance (size of the particle; see Notes (II))
0                  ; Asymmetric mask is used
50                 ; Masking threshold pixel value
seldoc             ; Selection file name
</pre>

<br />
<br />
 

<pre>
NOTES: (I)  Decrease this # if too many picked-particles correspond to noise; 
            Increase this number if the last dozen of picked-particles correspond
            to correct particles)

       (II) Only one particle will be picked from an area of a square with sides
            equal to these many pixels (130, in this case) around a 
            cross-correlation coefficient peak.
</pre>

<hr />
<p><small>Source: partpick.html &nbsp;&nbsp;&nbsp; 
          Updated: 02/08/08     &nbsp;&nbsp;&nbsp; 
   </small></p>

</body>
</html>

@


1.23
log
@docfile name missing, used Tapu's proc now
@
text
@d8 1
a8 1
<h2 align="CENTER">Picking Particles from Micrographs</h2>
d10 1
a10 1
<hr>
d39 3
a41 3
[image-dim] = 64          ; Image dimension
[part]      = 1           ; First-particle number

d44 1
a44 1
[micrograph]mic001        ; Micrograph
d46 1
a46 1
[coords_doc]doccoords001  ; Coordinates document file
d50 2
a51 2
-
[win]win{***[part]}       ; Windowed-image template
d59 1
a59 1
[coords_doc]
d62 1
a62 1
DO LB1 [key] = 1,[num-keys]
d65 1
a65 1
    [coords_doc]
d73 4
a76 4
    [micrograph]             ; INPUT: micrograph
    [win]                    ; OUTPUT: windowed-image template
    [image-dim],[image-dim]  ; image dimensions, in x,y
    [topleft-x],[topleft-y]  ; top-left coordinates
d78 1
a78 1
    ; increment particle number
d80 1
a80 2
LB1
; End loop
d84 1
a84 1
[coords_doc]
d86 1
a86 1
EN                       ; end of SPIDER procedure file
d89 2
a90 2
<br>
<br>
d95 2
a96 3
corrections, can be found in Techniques - 3d Reconstruction Using
Projection Matching <a href="./techs/recon/mr.html">Techniques - 3D
Reconstruction Using Projection Matching</a></p>
d129 2
a130 2
<p>Bimal Rath has developed a SPIDER procedure <a href=
"./techs/recon/newprogs/pickparticle.spi">pickparticle.bat</a> to
d180 2
a181 2
<br>
<br>
d185 2
a186 2
template, interpolates down to half and uses an asymmetric
mask.</p>
d205 2
a206 2
<br>
<br>
d219 4
a222 3
<hr>
<p><small>Source: partpick.html &nbsp;&nbsp;&nbsp; Updated:
02/08/08 &nbsp;&nbsp;&nbsp; </small></p>
@


1.22
log
@procedure
@
text
@d38 48
a85 2
DO LB1 X10 = 1, 100      ; do-loop running over index = key
   UD IC, X10, X20, X21  ; unsave document, in-core, key, X-coo, Y-coo
a86 10
   X30 = X20 - 32        ; compute top left coordinates for window operation             
   X31 = X21 - 32

   WI                    ; window operation
   MIC001                ; name of file containing micrograph
   WIN{***X10}           ; template for file names: WIN001 ... WIN100
   (64,64)               ; dimensions of window  (parentheses 
                         ;     necessary; see Users Guide)
   X30, X31              ; top left coos, as calculated above
LB1                      ; end of do-loop
d159 1
a159 1
micro001           ; micrograph 
d161 5
a165 5
noise              ; a noise image used to normalize the images as per histogram
particle           ; windowed particle template
101                ; starting particle number for windowed particles
annotate           ; document file with particle co-ordinate
0                  ; selection file is NOT used
d175 4
a178 4
2                  ; interpolation factor
20000              ; no of peaks to be searched (arbitrary; see Notes (I))
130                ; peak separation distance (size of the paticle; see Notes (II))
1                  ; symmetric mask is used
d191 1
a191 1
micro001           ; micrograph 
d193 12
a204 12
noise              ; a noise image used to normalize the images as per histogram
particle           ; windowed particle template
101                ; starting particle number for windowed particles
annotate           ; document file with particle co-ordinate
1                  ; selection file is used
0                  ; each projection is used, average image is NOT used
2                  ; interpolation factor
20000              ; no of peaks to be searched (arbitrary; see Notes (I))
130                ; peak separation distance (size of the particle; see Notes (II))
0                  ; asymmetric mask is used
50                 ; masking threshold pixel value
seldoc             ; selection file name
a218 1

d223 2
a224 1
06/24/04 &nbsp;&nbsp;&nbsp; Bimal Rath</small></p>
@


1.21
log
@changed file extension for pickparticle.*** procedure file
@
text
@d4 1
a4 2
<meta name="generator" content="HTML Tidy, see www.w3.org">
<title>Picking Particles from Micrographs</title>
d6 1
d11 1
d13 2
a14 2
"by hand"; i.e., interactively using <a href=
"../../web/docs/web.html">Web</a>, or by an automated procedure. At
d29 1
a29 1
small files. This is done by using a small batch file that has a
d35 1
a35 1
<p>Sample batch file (for the case of no decimation):</p>
d51 1
a51 1
EN                       ; end of batch file
d114 1
a114 1
prompt or inside any SPIDER batch file. Two sets of input
@


1.20
log
@xhtml
@
text
@d95 1
a95 1
"./techs/recon/newprogs/pickparticle.bat">pickparticle.bat</a> to
@


1.19
log
@particle picking reference JSB
@
text
@d1 13
a13 16
<HTML>

<HEAD>
<TITLE>Picking Particles from Micrographs</TITLE>
</HEAD>

<BODY>

<H2 ALIGN="CENTER">Picking Particles from Micrographs</H2> 
<HR>

<P>
Picking particles from micrographs can be done in several ways: "by
hand"; i.e., interactively using 
<A HREF="../../web/docs/web.html">Web</A>, or by an automated 
procedure.  At
d15 2
a16 2
decimated form: for instance, only every second pixel is displayed, so
that the entire micrograph can be done in one round.  The "hand"
d18 19
a36 18
stored in a document file.  The automated procedure (which works best
with globular particles) starts with a low-pass filtered version of the
micrograph or, what amounts to the same thing, the result of
cross-correlating the micrograph with a disk that has the approximate
size of the particle.  Peak search then yields, again, a list of center
coordinates of particle candidates stored in a document file.
</P>

<P>The document file can be subsequently used to window particle
candidates from the large, undecimated  micrograph file into many small
files.  This is done by using a small batch file that has a Do-Loop
over all particles and selects windows at coordinates that are calculated from
the stored coordinates, taking into account the offset (since top left
coos are needed by the windowing operation) and the decimation factor.
</P>
<P>
Sample batch file (for the case of no decimation):
<PRE>
d51 1
a51 2
</PRE>
</P>
d53 39
a91 37
<P>Examples for more sophisticated procedures, taking into account
decimation, checking margins, and applying a density ramp corrections,
can be found in Techniques - 3d Reconstruction Using Projection Matching
<A HREF="./techs/recon/mr.html">Techniques - 3D Reconstruction Using Projection Matching</A>
</P>

<P>The next step is to apply a screening procedure, which again can be
done interactively or in an automated way.  Screening is necessary
since the decimated raw file does not allow a final assessment of the
quality.  It is definitely needed if the particles were picked
automatically, since they were only selected by the computer on account
of their overall features (diameter).
</P>

<P>Screening by hand is done by using the "categorize" option of 
<A HREF="../../web/docs/web.html">Web</A>.
This allows a gallery of the selected particles to be displayed, and
each particle to be marked or categorized according to its quality.
Most of the time, "accept" and "reject" are the only categories used.
According to this classification, a flag is set in the output document
file. </P>

<P>Another way of screening follows the method introduced by Lata and
coworkers (Ultramicroscopy 58 (1995) 381-391): particles are 
<A HREF="./autopartpick.html">automatically classified</A> 
according to texture descriptors. This is however not straightforward
since the parameters of the texture descriptors vary with the data.  A
training procedure has to be followed first, in which, with the help of
a small particle subset and the "categorize option" in 
<A HREF="../../web/docs/web.html">Web</A>, the user
"trains" the program in the use of the categories "noise", "good
particle", and "junk".  On this basis, the texture descriptors are
computed, which are then used by the program to screen the data.  This
obviously only makes sense if the data set to be screened is large.
</P>
<p>
<a name="LFC"></a>
d93 24
a116 24
<p>
<P>Bimal Rath has developed a SPIDER procedure <a href="./techs/recon/newprogs/pickparticle.bat">pickparticle.bat</a> 
to automatically pick particles from a micrograph (B.K. Rath and J. Frank, Journal of Structural Biology, Volume 145, 
Issues 1-2, January 2004, Pages 84-90).  The procedure uses local 
cross-correlation function calculated using Fourier methods outlined by Alan Roseman 
(Ultramicroscopy, Vol 94, Issues 3-4, (2003), 225-236). The local normalization 
optimizes the numerical scaling of the search image and hence search results 
are very accurate. Since most of the computations are done in Fourier space 
the computation time is of the order of few minutes. Currently, the procedure 
needs a 3D volume of the search image(as input) to generate projections at 
desired Eulerian angles for searching different orientations of the search
image in the micrograph. Different input parameters can be used, to apply 
desired interpolation, to choose types of mask (symmetric or asymmetric),
to use SPIDER selection doc files (as Eulerian angles input) and to use average
of a number of projections as template image. The procedure can be accessed
by typing @@pickparticle at the SPIDER prompt or inside any SPIDER batch
file. Two sets of input parameters follow as examples. Note: For picking
ribosomes from micrographs one may use a zero degree projection, a symmetric 
mask and an interpolation factor of 2. It works quite well. 

</P>
<P>
SET 1 : Takes a set of projections as template, interpolates down to half and
 uses a symmetric mask. 
d118 4
a121 1
<PRE>
d143 9
a151 5
</PRE>
</P>
<P>
SET 2 : Takes a selection doc file to create projections as template, 
 interpolates down to half and uses an asymmetric mask. 
d153 1
a153 1
<PRE>
d168 7
a174 3
</PRE>
</P>
<PRE>
d183 7
a189 8
</PRE>
<HR>
<P><SMALL>
Source: partpick.html &nbsp;&nbsp;&nbsp;
Updated: 06/24/04      &nbsp;&nbsp;&nbsp;
Bimal Rath
</SMALL>
</BODY>
a190 1
</HTML>
@


1.18
log
@updated the input parameters for pickparticle.spi
@
text
@d96 1
a96 1
to automatically pick particles from a micrograph (Journal of Structural Biology, Volume 145, 
@


1.17
log
@*** empty log message ***
@
text
@d96 2
a97 1
to automatically pick particles from a micrograph. The procedure uses local 
d122 1
d150 1
d177 2
a178 2
Updated: 10/23/03      &nbsp;&nbsp;&nbsp;
Joachim Frank
@


1.16
log
@*** empty log message ***
@
text
@d161 1
a161 1

d170 1
a170 1

d174 1
a174 1
Updated: 11/06/00      &nbsp;&nbsp;&nbsp;
@


1.15
log
@*** empty log message ***
@
text
@d135 2
a136 2
20000              ; no of peaks to be searched (arbitrary; decrease this # if too many picked-particles correspond to noise; increase this number if the last dozen of picked-particles correspond to correct particles)
130                ; peak separation distance (Only one particle will be picked from an area of a square with sides equal to these many pixels (130, in this case) around a cross-correlation coefficient peaksize of the particle)
d154 2
a155 2
20000              ; no of peaks to be searched (arbitrary)
130                ; peak separation distance (size of the particle)
d161 9
@


1.14
log
@*** empty log message ***
@
text
@d135 2
a136 2
20000              ; no of peaks to be searched (arbitrary)
130                ; peak separation distance (size of the particle)
@


1.13
log
@*** empty log message ***
@
text
@d95 1
a95 1
<P>Bimal Rath has developed a SPIDER procedure <a href="./newprogs/pickparticle.bat">pickparticle.bat</a> 
@


1.12
log
@added header "Local Fast Correlation" and local name #LFC
@
text
@d95 3
a97 3
<P>Bimal Rath has developed a SPIDER procedure to automatically pick 
particles from a micrograph. The procedure uses local cross-correlation
function calculated using Fourier methods outlined by Alan Roseman 
@


1.11
log
@*** empty log message ***
@
text
@d91 5
a95 2

<P>Recently Bimal Rath has developed a SPIDER procedure to automatically pick 
d98 1
a98 1
(Ultramicroscopy, Issues 3-4, (2003), 225-236). The local normalization 
d105 1
a105 1
desired interpolation, to choose types of mask (symmetric or asymetric),
d111 1
a111 1
mask and an interpolation factor of 2. It works quite good. 
@


1.10
log
@changed input parameters for illustration only
@
text
@d106 3
a108 1
file. Two sets of input parameters follow as examples.
d112 1
a112 1
SET 1 : Takes a 0 degree projection as template, interpolates down to half and
@


1.9
log
@*** empty log message ***
@
text
@d121 8
a128 8
0                  ; PHI end value
0                  ; PHI step size
0                  ; THETA start value
0                  ; THETA end value
0                  ; THETA step size
0                  ; PSI start value
0                  ; PSI end value
0                  ; PSI step size
@


1.8
log
@*** empty log message ***
@
text
@d92 1
a92 1
<P>Recently Bimal has developed a SPIDER procedure to automatically pick 
@


1.7
log
@*** empty log message ***
@
text
@d133 1
a133 1
50                 ; masking threshold pixel value
@


1.6
log
@*** empty log message ***
@
text
@d144 1
@


1.5
log
@*** empty log message ***
@
text
@d152 1
a152 1
../../seldoc          ; selection file name
@


1.4
log
@*** empty log message ***
@
text
@d111 1
a111 1
------  uses a symmetric mask. 
d138 1
a138 1
------  interpolates down to half and uses an asymmetric mask. 
@


1.3
log
@added @@pickparticle documentation
@
text
@d108 2
d113 1
d134 3
a136 1

d140 1
d153 1
a153 1

a154 1

@


1.2
log
@added stuff
@
text
@d92 59
@


1.1
log
@Initial revision
@
text
@d32 1
a32 1
over all particles and windows at coordinates that are calculated from
d37 1
a37 1
Sample batch file:
d56 6
d79 1
a79 1
coworkers (????): particles are 
d95 1
a95 1
Updated: 11/03/00      &nbsp;&nbsp;&nbsp;
@

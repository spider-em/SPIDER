head	1.26;
access;
symbols;
locks;
comment	@# @;


1.26
date	2013.10.30.14.09.00;	author leith;	state Exp;
branches;
next	1.25;

1.25
date	2013.10.29.13.37.26;	author leith;	state Exp;
branches;
next	1.24;

1.24
date	2012.01.06.17.43.35;	author leith;	state Exp;
branches;
next	1.23;

1.23
date	2011.08.02.19.06.00;	author leith;	state Exp;
branches;
next	1.22;

1.22
date	2009.09.16.12.37.19;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2009.05.22.17.07.55;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2007.01.02.14.18.13;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2004.11.04.20.50.17;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2004.10.06.12.59.02;	author bbaxter;	state Exp;
branches;
next	1.17;

1.17
date	2004.07.29.13.51.35;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2003.02.28.21.22.31;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2003.01.24.13.56.21;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2002.12.17.15.40.16;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2002.01.30.16.13.12;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2001.01.18.19.35.12;	author bbaxter;	state Exp;
branches;
next	1.11;

1.11
date	2000.09.18.13.28.08;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	99.08.23.17.05.57;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	99.05.27.16.23.07;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	99.04.12.15.43.25;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	99.02.01.15.12.11;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	99.01.27.19.58.34;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	98.01.14.15.24.08;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	97.12.19.14.44.37;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	97.07.25.14.05.46;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	97.06.18.16.54.05;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	97.05.29.20.13.35;	author leith;	state Exp;
branches;
next	;


desc
@@


1.26
log
@48-76 for local transforms
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
<head>
  <title>SPIDER: Image file format</title>
</head>

<body>
<h2 align="center">Format of SPIDER 2D and 3D image files</h2>

<p>SPIDER uses <i>NX</i> to denote number of pixels (voxels) per
  row, <i>NY</i> to denote number of rows, and <i>NZ</i> to
  denote the number of slices or planes in a volume. A 2D image is
  considered to be a single slice of a volume.   The
  first pixel in an image represents the upper left corner of the
  image.  (Note: this is <b>important</b> for correct handedness 
  when converting volumes.)
  All SPIDER image files consist of unformatted, direct access records. 
  Each record contains NX 4-byte words which are stored as floating point numbers.
</p>

<p>There are three types of SPIDER image files: Simple images/volumes. 
   Image stack files, and Indexed image stack files.
</p>
<p />

<p>The image data is preceeded by a header. 
  There are <i>LABREC</i> records in the header, where LABREC = ceiling of (256/NX).  
  Note that the total length of the header in SPIDER images is always &gt;=
  1024 bytes and is calculated as follows (in FORTRAN) when a new
  SPIDER image is created:
</p>

<p><blockquote><kbd>LENBYT = NX * 4           <br />
 LABREC = 1024 / LENBYT                          <br />
 IF (MOD(1024,LENBYT) .NE. 0) LABREC = LABREC + 1<br />
 LABBYT = LABREC * LENBYT                        <br />
</kbd></blockquote>
</p>

<p>
Where <i>LENBYT</i> is the record length in bytes, and the
<i>MOD</i> function returns the remainder of dividing <i>1024</i>
by <i>LENBYT</i>.  This variable length header is used for
compatibility with FORTRAN direct access unformatted file I/O.
</p>

<p>
<h3 align="center">Current Layout of the SPIDER Header (Label) Record</h3>
</p>

<p>
<table border="1" cellpadding="4">
   <tr> <th>Location</th> <th>Name</th> <th>Content</th> </tr>

   <tr><td> 1</td><td>NZ</td>  <td> Number of slices (planes) in volume (=1 for an image)
      <small> In some ancient 2D images this may be -1) </small>                </td></tr>

   <tr><td> 2</td><td>NY</td>    <td> Number of rows per slice.                 </td></tr>

   <tr><td> 3</td><td>IREC</td>    <td> Total number of records (including header records) 
            in each image of a simple image or stacked image file.              </td></tr>

   <tr><td> 4</td><td>UNUSED</td><td>Unassigned                                 </td></tr>

   <tr><td> 5</td><td>IFORM</td>   <td> File type specifier.
   <table border="1" cellpadding="8">
      <tr> <td></td> </tr>
      <tr> <td align="middle">  1</td>  <td>R</td>  <td>2D image.               </td></tr>
      <tr> <td align="middle">  3</td>  <td>R</td>  <td>3D volume.              </td></tr>
      <tr> <td align="middle">-11</td>  <td>FO</td> <td><a href="./fourier.html">2D Fourier, odd </a></td> </tr>
      <tr> <td align="middle">-12</td>  <td>FE</td> <td><a href="./fourier.html">2D Fourier, even</a></td> </tr>
      <tr> <td align="middle">-21</td>  <td>FO</td> <td><a href="./fourier.html">3D Fourier, odd </a></td> </tr>
      <tr> <td align="middle">-22</td>  <td>FE</td> <td><a href="./fourier.html">3D Fourier, even</a></td> </tr>
   </table>
   </td></tr>

   <tr><td> 6</td><td>IMAMI</td><td>Maximum/minimum flag = 0 when the file is
      created, and = 1 when the maximum, minimum, average, and standard
      deviation have been computed and stored into this header record
      (see following locations).                                                 </td></tr>

   <tr><td> 7</td><td>FMAX</td>    <td>Maximum data value.                       </td></tr>

   <tr><td> 8</td><td>FMIN</td>    <td>Minimum data value.                       </td></tr>

   <tr><td> 9</td><td>AV</td>      <td>Average data value.                       </td></tr>

   <tr><td>10</td><td>SIG</td>     <td>Standard deviation of data. A value of 
          -1.0 or 0.0  indicates that SIG has not been computed.                 </td></tr>

   <tr><td>11</td><td>UNUSED</td>  <td>No longer used.                           </td></tr>

   <tr><td>12</td><td>NX</td>      <td>Number of pixels (samples) per line.      </td></tr>

   <tr><td>13</td><td>LABREC</td>  <td>Number of records in file header (label). </td></tr>

   <tr><td>14</td><td>IANGLE</td>  <td>Flag that following three tilt angles are present.</td></tr>

   <tr><td>15</td><td>PHI</td>     <td>Tilt angle: phi (See note #2 below).      </td></tr>

   <tr><td>16</td><td>THETA</td>   <td>Tilt angle: theta.                        </td></tr>

   <tr><td>17</td><td>GAMMA</td>   <td>Tilt angle: gamma (also called psi).      </td></tr>

   <tr><td>18</td><td>XOFF</td>    <td>X translation.                            </td></tr>

   <tr><td>19</td><td>YOFF</td>    <td>Y translation.                            </td></tr>

   <tr><td>20</td><td>ZOFF</td>    <td>Z translation.                            </td></tr>

   <tr><td>21</td><td>SCALE</td>   <td>Scale factor.                             </td></tr>

   <tr><td>22</td><td>LABBYT</td>  <td>Total number of bytes in header.          </td></tr>

   <tr><td>23</td><td>LENBYT</td>  <td>Record length in bytes.                   </td></tr>

   <tr><td>24</td><td>ISTACK/<br/>MAXINDX</td><td>Position has a value of <i>0</i> in 
       simple 2D or 3D (non-stack) files. In an "image stack" there is one overall
       stack header followed by a stack of images, in which each image has
       its own image header.  A value of
       <i>&gt;0</i> in this position in the overall stack header indicates
       a stack of images. A value of <i>&lt;0</i> in this position in the
       overall stack header indicates an indexed stack of images and gives
       the maximum image number (MAXINDX) allowed in the index.                  </td></tr>

   <tr><td>25</td><td>UNUSED</td><td>Unused now. Prior to release
      <i>9.0</i>, a '-1' at this location in an overall stack indicated a
      valid stack and in the stacked images, a value of 1 indicated that
      this image was in use (existed).</td></tr>

   <tr><td>26</td><td>MAXIM</td><td>Position is only used in the overall header 
      for a stacked image file. There, this position contains the number of the
      highest image currently used in the stack. This number is updated,
      if necessary, when an image is added or deleted from the stack.            </td></tr>

   <tr><td>27</td><td>IMGNUM</td><td>Position is only used 
      in a stacked image header. There, this position contains the number
      of the current image or zero if this image is unused.                      </td></tr>

   <tr><td>28</td><td>LASTINDX</td><td>Position is only used 
      in overall header of indexed stacks. There, this position is 
      the highest index location currently in use.                               </td></tr>

   <tr><td>29</td><td>UNUSED</td><td>Unassigned                                  </td></tr>

   <tr><td>30</td><td>UNUSED</td><td>Unassigned                                  </td></tr>

   <tr><td>31</td><td>KANGLE</td><td>Flag that additional rotation angles 
      follow in header.   
      1 = one additional angle set is present, 2 = two additional angle sets.    </td></tr>

   <tr><td>32</td><td>PHI1</td>       <td>Angle.                                 </td></tr>

   <tr><td>33</td><td>THETA1</td>     <td>Angle.                                 </td></tr>

   <tr><td>34</td><td>PSI1</td>       <td>Angle.                                 </td></tr>

   <tr><td>35</td><td>PHI2</td>       <td>Angle.                                 </td></tr>

   <tr><td>36</td><td>THETA2</td>     <td>Angle.                                 </td></tr>

   <tr><td>37</td><td>PSI2</td>       <td>Angle.                                 </td></tr>


   <tr><td>38</td><td>PIXSIZ</td>     <td>Pixel size (Angstroms).                </td></tr>

   <tr><td>39</td><td>EV</td>         <td>Electron voltage used.                 </td></tr>

   <tr><td>40</td><td>PROJ</td>       <td>Project number.                        </td></tr>

   <tr><td>41</td><td>MIC</td>        <td>Micrograph number.                     </td></tr>

   <tr><td>42</td><td>NUM</td>        <td>Micrograph window number.              </td></tr>

   <tr><td>43</td><td>GLONUM</td>     <td>Global image number.                   </td></tr>

   <tr><td>44-47</td><td>UNUSED</td>  <td>Unassigned.                            </td></tr>

   <tr><td> 48-76 </td><td>-</td>     <td>Reserved for XMIPP or other local transforms </td></tr>

   <tr><td> 77-100</td><td>-</td>     <td>Unassigned.                            </td></tr>

   <tr><td> 101 </td><td>PSI3</td>    <td>Projection angle: Psi  (From 'PJ 3Q'). </td></tr>

   <tr><td> 102 </td><td>THETA3</td>  <td>Projection angle: Theta (From 'PJ 3Q').</td></tr>

   <tr><td> 103 </td><td>PHI3</td>    <td>Projection angle: Phi (From 'PJ 3Q').  </td></tr>

   <tr><td> 104 </td><td>LANGLE</td>  <td>  If = 1 then projection angles:
                                      PSI3, THETA3 & PHI3 are present in header. </td></tr>

   <tr><td> 105-211 </td><td>-</td> <td>Unassigned</td></tr>

   <tr><td> 212-214</td><td>CDAT</td><td>Character *11    Creation date e.g. 27-MAY-1999 </td></tr>

   <tr><td> 215-216</td><td>CTIM</td><td>Character *8     Creation time e.g. 09:43:19 </td></tr>

   <tr><td> 217-256 </td><td>CTIT</td><td>Character *160  Title </td></tr>
</table>

<p></p>

<h3>Types of Image/Volume Files</h3>

<p>There are three types of SPIDER image files: Simple images/volumes. 
   Image stack files, and Indexed image stack files.
</p>

<ol>

<li>
<p> <b>Simple image / volume </b> with: NX x NY x NZ voxels. <br />
    Unformatted, direct access file containing a total of <i>LABREC + NY * NZ</i> records.
</p>

<p>
   <table border="1"  cellpadding="5">
      <tr><th>Record No.</th>             <th>---&gt; Record No.</th> <th>Contents</th> </tr>
      <tr><td>1</td>                      <td>LABREC</td>             <td>Image/volume header</td></tr>
      <tr><td>LABREC+1</td>               <td>LABREC+NY</td>        <td>Slice No. 1</td></tr>
      <tr><td>LABREC+NY+1</td>          <td>LABREC+2*NY</td>      <td>Slice No. 2</td></tr>
      <tr><td>..</td>                     <td>..</td>                 <td>Further slices</td></tr>
      <tr><td>LABREC+NY*(NZ-1)</td> <td>LABREC+NZ*NY</td> <td>Slice No. NZ</td></tr>
   </table>
</p>
</li>

<li>
<p> <b>Stack of images / volumes </b> with: NX x NY x NZ voxels in each image. <br />
    Unformatted, direct access file containing a total of <i>LABREC + MAXIM * (LABREC + NY * NZ)</i> records.
    </p>

    <p> <table border="1"  cellpadding="5">
      <tr><th>Record No.</th>                <th>---&gt; Record No.</th> <th>Contents</th> </tr>
      <tr><td>1</td>                          <td>LABREC</td>                        <td>Overall stack header</td></tr>

      <tr><td>LABREC+1</td>                   <td>2*LABREC</td>                      <td>First stacked image/volume header</td></tr>
      <tr><td>2+LABREC+1</td>                 <td>2*LABREC+NY*NZ)</td>         <td>Image/volume No. 1</td></tr>

      <tr><td>2*LABREC+NY*NZ+1</td>     <td>3*LABREC+NY*NZ</td>          <td>Second stacked image/volume header</td></tr>
      <tr><td>3*LABREC+NY*NZ+1</td>     <td>3*LABREC+2*NY*NZ</td>        <td>Image/volume No. 2</td></tr>

      <tr><td>..</td>                         <td>..</td>                            <td>Further sets of headers & images/volumes</td></tr>

      <tr><td>MAXIM*LABREC+(MAXIM-1)*NY*NZ+1</td>     <td>(MAXIM+1)*LABREC+(MAXIM-1)*NY*NZ</td> <td>Last stacked image/volume header</td></tr>
      <tr><td>(MAXIM+1)*LABREC+(MAXIM-1)*NY*NZ+1</td> <td>(MAXIM+1)*LABREC+MAXIM*NY*NZ</td>     <td>Last stacked image/volume</td></tr>

   </table>
</p>
</li>


<li>
<p><b>Indexed Stack of images / volumes</b> with: NX x NY x NZ voxels in each image. <br />
   Unformatted, direct access file containing a total of <i>LABREC +INDXREC + MAXIM * (LABREC + NY * NZ)</i> records.
   </p>

   <p>The image data is preceeded by an overall file header and an
    additional index header. There are 
    <i>INDXREC</i> records in the header, where INDXREC = ceiling of 
    (MAXINDX/NX). The user must specify a value for MAXINDX whenever an 
    indexed stack file is
    originally created. (For programmers attempting to write conversion
    utilities, I advise them to ignore indexed stacks. They are mainly
    in use at only a couple of sites with specialized large data requirements.)
   </p>

   <p> <table border="1"  cellpadding="5">
      <tr><th>Record No.</th>                <th>---&gt; Record No.</th> <th>Contents</th> </tr>
      <tr><td>1</td>                                                <td>LABREC</td>                                <td>Overall stack header</td></tr>
      <tr><td>LABREC+1</td>                                         <td>LABREC+INDXREC</td>                        <td>Overall index header</td></tr>

      <tr><td>INDXREC+LABREC+1</td>                                 <td>INDXREC+2*LABREC</td>                      <td>First stacked image/volume header</td></tr>
      <tr><td>INDXREC+2+LABREC+1</td>                               <td>INDXREC+2*LABREC+NY*NZ)</td>         <td>Image/volume No. 1</td></tr>

      <tr><td>INDXREC+2*LABREC+NY*NZ+1</td>                   <td>INDXREC+3*LABREC+NY*NZ</td>          <td>Second stacked image/volume header</td></tr>
      <tr><td>INDXREC+3*LABREC+NY*NZ+1</td>                   <td>INDXREC+3*LABREC+2*NY*NZ</td>        <td>Image/volume No. 2</td></tr>

      <tr><td>..</td>                                               <td>..</td>                                    <td>Further sets of headers & images/volumes</td></tr>

      <tr><td>INDXREC+MAXIM*LABREC+(MAXIM-1)*NY*NZ+1</td>     <td>INDXREC+(MAXIM+1)*LABREC+(MAXIM-1)*NY*NZ</td> <td>Last stacked image/volume header</td></tr>
      <tr><td>INDXREC+(MAXIM+1)*LABREC+(MAXIM-1)*NY*NZ+1</td> <td>INDXREC+(MAXIM+1)*LABREC+MAXIM*NY*NZ</td>     <td>Last stacked image/volume</td></tr>

   </table>
   </p>
</li>

</ol>

<h3>Notes</h3>

<ol>
<li> All character arrays are retrieved from the floating point
   buffer array containing the header record(s) by equivalence
   assignments. Thus character arrays are stored in the header without
   any conversion.</li>
<p></p>

<li>The angle, offset &amp; scale factor locations contained in the
  SPIDER header are available to communicate between different SPIDER
  operations. Currently they are <b>NOT</b> used in the code
  distributed with SPIDER, but some outside labs make extensive use
  of these positions. The angles are usually in 
  <a href="euler.html">Euler format</a> and are given in degrees.</li>
<p></p>

<li>SGI Irix, most IBM, and Sun Unix machines usually use a
  different native byte ordering from GNU/Linux on Intel, or HP Alpha
  machines. SPIDER contains the 
  <a href="man/cptoopend.html">"CP TO OPEND"</a> operation to 
  interconvert these files. However SPIDER
  can read/write either byte ordering now.</li>
<p></p>

<li>If you are creating a conversion program to read SPIDER images we advise that
  is simpler if you only implement support for simple 2D and 3D real images. It is
  almost never necessary to convert Fourier images.  If you must implement stacked
  image conversion we advise skipping conversion of Indexed stacks.
</li>
<p></p>

<li>If you are creating a conversion program to create SPIDER images we again advise that
  is simpler if you only implement support for simple 2D and 3D real images. The only
  essential non-zero image header positions in a simple image or volume are: 
  <b>1,2,5,12,13,22,23</b>.  For neatness: positions: 212-256 may be filled with 'blanks'.
</li>
</ol>
<p></p>

<hr />

<p><small>
  Source: image_doc.html    &nbsp;&nbsp;&nbsp; 
  Last update: 30 Oct. 2013 &nbsp;&nbsp;&nbsp; 
  ArDean Leith
</small></p>

</body>
</html>

@


1.25
log
@glonum
@
text
@d177 1
a177 1
   <tr><td>44-49</td><td>UNUSED</td>  <td>Unassigned.                            </td></tr>
d179 1
a179 1
   <tr><td> 50-76 </td><td>-</td>     <td>Reserved for XMIPP transforms          </td></tr>
@


1.24
log
@NX
@
text
@d13 1
a13 1
  considered to be a single slice special case of a volume.   The
d48 1
a48 1
<h3>Current Layout of the SPIDER Header (Label) Record</h3>
d56 1
a56 1
      <small> In some ancient 2D images this may be -1) </small> </td></tr>
d58 1
a58 1
   <tr><td> 2</td><td>NY</td>    <td> Number of rows per slice. </td></tr>
d61 1
a61 1
            in each image of a simple image or stacked image file.</td></tr>
d63 1
a63 1
   <tr><td> 4</td><td>UNUSED</td><td>Unassigned</td></tr>
d68 3
a70 3
      <tr> <td align="middle">  1</td>  <td>R</td>  <td>2D image. </td>  </tr>
      <tr> <td align="middle">  3</td>  <td>R</td>  <td>3D volume.</td>  </tr>
      <tr> <td align="middle">-11</td>  <td>FO</td> <td><a href="./fourier.html">2D Fourier, odd</a></td>  </tr>
d72 1
a72 1
      <tr> <td align="middle">-21</td>  <td>FO</td> <td><a href="./fourier.html">3D Fourier, odd</a></td>  </tr>
d80 1
a80 1
      (see following locations).</td></tr>
d82 1
a82 1
   <tr><td> 7</td><td>FMAX</td>    <td>Maximum data value.</td></tr>
d84 1
a84 1
   <tr><td> 8</td><td>FMIN</td>    <td>Minimum data value.</td></tr>
d86 1
a86 1
   <tr><td> 9</td><td>AV</td>      <td>Average data value.</td></tr>
d89 1
a89 1
          -1.0 or 0.0  indicates that SIG has not been computed.</td></tr>
d91 1
a91 1
   <tr><td>11</td><td>UNUSED</td>  <td>Obsolete, no longer used.</td></tr>
d93 1
a93 1
   <tr><td>12</td><td>NX</td>    <td>Number of pixels (samples) per line.</td></tr>
d95 1
a95 1
   <tr><td>13</td><td>LABREC</td>  <td>Number of records in file header (label).</td></tr>
d99 1
a99 1
   <tr><td>15</td><td>PHI</td>     <td>Tilt angle: phi (See note #2 below).</td></tr>
d101 1
a101 1
   <tr><td>16</td><td>THETA</td>   <td>Tilt angle: theta.</td></tr>
d103 1
a103 1
   <tr><td>17</td><td>GAMMA</td>   <td>Tilt angle: gamma (also called psi).</td></tr>
d105 1
a105 1
   <tr><td>18</td><td>XOFF</td>    <td>X translation.</td></tr>
d107 1
a107 1
   <tr><td>19</td><td>YOFF</td>    <td>Y translation.</td></tr>
d109 1
a109 1
   <tr><td>20</td><td>ZOFF</td>    <td>Z translation.</td></tr>
d111 1
a111 1
   <tr><td>21</td><td>SCALE</td>   <td>Scale factor.</td></tr>
d113 1
a113 1
   <tr><td>22</td><td>LABBYT</td>  <td>Total number of bytes in header.</td></tr>
d115 1
a115 1
   <tr><td>23</td><td>LENBYT</td>  <td>Record length in bytes.</td></tr>
d124 1
a124 1
       the maximum image number (MAXINDX) allowed in the index. </td></tr>
d134 1
a134 1
      if necessary, when an image is added or deleted from the stack.</td></tr>
d138 1
a138 1
      of the current image or zero if this image is unused.</td></tr>
d142 1
a142 1
      the highest index location currently in use.</td></tr>
d144 1
a144 1
   <tr><td>29</td><td>UNUSED</td><td>Unassigned</td></tr>
d146 1
a146 1
   <tr><td>30</td><td>UNUSED</td><td>Unassigned</td></tr>
d148 3
a150 3
   <tr><td>21</td><td>KANGLE</td><td>Flag that additional rotation angles follow 
      in header. 1 = one angle set is present, 2 = two additional angle sets.  
      These rotation angles preceed any rotation stored in positions: 15..18.</td></tr>
d152 1
a152 1
   <tr><td>32</td><td>PHI1</td>       <td>Angle.</td></tr>
d154 1
a154 1
   <tr><td>33</td><td>THETA1</td>     <td>Angle.</td></tr>
d156 1
a156 1
   <tr><td>34</td><td>PSI1</td>       <td>Angle.</td></tr>
d158 1
a158 1
   <tr><td>35</td><td>PHI2</td>       <td>Angle.</td></tr>
d160 1
a160 1
   <tr><td>36</td><td>THETA2</td>     <td>Angle.</td></tr>
d162 1
a162 1
   <tr><td>37</td><td>PSI2</td>       <td>Angle.</td></tr>
a163 1
   <tr><td>38</td><td>PIXSIZ</td>     <td>Pixel size (Angstroms).</td></tr>
d165 1
a165 1
   <tr><td>39</td><td>EV</td>         <td>Electron voltage used.</td></tr>
d167 1
a167 1
   <tr><td>40</td><td>PROJ</td>       <td>Project number.</td></tr>
d169 1
a169 1
   <tr><td>41</td><td>MIC</td>        <td>Micrograph number.</td></tr>
d171 1
a171 1
   <tr><td>42</td><td>NUM</td>        <td>Image number.</td></tr>
d173 1
a173 1
   <tr><td>43-49</td><td>UNUSED</td>  <td>Unassigned.</td></tr>
d175 1
a175 1
   <tr><td> 50-76 </td><td>-</td>     <td>Reserved for local transforms</td></tr>
d177 1
a177 1
   <tr><td> 77-100</td><td>-</td>     <td>Unassigned.</td></tr>
d179 5
a183 1
   <tr><td> 101 </td><td>PSI3</td>    <td>Projection angle: Psi  (From 'PJ 3Q').</td></tr>
d187 1
a187 1
   <tr><td> 103 </td><td>PHI3</td>    <td>Projection angle: Phi (From 'PJ 3Q').</td></tr>
d189 2
a190 2
   <tr><td> 104 </td><td>LANGLE</td>  <td> If = 1 flag that Projection angles:  
        PSI3, THETA3 & PHI3 are present in header. </td></tr>
d263 1
a263 1
    originally created. (For programmers ATTEMPTING to write conversion
d265 1
a265 2
    in use at only a couple of sites with specialized large data
    requirements.)
d291 1
d300 5
a304 5
SPIDER header are available to communicate between different SPIDER
operations. Currently they are <b>NOT</b> used in the code
distributed with SPIDER, but some outside labs make extensive use
of these positions. The angles are usually in <a href=
"euler.html">Euler format</a> and are given in degrees.</li>
d308 5
a312 5
different native byte ordering from GNU/Linux on Intel, or HP Alpha
machines. SPIDER contains the 
<a href="man/cptoopend.html">"CP TO OPEND"</a> operation to 
interconvert these files. However SPIDER
can read/write either byte ordering now.</li>
d316 3
a318 3
is simpler if you only implement support for simple 2D and 3D real images. It is
almost never necessary to convert Fourier images.  If you must implement stacked
image conversion we advise skipping conversion of Indexed stacks.
d323 3
a325 3
is simpler if you only implement support for simple 2D and 3D real images. The only
essential non-zero image header positions in a simple image or volume are: 
<b>1,2,5,12,13,22,23</b>.  For neatness: positions: 212-256 may be filled with 'blanks'.
d330 1
a330 1
<hr>
d333 4
a336 3
Source: image_doc.html    &nbsp;&nbsp;&nbsp; 
Last update: 6 Jan. 2012 &nbsp;&nbsp;&nbsp; 
ArDean Leith</small></p>
@


1.23
log
@proj, micrograph & image # addes
@
text
@d10 2
a11 2
<p>SPIDER uses <i>NSAM</i> to denote number of pixels (voxels) per
  row, <i>NROW</i> to denote number of rows, and <i>NSLICE</i> to
d18 1
a18 1
  Each record contains NSAM 4-byte words which are stored as floating point numbers.
d27 1
a27 1
  There are <i>LABREC</i> records in the header, where LABREC = ceiling of (256/NSAM).  
d33 1
a33 1
<p><blockquote><kbd>LENBYT = NSAM * 4           <br />
d55 1
a55 1
   <tr><td> 1</td><td>NSLICE</td>  <td> Number of slices (planes) in volume (=1 for an image)
d58 1
a58 1
   <tr><td> 2</td><td>NROW</td>    <td> Number of rows per slice. </td></tr>
d93 1
a93 1
   <tr><td>12</td><td>NSAM</td>    <td>Number of pixels (samples) per line.</td></tr>
d209 2
a210 2
<p> <b>Simple image / volume </b> with: NSAM x NROW x NSLICE voxels. <br />
    Unformatted, direct access file containing a total of <i>LABREC + NROW * NSLICE</i> records.
d217 2
a218 2
      <tr><td>LABREC+1</td>               <td>LABREC+NROW</td>        <td>Slice No. 1</td></tr>
      <tr><td>LABREC+NROW+1</td>          <td>LABREC+2*NROW</td>      <td>Slice No. 2</td></tr>
d220 1
a220 1
      <tr><td>LABREC+NROW*(NSLICE-1)</td> <td>LABREC+NSLICE*NROW</td> <td>Slice No. NSLICE</td></tr>
d226 2
a227 2
<p> <b>Stack of images / volumes </b> with: NSAM x NROW x NSLICE voxels in each image. <br />
    Unformatted, direct access file containing a total of <i>LABREC + MAXIM * (LABREC + NROW * NSLICE)</i> records.
d235 1
a235 1
      <tr><td>2+LABREC+1</td>                 <td>2*LABREC+NROW*NSLICE)</td>         <td>Image/volume No. 1</td></tr>
d237 2
a238 2
      <tr><td>2*LABREC+NROW*NSLICE+1</td>     <td>3*LABREC+NROW*NSLICE</td>          <td>Second stacked image/volume header</td></tr>
      <tr><td>3*LABREC+NROW*NSLICE+1</td>     <td>3*LABREC+2*NROW*NSLICE</td>        <td>Image/volume No. 2</td></tr>
d242 2
a243 2
      <tr><td>MAXIM*LABREC+(MAXIM-1)*NROW*NSLICE+1</td>     <td>(MAXIM+1)*LABREC+(MAXIM-1)*NROW*NSLICE</td> <td>Last stacked image/volume header</td></tr>
      <tr><td>(MAXIM+1)*LABREC+(MAXIM-1)*NROW*NSLICE+1</td> <td>(MAXIM+1)*LABREC+MAXIM*NROW*NSLICE</td>     <td>Last stacked image/volume</td></tr>
d251 2
a252 2
<p><b>Indexed Stack of images / volumes</b> with: NSAM x NROW x NSLICE voxels in each image. <br />
   Unformatted, direct access file containing a total of <i>LABREC +INDXREC + MAXIM * (LABREC + NROW * NSLICE)</i> records.
d258 1
a258 1
    (MAXINDX/NSAM). The user must specify a value for MAXINDX whenever an 
d272 1
a272 1
      <tr><td>INDXREC+2+LABREC+1</td>                               <td>INDXREC+2*LABREC+NROW*NSLICE)</td>         <td>Image/volume No. 1</td></tr>
d274 2
a275 2
      <tr><td>INDXREC+2*LABREC+NROW*NSLICE+1</td>                   <td>INDXREC+3*LABREC+NROW*NSLICE</td>          <td>Second stacked image/volume header</td></tr>
      <tr><td>INDXREC+3*LABREC+NROW*NSLICE+1</td>                   <td>INDXREC+3*LABREC+2*NROW*NSLICE</td>        <td>Image/volume No. 2</td></tr>
d279 2
a280 2
      <tr><td>INDXREC+MAXIM*LABREC+(MAXIM-1)*NROW*NSLICE+1</td>     <td>INDXREC+(MAXIM+1)*LABREC+(MAXIM-1)*NROW*NSLICE</td> <td>Last stacked image/volume header</td></tr>
      <tr><td>INDXREC+(MAXIM+1)*LABREC+(MAXIM-1)*NROW*NSLICE+1</td> <td>INDXREC+(MAXIM+1)*LABREC+MAXIM*NROW*NSLICE</td>     <td>Last stacked image/volume</td></tr>
d331 1
a331 1
Last update: 2 Aug. 2011 &nbsp;&nbsp;&nbsp; 
@


1.22
log
@*** empty log message ***
@
text
@d168 7
a174 1
   <tr><td>40-49</td><td>UNUSED</td>  <td>Unassigned.</td></tr>
d331 1
a331 1
Last update: 21 May. 2009 &nbsp;&nbsp;&nbsp; 
@


1.21
log
@rewriten with tables
@
text
@a3 1
  <meta name="generator" content="HTML Tidy, see www.w3.org">
d24 1
a24 1
</p>
d33 4
a36 4
<p><blockquote><kbd>LENBYT = NSAM * 4<br>
 LABREC = 1024 / LENBYT<br>
 IF (MOD(1024,LENBYT) .NE. 0) LABREC = LABREC + 1<br>
 LABBYT = LABREC * LENBYT<br>
d40 1
d43 3
a45 4
by <i>LENBYT</i>. This variable length header is used for
compatibility with FORTRAN direct access unformatted file I/O.<br>
<p />

d70 4
a73 4
      <tr> <td align="middle">-11</td>  <td>FO</td> <td>2D Fourier, mixed radix odd</td> </tr>
      <tr> <td align="middle">-12</td>  <td>FE</td> <td>2D Fourier, mixed radix even</td> </tr>
      <tr> <td align="middle">-21</td>  <td>FO</td> <td>3D Fourier, mixed radix odd</td> </tr>
      <tr> <td align="middle">-22</td>  <td>FE</td> <td>3D Fourier, mixed radix even</td> </tr>
d203 1
a203 1
<p> Simple image / volume with: NSAM x NROW x NSLICE voxels. <br />
d220 1
a220 1
<p> Stack of images / volumes with: NSAM x NROW x NSLICE voxels in each image. <br />
d245 1
a245 1
<p>Indexed Stack of images / volumes with: NSAM x NROW x NSLICE voxels in each image. <br />
d249 1
a249 1
   <p>The image data is preceeded by an overll file header and an
d325 1
a325 1
Last update: 21 May. 2004 &nbsp;&nbsp;&nbsp; 
@


1.20
log
@bad header 3 explanation
@
text
@d4 2
a5 2
<meta name="generator" content="HTML Tidy, see www.w3.org">
<title>SPIDER: Image file format</title>
d9 1
a9 1
<h2>Format of SPIDER 2D and 3D image files</h2>
d11 22
a32 11
<p>SPIDER uses <i>nsam</i> to denote number of pixels (voxels) per
row, <i>nrow</i> to denote number of rows, and <i>nslice</i> to
denote the number of slices or planes in a volume. A 2D image is
considered to be a special case of a volume consisting of a single
slice (or plane).</p>

<p>The image data is preceeded by a header. There are <i>labrec</i>
records in the header, where labrec = ceiling of (256/nsam). Please
note that the length of the header in SPIDER images is always &gt;=
1024 bytes and is calculated as follows (in FORTRAN) when a new
SPIDER image is created:</p>
d34 1
a34 1
<blockquote><kbd>LENBYT = NSAM * 4<br>
d39 1
d44 33
a76 10
compatibility with FORTRAN direct access unformatted file I/O<br>
 
<p>In indexed stack files the image data is also preceeded by an
additional index header. There are <i>indxrec</i> records in the
header, where indxrec = ceiling of (maxindx/nsam). The user must
specify a value for maxindx whenever an indexed stack file is
originally created. (For programmers attempting to write conversion
utilities, I advise them to ignore indexed stacks. They are mainly
in use at only a couple of sites with specialized large data
requirements.)</p>
d78 4
a81 2
The image data in a volume of nsam x nrow x nslice voxels is stored
in the following manner: 
d83 1
a83 4
<blockquote><kbd>Unformatted, direct access file containing a total
of <i>labrec + nrow x nslice</i> records. In a standard SPIDER
image file each record contains nsam 4-byte words which are stored
as floating point numbers.</kbd></blockquote>
d85 1
a85 2
The sequence in which the information is stored in the file is as
follows: 
d87 1
a87 1
<p><samp></samp></p>
d89 2
a90 2
<dl>
   <dt><samp>Records 1 --&gt; labrec</samp></dt>
d92 1
a92 1
   <dd><samp>SPIDER header</samp></dd>
d94 1
a94 1
   <dt><samp>Records (labrec+1)--&gt; (nrow+labrec)</samp></dt>
d96 1
a96 1
   <dd><samp>slice No. 1</samp></dd>
d98 1
a98 1
   <dt><samp>Records (nrow+labrec+1)--&gt; (2*nrow+labrec)</samp></dt>
d100 1
a100 1
   <dd><samp>slice No. 2<br> </samp></dd>
d102 1
a102 2
   <dt><samp>.<br>
   .<br></samp></dt>
d104 1
a104 1
   <dt><samp>Records ((nslice-1)*nrow+labrec+1) -&gt; (nslice*nrow+labrec)</samp></dt>
d106 1
a106 2
   <dd><samp>slice No. nslice<br>
   </samp></dd>
d108 1
a108 3
   <dt><samp>.<br>
    .<br>
   </samp></dt>
d110 1
a110 2
   <dt><samp>Records (nslice*nrow+labrec+1) --&gt; (nslice*nrow+labrec)</samp></dt>
</dl>
d112 1
a112 3
<br>
<br>
 
d114 32
a145 2
<p>Layout of the SPIDER header is as follows:<br>
</p>
d147 1
a147 2
<ol>
Word No.
d149 3
a151 1
<li>nslice = number of slices (planes) in volume (=1 for an image)</li>
d153 1
a153 1
<li>nrow = number of rows per slice. </li>
d155 1
a155 2
<li>irec = total number of records (including header records) in each image of
           a simple image or stacked image file.</li>
d157 1
a157 53
<li>nhistrec = (obsolete, unused) </li>

<li>iform = file type specifier. Obsolete file types d, 8, 11, 12,
16, -1, -3, -7, and -9 are no longer supported in SPIDER.</li>

   <table>
   <tr>
   <th>iform</th>
   <th>(type)</th>
   <th>data type</th>
   </tr>

   <tr>
   <td></td>
   </tr>

   <tr>
   <td align="middle">1</td>
   <td>(r)</td>
   <td>2D image.</td>
   </tr>

   <tr>
   <td align="middle">3</td>
   <td>(r)</td>
   <td>3D volume.</td>
   </tr>

   <tr>
   <td align="middle">-11</td>
   <td>(fo)</td>
   <td>2D Fourier, mixed radix odd.</td>
   </tr>

   <tr>
   <td align="middle">-12</td>
   <td>(fe)</td>
   <td>2D Fourier, mixed radix even.</td>
   </tr>

   <tr>
   <td align="middle">-21</td>
   <td>(fo)</td>
   <td>3D Fourier, mixed radix odd.</td>
   </tr>

   <tr>
   <td align="middle">-22</td>
   <td>(fe)</td>
   <td>3D Fourier, mixed radix even.</td>
   </tr>
   </table>
</li>
d159 1
a159 4
<li>imami = maximum/minimum flag. Is set at 0 when the file is
created, and at 1 when the maximum, minimum, average, and standard
deviation have been computed and stored into this header record
(see following locations).</li>
d161 1
a161 1
<li>fmax = maximum value.</li>
d163 1
a163 1
<li>fmin = minimum value.</li>
d165 1
a165 1
<li>av = average value.</li>
d167 1
a167 2
<li>sig = standard deviation. A value of -1.0 indicates that sig
has not been computed previously.</li>
d169 1
a169 1
<li>ihist = (obsolete, no longer used).</li>
d171 1
a171 1
<li>nsam = number of pixels per line.</li>
d173 1
a173 1
<li>labrec = number of records in file header (label).</li>
d175 1
a175 1
<li>iangle = flag that tilt angles are present.</li>
d177 1
a177 1
<li>phi = tilt angle (See note #2 below).</li>
d179 1
a179 1
<li>theta = tilt angle.</li>
d181 2
a182 1
<li>gamma = tilt angle (also called psi).</li>
d184 1
a184 1
<li>xoff = x translation.</li>
d186 1
a186 1
<li>yoff = y translation.</li>
d188 1
a188 1
<li>zoff = z translation.</li>
d190 2
a191 1
<li>scale = scale factor.</li>
d193 1
a193 1
<li>labbyt = total number of bytes in header.</li>
d195 1
a195 1
<li>lenbyt = record length in bytes.</li>
d197 3
a199 9
<li>istack = This position has a value of <i>0</i> in simple 2D or
3D (non-stack) files. In an "image stack" there is one overall
stack header followed by a stack of images in which each image has
its own image header. (An image stack differs from a simple 3D
image in that each stacked image has its own header.) A value of
<i>&gt;0</i> in this position in the overall stack header indicates
a stack of images. A value of <i>&lt;0</i> in this position in the
overall stack header indicates an indexed stack of images and gives
the maximum image number allowed in the index.</li>
d201 1
a201 4
<li>NOTUSED = This position is unused now! Prior to release
<i>9.0</i>, a -1 at this location in an overall stack indicated a
valid stack and in the stacked images, a value of 1 indicated that
this image was in use (existed).</li>
d203 4
a206 5
<li>maxim = This position is only used in the overall header for a
stacked image file. There, this position contains the number of the
highest image currently used in the stack. This number is updated,
if necessary, when an image is added or deleted from the
stack.</li>
d208 11
a218 3
<li>imgnum = This position is only used in a stacked image header.
There, this position contains the number of the current image or
zero if the image is unused.</li>
d220 4
a223 3
<li>lastindx = This position is only used in the overall header of
indexed stacks. There, this position is the highest index currently
in use.</li>
d225 3
a227 1
<li>unused</li>
d229 2
a230 1
<li>unused</li>
d232 2
a233 3
<li>Kangle = flag that additional angles are present in header. 1 =
one additional rotation is present, 2 = additional rotation that
preceeds the rotation that was stored in words 15..20.</li>
d235 1
a235 1
<li>phi1</li>
d237 2
a238 1
<li>theta1</li>
d240 3
a242 1
<li>psi1</li>
a243 1
<li>phi2</li>
d245 23
a267 1
<li>theta2</li>
d269 2
a270 2
<li>psi2</li>
</ol>
d272 1
a272 6
50-76 == reserved for Jose Maria's transforms <br>
 212-214 == cdat = character * 11 containing creation date e.g.
27-MAY-1999 <br>
 215-216 -- ctim = character * 8 containing creation time e.g.
09:43:19 <br>
 217-256 -- ctit = character * 160 containing title 
d274 2
a275 1
<p></p>
d277 3
a279 2
<dl>
<dt>Note#1 :</dt>
d281 1
a281 4
<dd>All character arrays are retrieved from the floating point
buffer array containing the header record(s) by equivalence
assignments. Thus character arrays are stored in the header without
any conversion.</dd>
d283 6
a288 2
<dd><br>
<br>
a289 1
</dd>
d291 1
a291 3
<dt>Note#2 :</dt>

<dd>The angle, offset &amp; scale factor locations contained in the
d296 2
a297 1
"euler.html">Euler format</a> and are given in degrees.</dd>
d299 6
a304 2
<dd><br>
<br>
a305 1
</dd>
d307 6
a312 1
<dt>Note#3 :</dt>
d314 7
a320 10
<dd>SGI, most IBM, Mackintosh, and Sun Unix machines use a
different byte ordering from GNU/Linux on Intel, or HP Alpha
machines. SPIDER contains the <a href="man/cptoopend.html">"CP TO
OPEND"</a> operation to interconvert these files. However SPIDER
can read/write either byte ordering now.</dd>

<dd><br>
<br>
</dd>
</dl>
d323 1
d325 2
a326 2
Source: image_doc.html &nbsp;&nbsp;&nbsp; 
Last update: 28 Nov. 2004 &nbsp;&nbsp;&nbsp; 
d328 1
@


1.19
log
@bad xhtml line numbering
@
text
@d98 2
a99 1
<li>irec = total number of records in the file (unused) </li>
@


1.18
log
@commented out line '<li style="list-style: none">Word No.</li>'
@
text
@d7 1
a33 1

d57 1
a57 1
<dt><samp>Records 1 --&gt; labrec</samp></dt>
d59 1
a59 1
<dd><samp>SPIDER header</samp></dd>
d61 1
a61 1
<dt><samp>Records (labrec+1)--&gt; (nrow+labrec)</samp></dt>
d63 1
a63 1
<dd><samp>slice No. 1</samp></dd>
d65 1
a65 1
<dt><samp>Records (nrow+labrec+1)--&gt; (2*nrow+labrec)</samp></dt>
d67 1
a67 2
<dd><samp>slice No. 2<br>
</samp></dd>
d69 2
a70 3
<dt><samp>.<br>
 .<br>
</samp></dt>
d72 1
a72 2
<dt><samp>Records ((nslice-1)*nrow+labrec+1) -&gt;
(nslice*nrow+labrec)</samp></dt>
d74 2
a75 2
<dd><samp>slice No. nslice<br>
</samp></dd>
d77 3
a79 3
<dt><samp>.<br>
 .<br>
</samp></dt>
d81 1
a81 2
<dt><samp>Records (nslice*nrow+labrec+1) --&gt;
(nslice*nrow+labrec)</samp></dt>
d92 1
a92 1
<!-- <li style="list-style: none">Word No.</li> -->
d94 1
a94 2
<li>nslice = number of slices (planes) in volume (=1 for an
image)</li>
d96 1
a96 2
<li>nrow = number of rows per slice.<br>
</li>
d98 1
a98 2
<li>irec = total number of records in the file (unused)<br>
</li>
d100 1
a100 2
<li>nhistrec = (obsolete, unused)<br>
</li>
d103 1
a103 2
16, -1, -3, -7, and -9 are no longer supported in SPIDER.<br>
</li>
d105 47
a151 48
<li style="list-style: none">
<table>
<tr>
<th>iform</th>
<th>(type)</th>
<th>data type</th>
</tr>

<tr>
<td></td>
</tr>

<tr>
<td align="middle">1</td>
<td>(r)</td>
<td>2D image.</td>
</tr>

<tr>
<td align="middle">3</td>
<td>(r)</td>
<td>3D volume.</td>
</tr>

<tr>
<td align="middle">-11</td>
<td>(fo)</td>
<td>2D Fourier, mixed radix odd.</td>
</tr>

<tr>
<td align="middle">-12</td>
<td>(fe)</td>
<td>2D Fourier, mixed radix even.</td>
</tr>

<tr>
<td align="middle">-21</td>
<td>(fo)</td>
<td>3D Fourier, mixed radix odd.</td>
</tr>

<tr>
<td align="middle">-22</td>
<td>(fe)</td>
<td>3D Fourier, mixed radix even.</td>
</tr>
</table>
d294 4
a297 2
<p><small>Source: image_doc.html &nbsp;&nbsp;&nbsp; Last update: 28
Feb. 2003 &nbsp;&nbsp;&nbsp; ArDean Leith</small></p>
@


1.17
log
@xhtml
@
text
@d96 1
a96 1
<li style="list-style: none">Word No.</li>
@


1.16
log
@cp to opend
@
text
@d1 1
a2 1

d4 1
d7 76
d84 3
a86 1
<body>
d88 3
a90 1
<h2>Format of SPIDER 2D and 3D image files</h2> 
d92 1
a92 5
<p>
SPIDER uses <i>nsam</i> to denote number of pixels (voxels) per row, 
<i>nrow</i> to denote number of rows, and <i>nslice</i> to denote the
number of slices or planes in a volume.  A 2D image is considered to 
be a special case of a volume consisting of a single slice (or plane). 
d95 158
a252 7
<p>
The image data is preceeded by a header.  There are <i>labrec</i> 
records in the header, where labrec = ceiling of (256/nsam).  Please
note that the length of the header in SPIDER images is always >= 1024
bytes and is calculated as follows (in FORTRAN) when a new SPIDER 
image is created:
</p>
d254 6
a259 8
<blockquote>
<kbd>
    LENBYT  = NSAM * 4                                    <br>
    LABREC = 1024 / LENBYT                                <br>
    IF (MOD(1024,LENBYT) .NE. 0) LABREC = LABREC + 1      <br>
    LABBYT  = LABREC * LENBYT                             <br>
</kbd>
</blockquote> 
d261 1
a261 13
Where <i>LENBYT</i> is the record length in bytes, and the
<i>MOD</i> function returns the remainder of dividing <i>1024</i> by 
<i>LENBYT</i>.  This variable length header is used for compatibility
with FORTRAN direct access unformatted file I/O<br>

<p>
In indexed stack files the image data is also preceeded by an additional
index header.  There are <i>indxrec</i> 
records in the header, where indxrec = ceiling of (maxindx/nsam). The 
user must specify a value for maxindx whenever an indexed stack file is
originally created. (For programmers attempting to write conversion
utilities, I advise them to ignore indexed stacks.  They are mainly in
use at only a couple of sites with specialized large data requirements.)</p>
a262 134
The image data in a volume of nsam x nrow x nslice voxels is stored 
in the following  manner:
<blockquote> 
<kbd>
   Unformatted, direct access file containing a total of 
   <i>labrec + nrow x nslice</i>  records. In a standard
   SPIDER image file each record contains nsam 4-byte words 
   which are stored as floating point numbers.
</kbd>
</blockquote> 

The sequence in which the information is stored in the
file is as follows: 
<p>
    <samp> 
    <dl> 
    <dt>Records  1 --&gt; labrec </dt> 
    <dd>SPIDER header</dd>      
   
    <dt>Records  (labrec+1)--&gt; (nrow+labrec)</dt>
    <dd>slice No. 1</dd>
    <dt>Records  (nrow+labrec+1)--&gt; (2*nrow+labrec)</dt>
    <dd>slice No. 2<br></dd>
    . <br>
    . <br>
    <dt>Records  ((nslice-1)*nrow+labrec+1) -&gt; (nslice*nrow+labrec) </dt>
    <dd>slice No. nslice<br></dd>
    . <br>
    . <br>
    <dt>Records (nslice*nrow+labrec+1) --&gt; 
                (nslice*nrow+labrec)</dt>
    </dl> 
    </samp>     
</p>
<p>
 
Layout of the SPIDER header is as follows: <br>
 <ol> 
 Word No.       
    <li> nslice   = number of slices (planes) in volume (=1 for an image) </li>

    <li> nrow     = number of rows per slice. <br></li>
    <li> irec     = total number of records in the file (unused)  <br></li>
    <li> nhistrec = (obsolete, unused) <br></li>

    <li> iform    = file type specifier. Obsolete file types
                    d, 8, 11, 12, 16, -1, -3, -7, and -9 
                    are no longer supported in SPIDER. <br></li>
    <table>
        <tr><th>iform</th> <th>(type)</th>  <th> data type</th><tr>
        <tr><td align=middle> 1 </td><td>(r)</td> <td>2D image.</td></tr>
        <tr><td align=middle> 3 </td><td>(r)</td> <td>3D volume.</td></tr>
        <tr><td align=middle>-11</td><td>(fo)</td> <td>2D Fourier, mixed radix odd.</td></tr>  
        <tr><td align=middle>-12</td><td>(fe)</td> <td>2D Fourier, mixed radix even.</td></tr>
        <tr><td align=middle>-21</td><td>(fo)</td> <td>3D Fourier, mixed radix odd.</td></tr>
        <tr><td align=middle>-22</td><td>(fe)</td> <td> 3D Fourier, mixed radix even.</td></tr>        
    </table>                          

    <li> imami   = maximum/minimum flag. Is set at 0 when the file is
		   created, and at 1 when the maximum, minimum, average,
                   and standard deviation have been computed and 
                   stored into this header record (see following 
                   locations).</li>
    <li> fmax    = maximum value.</li>
    <li> fmin    = minimum value.</li>
    <li> av      = average value.</li>
    <li> sig     = standard deviation. A value of -1.0 indicates 
                   that sig has not been computed previously.</li>
    <li> ihist   = (obsolete, no longer used).</li>
    <li> nsam    = number of pixels per line.</li>
    <li> labrec  = number of records in file header (label).</li>
    <li> iangle  = flag that tilt angles are present.</li>
    <li> phi     = tilt angle (See note #2 below).</li>
    <li> theta   = tilt angle.</li>
    <li> gamma   = tilt angle (also called psi).</li>
    <li> xoff    = x translation.</li>
    <li> yoff    = y translation.</li>
    <li> zoff    = z translation.</li>
    <li> scale   = scale factor.</li>
    <li> labbyt  = total number of bytes in header.</li>
    <li> lenbyt  = record length in bytes.</li>

    <li> istack = This position has a value of <i>0</i> in simple 2D or 3D
            (non-stack) files.  In an "image stack" there is one overall 
            stack header followed by a stack of images in which each 
            image has its own image header.  (An image stack differs 
            from a simple 3D image in that each stacked image has its 
            own header.)  A value of <i>&gt;0</i> in this position in the overall 
            stack header indicates a stack of images.  A value of <i>&lt;0</i> in this 
            position in the overall stack header indicates an indexed stack of 
            images and gives the maximum image number allowed in the index.</li>
   
    <li> NOTUSED =  This position is unused now!  Prior to release <i>9.0</i>, 
             a -1 at this location in an overall stack indicated a 
            valid stack and in the stacked images, a value of 1 indicated that this 
            image was in use (existed).</li>
  
    <li> maxim =  This position is only used in the overall header for
            a stacked image file.  There, this position 
            contains the number of the highest image currently used in the stack.
            This number is updated, if necessary, when an image is added or deleted 
            from the stack.</li>

    <li> imgnum = This position is only used in a stacked image header.  There, 
            this position contains the number of the current image or zero if 
            the image is unused.</li> 
 
    <li> lastindx = This position is only used in the overall header
                    of indexed stacks. There, this position is the highest
                    index currently in use.  

    <li> unused</li>
    <li> unused</li>
    <li> Kangle  = flag that additional angles are present in header. 
                   1 = one additional rotation is present,  
                   2 = additional rotation that preceeds the rotation 
                   that was stored in words 15..20. </li> 
    <li> phi1</li>
    <li> theta1</li>
    <li> psi1</li>
    <li> phi2</li>
    <li> theta2</li>
    <li> psi2</li>
    </ol> 

    50-76   == reserved for Jose Maria's transforms <br>
                              
    212-214 == cdat   = character * 11  containing creation date
                        e.g. 27-MAY-1999 <br>
    215-216 -- ctim   = character * 8   containing creation time
                        e.g. 09:43:19    <br>
    217-256 -- ctit   = character * 160 containing title <p>
 
  
d264 39
a302 27
<p>
<dt>Note#1 :<dd>All character arrays are retrieved from the floating 
         point buffer array containing the header record(s) by 
         equivalence assignments. 
	 Thus character arrays are stored in the header without any 
	 conversion.</dd></dt>
          </p><p>
 
<dt>Note#2 :<dd>The angle, offset & scale factor locations contained 
         in the SPIDER header are available to communicate between different
         SPIDER operations.  Currently they are <B>NOT</B> used in the
         code distributed with SPIDER, but some outside labs make 
         extensive use of these positions.  The angles are usually
         in <a href="euler.html">Euler format</a> and are given in degrees. 
         </dd></dt> 
         </p><p>
 
<dt>Note#3 : <dd> SGI, most IBM, Mackintosh, and Sun Unix machines use 
         a different byte ordering from GNU/Linux on Intel, or HP
         Alpha machines.  SPIDER contains the 
         <a href="man/cptoopend.html">"CP TO OPEND"</a> 
         operation to interconvert these files.  However SPIDER can
         read/write either byte ordering now.</dd>
          </dt>
         </p>
</dl>         
 
d304 2
a305 4
<p><small>Source: image_doc.html    &nbsp;&nbsp;&nbsp;  
Last update: 28 Feb. 2003 &nbsp;&nbsp;&nbsp;
ArDean Leith  </small></p>

d308 1
@


1.15
log
@indexed stacks
@
text
@d174 1
a174 1
    50..76  reserved for Jose Maria's transforms</li>
d189 1
a189 1
	 conversion.</dt>
d197 3
a199 2
         in <a href="euler.html">Euler format</a> and are given in degrees. </dt>
          </p><p>
d201 7
a207 7
<dt>Note#3 : <dd> Most Unix  machines use a different floating point 
         format from VAX/VMS.  SPIDER contains the 
         <a href="man/cpfromvax.html">"CP FROM VAX"</a> 
         operation to convert a VAX/VMS SPIDER image to a Unix SPIDER 
         image.  Relevant source code for converting VAX/VMS floating 
         point numbers to Unix IEEE format (on SGI) is contained in 
         <a href="../src/vax32u.f">vax32u.f</a>. </dt>
d213 1
a213 1
Last update: 21 Jan. 2003 &nbsp;&nbsp;&nbsp;
@


1.14
log
@stack error
@
text
@d11 2
a12 1
SPIDER uses <I>nsam</I> to denote number of pixels (voxels) per row, 
d16 2
d24 1
d26 2
a27 1
<blockquote> <kbd>
d32 2
a33 1
</blockquote> </kbd>
d40 9
d51 2
a52 1
<blockquote> <kbd>
d57 2
a58 1
</kbd></blockquote> 
d61 6
a66 5
file is as follows: <p>
 
    <SAMP> <DL> 
    <dt>Records  1 --&gt; labrec  
    <dd>SPIDER header      
d68 4
a71 4
    <dt>Records  (labrec+1)--&gt; (nrow+labrec)
    <dd>slice No. 1
    <dt>Records  (nrow+labrec+1)--&gt; (2*nrow+labrec)
    <dd>slice No. 2<br>
d74 2
a75 2
    <dt>Records  ((nslice-1)*nrow+labrec+1) -&gt; (nslice*nrow+labrec) 
    <dd>slice No. nslice<br>
d79 5
a83 3
                (nslice*nrow+labrec)
    </DL> </SAMP>     

d86 1
a86 1
 <OL> 
d88 1
a88 1
    <li> nslice   = number of slices (planes) in volume (=1 for an image) 
d90 3
a92 3
    <li> nrow     = number of rows per slice. <br>
    <li> irec     = total number of records in the file (unused)  <br>
    <li> nhistrec = (obsolete, unused) <br>
d96 10
a105 10
                    are no longer supported in SPIDER. <br>
    <TABLE>
        <tr><TH>iform</TH> <TH>(type)</TH>  <TH> data type</TH><tr>
        <tr><TD align=middle> 1 </td><td>(r)</td> <td>2D image.</td></tr>
        <tr><TD align=middle> 3 </td><td>(r)</td> <td>3D volume.</td></tr>
        <tr><TD align=middle>-11</td><td>(fo)</td> <td>2D Fourier, mixed radix odd.</td></tr>  
        <tr><TD align=middle>-12</td><td>(fe)</td> <td>2D Fourier, mixed radix even.</td></tr>
        <tr><TD align=middle>-21</td><td>(fo)</td> <td>3D Fourier, mixed radix odd.</td></tr>
        <tr><TD align=middle>-22</td><td>(fe)</td> <td> 3D Fourier, mixed radix even.</td></tr>        
    </TABLE>                          
d111 4
a114 4
                   locations).
    <li> fmax    = maximum value.
    <li> fmin    = minimum value.
    <li> av      = average value.
d116 16
a131 15
                   that sig has not been computed previously.
    <li> ihist   = (obsolete, no longer used).
    <li> nsam    = number of pixels per line.
    <li> labrec  = number of records in file header (label).
    <li> iangle  = flag that tilt angles are present.
    <li> phi     = tilt angle (See note #2 below).
    <li> theta   = tilt angle.
    <li> gamma   = tilt angle (also called psi).
    <li> xoff    = x translation.
    <li> yoff    = y translation.
    <li> zoff    = z translation.
    <li> scale   = scale factor.
    <li> labbyt  = total number of bytes in header.
    <li> lenbyt  = record length in bytes.
    <li> istack = This header position has a value of  0 in simple 2D or 3D
d136 26
a161 20
            own header.)  A value of 2 in this position in the overall 
            stack header indicates a stack of images.  The stacked image 
            headers  contain a value of -1 in this position (unused).   
    <li> inuse =  This header position is not used in for simple 2D or 3D 
            images.  In a overall stack header, a value of -1 in 
            this position indicates that stack is OK.  In a stacked 
            image header a value of 1 indicates that this image is in 
            use (exists).  
    <li> maxim =  This header position is not used in simple 2D or 3D image 
            headers or in stacked image headers.  In stacks this 
            position in the overall stack header contains the number 
            of the highest image currently used in the stack.  This 
            number is updated if necessary when an image is or deleted 
            from the stack.
    <li> imgnum = This header position is not used in simple 2D or 3D image 
            headers or in overall stack headers.  In a stacked image 
            header this position contains the number of the current 
            image.  
    <li> unused
    <li> unused
d165 11
a175 9
                   that was stored in words 15..20.  
    <li> phi1
    <li> theta1
    <li> psi1
    <li> phi2
    <li> theta2
    <li> psi2
    <li>- 50..76  reserved for Jose Maria's transforms
    </UL>                               
d183 2
a184 1
<DL>
d189 2
a190 1
	 conversion.<p>
d193 1
a193 2
         in the SPIDER
         header are available to communicate between different
d197 2
a198 2
         in <a href="euler.html">Euler format</a> and are given in degrees. 
         <p>
d206 2
a207 3
         <a href="../src/vax32u.f">vax32u.f</a>. 

<p>
d212 2
a213 2
Last update: 17 Dec. 2002 &nbsp;&nbsp;&nbsp;
ArDean Leith  </small><p>
@


1.13
log
@euler link
@
text
@d1 1
a1 1
<HTML>
d3 3
a5 3
<HEAD>
<TITLE>SPIDER: Image file format</TITLE>
</HEAD>
d7 1
a7 1
<BODY>
d9 1
a9 1
<H2>Format of SPIDER 2D and 3D image files</H2> 
d12 1
a12 1
<I>nrow</I > to denote number of rows, and <I>nslice</I> to denote the
d15 2
a16 2
<P>
The image data is preceeded by a header.  There are <I>labrec</I> 
d22 11
a32 11
<BLOCKQUOTE> <KBD>
    LENBYT  = NSAM * 4                                    <BR>
    LABREC = 1024 / LENBYT                                <BR>
    IF (MOD(1024,LENBYT) .NE. 0) LABREC = LABREC + 1      <BR>
    LABBYT  = LABREC * LENBYT                             <BR>
</BLOCKQUOTE> </KBD>

Where <I>LENBYT</I> is the record length in bytes, and the
<I>MOD</I> function returns the remainder of dividing <I>1024</I> by 
<I>LENBYT</I>.  This variable length header is used for compatibility
with FORTRAN direct access unformatted file I/O<BR>
d36 1
a36 1
<BLOCKQUOTE> <KBD>
d38 1
a38 1
   <I>labrec + nrow x nslice</I>  records. In a standard
d41 1
a41 1
</KBD></BLOCKQUOTE> 
d44 1
a44 1
file is as follows: <P>
d47 2
a48 2
    <DT>Records  1 --&gt; labrec  
    <DD>SPIDER header      
d50 11
a60 11
    <DT>Records  (labrec+1)--&gt; (nrow+labrec)
    <DD>slice No. 1
    <DT>Records  (nrow+labrec+1)--&gt; (2*nrow+labrec)
    <DD>slice No. 2<BR>
    . <BR>
    . <BR>
    <DT>Records  ((nslice-1)*nrow+labrec+1) -&gt; (nslice*nrow+labrec) 
    <DD>slice No. nslice<BR>
    . <BR>
    . <BR>
    <DT>Records (nslice*nrow+labrec+1) --&gt; 
d65 1
a65 1
Layout of the SPIDER header is as follows: <BR>
d68 1
a68 1
    <LI> nslice   = number of slices (planes) in volume (=1 for an image) 
d70 3
a72 3
    <LI> nrow     = number of rows per slice. <BR>
    <LI> irec     = total number of records in the file (unused)  <BR>
    <LI> nhistrec = (obsolete, unused) <BR>
d74 1
a74 1
    <LI> iform    = file type specifier. Obsolete file types
d76 1
a76 1
                    are no longer supported in SPIDER. <BR>
d78 7
a84 7
        <TR><TH>iform</TH> <TH>(type)</TH>  <TH> data type</TH><TR>
        <TR><TD align=middle> 1 </TD><TD>(r)</TD> <TD>2D image.</TD></TR>
        <TR><TD align=middle> 3 </TD><TD>(r)</TD> <TD>3D volume.</TD></TR>
        <TR><TD align=middle>-11</TD><TD>(fo)</TD> <TD>2D Fourier, mixed radix odd.</TD></TR>  
        <TR><TD align=middle>-12</TD><TD>(fe)</TD> <TD>2D Fourier, mixed radix even.</TD></TR>
        <TR><TD align=middle>-21</TD><TD>(fo)</TD> <TD>3D Fourier, mixed radix odd.</TD></TR>
        <TR><TD align=middle>-22</TD><TD>(fe)</TD> <TD> 3D Fourier, mixed radix even.</TD></TR>        
d87 1
a87 1
    <LI> imami   = maximum/minimum flag. Is set at 0 when the file is
d92 4
a95 4
    <LI> fmax    = maximum value.
    <LI> fmin    = minimum value.
    <LI> av      = average value.
    <LI> sig     = standard deviation. A value of -1.0 indicates 
d97 14
a110 14
    <LI> ihist   = (obsolete, no longer used).
    <LI> nsam    = number of pixels per line.
    <LI> labrec  = number of records in file header (label).
    <LI> iangle  = flag that tilt angles are present.
    <LI> phi     = tilt angle (See note #2 below).
    <LI> theta   = tilt angle.
    <LI> gamma   = tilt angle (also called psi).
    <LI> xoff    = x translation.
    <LI> yoff    = y translation.
    <LI> zoff    = z translation.
    <LI> scale   = scale factor.
    <LI> labbyt  = total number of bytes in header.
    <LI> lenbyt  = record length in bytes.
    <LI> istack = This header position has a value of  0 in simple 2D or 3D
d117 2
a118 2
            headers also contain a value of 2 in this position.   
    <LI> inuse =  This header position is not used in for simple 2D or 3D 
d123 1
a123 1
    <LI> maxim =  This header position is not used in simple 2D or 3D image 
d129 1
a129 1
    <LI> imgnum = This header position is not used in simple 2D or 3D image 
d133 3
a135 3
    <LI> unused
    <LI> unused
    <LI> Kangle  = flag that additional angles are present in header. 
d139 7
a145 7
    <LI> phi1
    <LI> theta1
    <LI> psi1
    <LI> phi2
    <LI> theta2
    <LI> psi2
    <LI>- 50..76  reserved for Jose Maria's transforms
d148 1
a148 1
                        e.g. 27-MAY-1999 <BR>
d150 2
a151 2
                        e.g. 09:43:19    <BR>
    217-256 -- ctit   = character * 160 containing title <P>
d155 1
a155 1
<DT>Note#1 :<DD>All character arrays are retrieved from the floating 
d159 1
a159 1
	 conversion.<P>
d161 1
a161 1
<DT>Note#2 :<DD>The angle, offset & scale factor locations contained 
d168 1
a168 1
         <P>
d170 1
a170 1
<DT>Note#3 : <DD> Most Unix  machines use a different floating point 
d172 1
a172 1
         <A HREF="man/cpfromvax.html">"CP FROM VAX"</A> 
d176 1
a176 1
         <A HREF="../src/vax32u.f">vax32u.f</A>. 
d178 2
a179 2
<P>
</DL>         
d181 4
a184 4
<HR>
<P><SMALL>Source: image_doc.html    &nbsp;&nbsp;&nbsp;  
Last update: 18 Sept 2000 &nbsp;&nbsp;&nbsp;
ArDean Leith  </SMALL><P>
d186 2
a187 2
</BODY>
</HTML>
@


1.12
log
@added 3D fourier types to header value 5
@
text
@d167 1
a167 1
         in Euler format and are given in degrees. 
@


1.11
log
@angle note
@
text
@d75 1
a75 1
                    d, 8, 11, 12, 16, -1, -3, -7, and -9 are
d77 10
a86 8
            iform (type)   data type
        <UL>
        <LI>   1   (r)     2-d image.
        <LI>   3   (r)     3-d volume.
        <LI> -11   (fo)    2-d Fourier, mixed radix odd.  
        <LI> -12   (fe)    2-d Fourier, mixed radix even.
        </UL> 
                              
@


1.10
log
@removed note about histogram records
@
text
@d2 1
d19 2
a20 1
bytes and is calculated as follows when a new SPIDER image is created:
d99 1
a99 1
    <LI> phi     = tilt angle.
d159 11
a169 2
<DT>Note#2 : <DD> Most Unix  machines use a different floating point 
         format from VAX/VMS. SPIDER contains the 
d181 1
a181 1
Last update: 27 May 1999 &nbsp;&nbsp;&nbsp;
@


1.9
log
@improved stack description.
@
text
@a39 2
The image data is no longer followed by a trailer containing 
records for histogram data.<P> 
@


1.8
log
@updated.
@
text
@d30 1
a30 1
with direct access unformatted file I/O<BR>
d108 23
a130 10
    <LI> istack  = value of 2 indicates that file contains a stack 
                   of images.
    <LI> inuse   = in a stacked file header a value of -1 indicates that
                   stack is OK.
                   in a stacked file header a value of 1 indicates that 
                   this image is in use (exists).
    <LI> maxim   = if file contains a stack this value contains the 
                   number of the highest image used in stack.
    <LI> imgnum  = in a stacked image file header this value contains 
                   the number of this image.
d145 4
a148 2
    212-214 == cdat   = character * 12  containing creation date<BR>
    215-216 -- ctim   = character * 8   containing creation time<BR>
d172 1
a172 1
Last update: 12 April 1999 &nbsp;&nbsp;&nbsp;
@


1.7
log
@updated
@
text
@d11 1
a11 1
<I>nrow</I >to denote number of rows, and <I>nslice</I> to denote the
d74 1
a74 1
    <LI> iform    = file type specifier. Currently file types
a80 8
        <LI>   8   (8)     8 bit black and white. (Sterecon only)
        <LI>  11   (c)     8 bit color.  (Sterecon only)
        <LI>  12   (-)     8 bit runlength black and white. (Sterecon only)
        <LI>  16   (16)    16 bit black and white.  (Sterecon only)
        <LI>  -1   (f)     2-d Fourier transform.   (obsolete)
        <LI>  -3   (f)     3-d Fourier transform.   (obsolete)
        <LI>  -7   (q)     3-d Fourier transform, Paul's format.   (obsolete)
        <LI>  -9   (s)     3-d simple Fourier (Michael's format).  (obsolete)
d120 1
a120 1
    <LI> Kangle  = flag that additional angles are present. 
d123 1
a123 3
                   that was stored in words 15..20.  For details see 
                   manual chapter
                   <A HREF="man/voceul.html"> voceul.man</A>
d144 2
a145 7
<DT>Note#2 : <DD>The number of records in the file depends on the type 
         of file. All files have a header, and space for the image data.  
         <P>

<DT>Note#3 : <DD>Most Unix  machines use a different floating point 
         format from 
         VAX/VMS. SPIDER contains 
d147 4
a150 9
         and 
         <A HREF="man/cptovax.html">"CP TO VAX"</A> 
         commands to convert a VAX/VMS SPIDER image to a Unix SPIDER 
         image (and vice versa). Relevant source code 
         for interconverting Unix and VAX/VMS floating point numbers is 
         contained in 
         <A HREF="../src/vax32.f">vax32.f</A> , 
         <A HREF="../src/vax32u.f">vax32u.f</A>, and  
         <A HREF="../src/unix32.f">unix32.f</A>. 
d157 1
a157 1
Last update: 1 February 1999 &nbsp;&nbsp;&nbsp;
@


1.6
log
@formatting
@
text
@d15 2
a16 2
The image data is preceeded by a header.  There are <I>headrec</I> 
records in the header, where headrec = ceiling of (256/nsam).  Please
d21 4
a24 4
    LENBYT  = NSAM * 4 <BR>
    HEADREC = 1024 / LENBYT<BR>
    IF (MOD(1024,LENBYT) .NE. 0) HEADREC = HEADREC + 1<BR>
    LABBYT  = HEADREC * LENBYT<BR>
d36 1
a36 1
   <I>headrec + nrow x nslice</I>  records. In a standard
d47 1
a47 1
    <DT>Records  1 --&gt; headrec  
d50 1
a50 1
    <DT>Records  (headrec+1)--&gt; (nrow+headrec)
d52 1
a52 1
    <DT>Records  (nrow+headrec+1)--&gt; (2*nrow+headrec)
d56 1
a56 1
    <DT>Records  ((nslice-1)*nrow+headrec+1) -&gt; (nslice*nrow+headrec) 
d60 2
a61 2
    <DT>Records (nslice*nrow+headrec+1) --&gt; 
                (nslice*nrow+headrec)
d68 1
a68 13
    <LI> nslice = number of slices (planes) in volume 
          (=1 for an image) The value stored in the file is 
          negative on normal VAX/VMS files.  (VAX/VMS files
          created before 1988 had only a single record for the
          header, irrespective of the record length which was
          always nsam. For these early VAX/VMS files the first
          header had a positive value for nslice).  The first
          header position on Unix SPIDER files is always the
          positive value of nslice since there are no short
          label files available on UNIX SPIDER.  As of August
          1996 short label files must be converted to regular
          files on VAX/VMS using 'CP FROM SHORT' before they 
          can be used.
d72 1
a72 1
    <LI> nhistrec = (obsolete) <BR>
d75 2
a76 1
                    d, 8, c, -, and 16 are not supported in SPIDER. <BR>
d85 5
a89 5
        <LI>  -1   (f)     2-d Fourier transform.
        <LI>  -3   (f)     3-d Fourier transform.
        <LI>  -7   (q)     3-d Fourier transform, Paul's format.
        <LI>  -9   (s)     3-d simple Fourier (Michael's format).
        <LI> -11   (fo)    2-d Fourier, mixed radix odd.
d91 2
a92 1
        </UL>                               
d101 1
a101 1
    <LI> sig     = standard deviation. A value of -1.0 Indicates 
d105 2
a106 2
    <LI> headrec = number of records in file header.
    <LI> iangle  = flag that tilt angles have been filled.
d116 10
a125 3
    <LI> istack  = indicator that file contains a stack of images.
    <LI> inuse   = indicator that this image in stack is used (exists) 
    <LI> maxim   = max. image used in stack (in stack header only) 
d128 1
a128 3
    <LI> unused
    <LI> unused
    <LI> Kangle  = flag that additional angles are set. 
d142 1
a142 1
    212-214 == cdat   = character * 10  containing creation date<BR>
d154 3
a156 9
<DT>Note#3 : <DD>The number of records in the file depends on the type of file.
         All files have a header, and space for the image data.  
         Fourier files may have extra record(s) needed for the Fourier.<P>

<DT>Note#4 : <DD>Prior to 1989 an obsolete file format was in use on VAX/VMS.
         The old short header format had a single header record.
         When narrow images were used a portion of the header information would
         be truncated and lost.  The "CP FROM SHORT" command can convert an old short header 
         image file to the current format.<P>
d158 2
a159 1
<DT>Note#5 : <DD>Most Unix  machines use a different floating point format from 
d177 1
a177 1
Last update: 14 January 1998 &nbsp;&nbsp;&nbsp;
@


1.5
log
@changed nstack
@
text
@d21 4
a24 4
    LENBYT  = NSAM * 4
    HEADREC = 1024 / LENBYT
    IF (MOD(1024,LENBYT) .NE. 0) HEADREC = HEADREC + 1
    LABBYT  = HEADREC * LENBYT
@


1.4
log
@added more info on header length
@
text
@d10 6
a15 12
A 2D image is considered to be a special case of a volume consisting
of a single slice (or plane).  A volume of nsam x nrow x nslice voxels 
is stored in the following manner:

   <BLOCKQUOTE> <KBD>
   Unformatted, direct access file containing a total of 
   <I>headrec + nrow x nslice</I>  records. In a standard
   SPIDER image file each record contains nsam 4-byte words 
   which are interpreted as floating point numbers.
   </BLOCKQUOTE> </KBD>

The image data is preceeded by a header.  There are <EM>headrec</EM> 
d19 8
a26 6
   <BLOCKQUOTE> <KBD>
          LENBYT  = NSAM * 4
          HEADREC = 1024 / LENBYT
          IF (MOD(1024,LENBYT) .NE. 0) HEADREC = HEADREC + 1
          LABBYT  = HEADREC * LENBYT
   </BLOCKQUOTE> </KBD>
d30 10
a39 1
with direct acess unformatted file I/O<BR>
a89 1
        <LI>   0   (d)     unused.
d96 6
a101 6
        <LI>  -1   (f)     2-d fourier transform.
        <LI>  -3   (f)     3-d fourier transform.
        <LI>  -7   (q)     3-d fourier transform, Paul's format.
        <LI>  -9   (s)     3-d simple fourier (Michael's format).
        <LI> -11   (fo)    2-d fourier, mixed radix odd.
        <LI> -12   (fe)    2-d fourier, mixed radix even.
d126 1
a126 1
    <LI> nstack  = indicator that file contains a stack of images.
d128 1
d145 1
a145 1
    <LI>- 50.  =   Jose Maria's transforms
d153 3
a155 4
<DT>Note#1 :<DD>All integers are retrieved from the floating point 
         buffer array by arithmetic assignment but all character 
         arrays are retrieved from the floating point buffer 
	 array containing the header record(s) by equivalence assignments. 
d163 1
a163 1
<DT>Note#4 : <DD>Prior to 1989 a obsolete file format was in use on VAX/VMS.
d187 1
a187 1
Last update: 19 December 1997 &nbsp;&nbsp;&nbsp;
@


1.3
log
@spelling
@
text
@d16 1
a16 1
   <I>nrow x nslice + headrec</I>  records. For a standard
d18 1
a18 1
   to be interpreted as floating point numbers.
d22 14
a35 2
records in the header, where headrec = ceiling of (256/nsam).  The
image data is no longer followed by a trailer containing 
d78 1
a78 1
    <LI> irec     = (unused)  <BR>
d81 2
a82 2
    <LI> iform    = file type specifier. Currently file types 
                    d, 8, c, and 16 are not supported in SPIDER. <BR>
d100 4
a103 3
		   created, and at 1 when the maximum and minimum have 
                   been computed and stored into this header record 
                   (see following locations).
d107 3
a109 3
    <LI> sig     = standard deviation. a value of -1. Indicates 
                              that sig has not been computed previously.
    <LI> ihist   = (obsolete).
d115 1
a115 1
    <LI> gamma   = psi  = tilt angle.
d170 2
a171 2
         commands to convert a VAX/VMS SPIDER 
         image to a Unix SPIDER image (and vice versa). Relevant source code 
d183 1
a183 1
Last update: 27 July 1997 &nbsp;&nbsp;&nbsp;
@


1.2
log
@added nstack
@
text
@d62 2
a63 1
          files on VAX/VMS using 'CPFROM SHORT' before they can be used.
d110 1
a110 1
    <LI> inuse   = indicator that this image is used in stack is used  
d127 1
a127 1
    <LI>- 50.   Jose Maria's transforms
d137 1
a137 1
          arrays are retrieved from the floating point buffer 
d149 1
a149 1
         be truncated and lost.  The "CPFROM SHORT" command can convert an old short header 
d170 1
a170 1
Last update: 18 June 1997 &nbsp;&nbsp;&nbsp;
@


1.1
log
@Initial revision
@
text
@d108 2
d114 6
a119 7
    <LI> unused
    <LI> unused
    <LI> iangles2 = flag that angles are set. 1 = one additional 
                    rotation is present,  2 = additional rotation
                    that preceeds the rotation that was stored in 
                    words 15..20.  For details see manual chapter
                    <A HREF="man/voceul.html"> voceul.man</A>
d169 1
a169 1
Last update: 8 Jan 1997 &nbsp;&nbsp;&nbsp;
@

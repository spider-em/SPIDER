head	1.22;
access;
symbols;
locks;
comment	@# @;


1.22
date	2018.10.11.13.22.21;	author leith;	state Exp;
branches;
next	1.21;

1.21
date	2017.01.19.19.22.12;	author leith;	state Exp;
branches;
next	1.20;

1.20
date	2009.04.09.19.23.45;	author leith;	state Exp;
branches;
next	1.19;

1.19
date	2009.03.25.18.12.33;	author leith;	state Exp;
branches;
next	1.18;

1.18
date	2008.07.29.17.31.24;	author leith;	state Exp;
branches;
next	1.17;

1.17
date	2008.01.03.14.08.58;	author leith;	state Exp;
branches;
next	1.16;

1.16
date	2006.08.04.14.44.44;	author leith;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.18.20.04.37;	author leith;	state Exp;
branches;
next	1.14;

1.14
date	2005.07.11.18.05.24;	author leith;	state Exp;
branches;
next	1.13;

1.13
date	2004.11.09.19.19.28;	author leith;	state Exp;
branches;
next	1.12;

1.12
date	2004.11.09.19.09.32;	author leith;	state Exp;
branches;
next	1.11;

1.11
date	2004.07.29.13.49.05;	author leith;	state Exp;
branches;
next	1.10;

1.10
date	2004.07.29.13.48.59;	author leith;	state Exp;
branches;
next	1.9;

1.9
date	2004.07.14.17.43.51;	author leith;	state Exp;
branches;
next	1.8;

1.8
date	2003.03.26.16.08.13;	author leith;	state Exp;
branches;
next	1.7;

1.7
date	2003.02.20.14.40.32;	author leith;	state Exp;
branches;
next	1.6;

1.6
date	2003.02.14.19.46.39;	author leith;	state Exp;
branches;
next	1.5;

1.5
date	2003.02.14.18.23.47;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.13.18.24.02;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.19.15.45.20;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.16.15.06.03;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	2000.03.14.17.34.45;	author leith;	state Exp;
branches;
next	;


desc
@@


1.22
log
@*** empty log message ***
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
<head>
   <title>SPIDER: Using FFTW</title>
</head>

<body>

<p />
<h1 align="center">Using FFTW With SPIDER</h1>

<p>
The <a href="http://www.fftw.org/">FFTW</a> (The Fastest Fourier
Transform in the West) is a 'C' subroutine library for computing
the Discrete Fourier Transform in one or more dimensions, of
both real and complex data, and of arbitrary input size. The FFTW
package was developed at MIT by Matteo Frigo and Steven G. Johnson.
They believe that <cite>" FFTW's performance is typically superior
to that of other publicly available FFT software. Moreover, FFTW's
performance is portable: the program will perform well on most
architectures without modification."</cite> 
</p>

<p> FFTW is <a href="http://www.gnu.org/philosophy/categories.html">
'free open source software'</a> distributed under the 
<a href= "http://www.gnu.org/copyleft/gpl.html">GNU General Public
License</a>.</p>
 
<p>FFTW version 3.2.1 is now used within default versions of SPIDER 
on Linux and OSX for calculating Fourier transforms.
<small>Note: FFTW 2 is still used within SPIDER for MPI.</small></p>
   
<p>Since SPIDER is now distributed under the
GPL license we can now include statically linked FFTW libraries 
within our SPIDER distribution. 

<b>Unless you wish to recompile/relink SPIDER you do not have to
install FFTW and can ignore the rest of the information
on this page.</b>  </p>

<hr />

<p><h4>If you wish to recompile/link FFTW for use with SPIDER On Linux</h4></p>

<ul>
<li>

   <p>FFTW3 code is
   accessed by defining the preprocessor variable: <i>SP_LIBFFTW3</i>
   when compiling and linking SPIDER. See: 
   <a href="../src/Makefile_linux_mp_opt64">Makefile_linux_mp_opt64</a> for
   example of how this is done. </p>

   <p>The SPIDER distribution contains three sets of FFTW
   object code libraries for use with different
   platforms: 
 
   <ul>
   <li><a href="../fftw/fftw3-32">   AMD/Intel Linux 32 bits</a> </li>
   <li><a href="../fftw/fftw3-opt64">AMD Linux 64 bits</a>       </li>
   <li><a href="../fftw/fftw3-intel">Intel Xeon Linux 32 bits</a></li>
  </ul>
 
   <p>The spider executables included with your distribution have been
   statically linked with the respective libraries for these 
   platforms. 
   <a href= "../fftw/fftw3-intel/lib">      fftw3-intel/lib</a></p>
   <a href= "../fftw/fftw3-intel64-icc/lib">fftw3-intel64-icc/lib</a>,
   <a href= "../fftw/fftw3-opt64/lib">      fftw3-opt64/lib</a>,
 
   <p>If you wish to recompile FFTW-3.2.1: <br />
   </ps>

   <ol>

   <p><li>Create new directory in: <i>spider/fftw</i> <br />
   <i>mkdir spider/fttw/fftw3-new</i>                 <br />
   <i>cd spider/fttw/fftw3-new</i>  </li>
   <p/>
 
   <p><li>
   <a href="http://www.fftw.org/download.html">Download FFTW3 
   </a> from <i>www.fftw.org</i></li></p>

   <p><li>Extract the software:              <br />
   e.g. <i>tar xvzf fftw-3.2.1.tar.gz</i>    <br />
   e.g. <i>mv fftw-3.2.1/* .</i>    </p>

   <p><li>Set compiler location                          <br />
   e.g. <i>setenv F77  /opt/intel_fc_80/bin/ifort</i>    <br />
   e.g. <i>setenv CC   /opt/intel_cc_80/bin/icc</i></li> </p>

   <p><li>Configure FFTW installation                    <br />
   <small>Note: configure options for 3.2.1 are <b>NOT</b> same as for
   earlier FFTW releases.</small>                         <br />  
    e.g. <i>./configure --enable-float  --with-openmp</i></li> </p>

   <p><li>Build FFTW     <br />
   e.g. <i>make</i></li> </p>

   <p><li>Make library directory and put FFTW3 libraries there:    <br />
   e.g. <i>mkdir &nbsp;&nbsp;  lib</i>                             <br />
   e.g. <i>cp ./.libs/libfftw3f.a ./threads/.libs/libfftw3f_threads.a &nbsp;&nbsp; lib </i></li> </p>

   <p><li>Link your SPIDER with the libraries in:  
   <i>spider/fttw/fftw3-new/lib</i> </p>
   </ol>
</ul>

<hr>
<small>Source file: fftw.html &nbsp;&nbsp;&nbsp; 
      Updated: 19 Jan. 2017    &nbsp;&nbsp;&nbsp; 
      ArDean Leith
</small>

</body>
</html>

@


1.21
log
@updated
@
text
@d54 2
a55 2
   <p>The SPIDER distribution contains five sets of FFTW
   code and associated object code libraries for use with different
@


1.20
log
@update for 3.2.1
@
text
@d4 1
a4 1
<title>SPIDER: Using FFTW</title>
d8 3
a10 1
<h1 align="center">Using FFTW WITH SPIDER</h1>
d43 1
a43 2
<p><h4>If you wish to recompile/link FFTW for use with SPIDER On 
      GNU/Linux or OS X</h4></p>
d62 1
a62 3
   <li><a href="../fftw/fftw-osx-32">Intel OSX 32 bits</a>       </li>
   <li><a href="../fftw/fftw-osx-64">Intel OSX 64 bits</a>       </li>
   </ul>
d67 4
a70 6
   <a href= "../fftw/fftw3-32/lib">    fftw3-32/lib</a>,
   <a href= "../fftw/fftw3-opt64/lib"> fftw3-opt64/lib</a>,
   <a href= "../fftw/fftw3-intel/lib"> fftw3-intel/lib</a>,
   <a href= "../fftw/fftw3-osx-32/lib">fftw3-osx-32/lib</a>,
   <a href= "../fftw/fftw3-osx-64/lib">fftw3-osx-64/lib</a> </p>

d86 1
a86 2
   e.g. <i>gunzip fftw-3.2.1.tar.gz</i>      <br />
   e.g. <i>tar xvf fftw-3.2.1.tar</i></i>    <br />
d112 1
a112 1
      Updated: 9 Apr. 2009    &nbsp;&nbsp;&nbsp; 
@


1.19
log
@osx
@
text
@d27 5
a31 3
<p>FFTW version 3.1.2 is used within default versions of SPIDER 
on Linux use for calculating Fourier transforms.   
Since SPIDER is now distributed under the
a33 4
<b>Unless you wish to recompile/relink SPIDER you no longer have to
worry about installing FFTW and can ignore the rest of the information
on this page.</b>
</p>
d35 3
d39 1
a39 1
<p><b>If you should wish to recompile/link FFTW for use with SPIDER.</b></p>
d41 2
a42 2
<hr>
<h2 align="center">On GNU/Linux</h2>
d50 1
a50 1
   <a href="../src/Makefile_linux_mpfftw_opt64">Makefile_linux_mpfftw_opt64</a> for
d58 2
a59 2
   <li><a href="../fftw/fftw3-32">   AMD/Intel Linux 32 bits</a></li>
   <li><a href="../fftw/fftw3-opt64">AMD Linux 64 bits</a></li>
d61 2
a62 2
   <li><a href="../fftw/fftw-osx-32">Intel OSX 32 bits</a></li>
   <li><a href="../fftw/fftw-osx-64">Intel OSX 64 bits</a></li>
d68 5
a72 5
   <a href= "../fftw/fftw3-32/lib">   fftw3-32/lib</a>,
   <a href= "../fftw/fftw3-opt64/lib">fftw3-opt64/lib</a>,
   <a href= "../fftw/fftw3-intel/lib">fftw3-intel/lib</a>,
   <a href= "../fftw/fftw-osx-32/lib">fftw-osx-32/lib</a>,
   <a href= "../fftw/fftw-osx-64/lib">fftw-osx-64/lib</a> </p>
d74 2
a75 1
   <p>If you wish to recompile FFTW for one of these platforms:</p[>
d79 3
a81 2
   <p><li>Access the desired directory<br/>
   e.g. <i>cd spider/fttw/fftw3-altix</i></li>
d84 24
a107 25
   <p><li>Clean the FFTW distribution<br/>
   e.g. <i>make distclean</i>        <br/>
   or <b>Optional</b>                 <br/>
   <a href="http://www.fftw.org/download.html">Download complete
   FFTW package</a> from <i>www.fftw.org</i><br/>
   e.g. get: <i>fftw-3.1.2.tar.gz</i><br/>
   e.g. <i>gunzip fftw-3.1.2.tar.gz; tar xvf fftw-3.1.2.tar</i></li><p/>


   <p><li>Set compiler<br/>
   e.g. <i>setenv F77  /opt/intel_fc_80/bin/ifort</i><br/>
   e.g. <i>setenv CC   /opt/intel_cc_80/bin/icc</i></li> <p/>

   <p><li>Configure FFTW installation<br/>
   e.g. <i>./configure --enable-float --enable-threads --with-openmp --enable-type-prefix </i></li> <p/>

   <p><li>Build FFTW<br/>
   e.g. <i>make</i></li> <p/>

   <p><li>Make library directory<br/>
   e.g. <i>mkdir lib</i></li> <p/>

   <p><li>Put FFTW3 libraries in library directory<br/>
   e.g. <i>cp .libs/*  lib</i> <br />
   e.g. <i>cp threads/.libs/*  lib</i></li> <p/>
d109 2
d112 1
d116 1
a116 1
      Updated: 26 Mar. 2009   &nbsp;&nbsp;&nbsp; 
@


1.18
log
@space missing
@
text
@d57 5
a61 5
   <li><a href="../fftw/fftw3-32">   AMD/INTEL 32 bits</a></li>
   <li><a href="../fftw/fftw3-opt64">AMD Opteron 64 bits</a></li>
   <li><a href="../fftw/fftw3-intel">Intel 32 bits(with Xeon)</a></li>
   <li><a href="../fftw/fftw3-altix">SGI Altix 64 bits</a></li>
   <li><a href="../fftw/fftw-osx">  Apple OSX on Intel 32 bits</a></li>
d68 4
a71 4
   <a href= "../fftw/fftw3-opt64/lib">fftw3-opt64/lib</a>.
   <a href= "../fftw/fftw3-intel/lib">fftw3-intel/lib</a>.
   <a href= "../fftw/fftw3-altix/lib">fftw3-altix/lib</a>, and 
   <a href= "../fftw/fftw-osx/lib">   fftw-osx/lib</a> </p>
d111 3
a113 2
      Updated: 4 Jan. 2008         &nbsp;&nbsp;&nbsp; 
      ArDean Leith</small>
@


1.17
log
@fftw3 changes
@
text
@d95 1
a95 1
   e.g. <i>./configure --enable-float--enable-threads --with-openmp --enable-type-prefix </i></li> <p/>
@


1.16
log
@update
@
text
@d27 2
a28 2
<p>FFTW version 2.1.5 is used within default versions of SPIDER 
for Linux use for calculating Fourier transforms.   
a36 5
<p>SPIDER can alternatively use FFTW version 3.x.  This code is
accessed by defining SP_LIBFFTW3 preprocessor variable before
compiling SPIDER.  However we do <b>NOT</b> recommend using 
FFTW version 3.x! Due to the way Fourier transforms are used 
within SPIDER, FFTW version 3.x is usually slower.</p>
a37 1

d46 7
a52 1
   <p>The SPIDER distribution contains three sets of FFTW
d57 5
a61 4
   <li><a href="../fftw/fftw-32">   AMD/INTEL 32 bits</a></li>
   <li><a href="../fftw/fftw-opt64">AMD Opteron 64 bits</a></li>
   <li><a href="../fftw/fftw-intel">Intel 32 bits(with Xeon)</a></li>
   <li><a href="../fftw/fftw-altix">SGI Altix 64 bits</a></li>
d67 5
a71 4
   <a href= "../fftw/fftw-32/lib">fftw-32/lib</a>,
   <a href= "../fftw/fftw-opt64/lib">fftw-opt64/lib</a>.
   <a href= "../fftw/fftw-intel/lib">fftw-intel/lib</a>.
   <a href= "../fftw/fftw-altix/lib">fftw-altix/lib</a>, and 
d73 1
a73 1
   If you wish to recompile FFTW for one of these platforms:
d78 1
a78 1
   e.g. <i>cd spider/fttw/fftw-linux-altix</i></li>
d86 2
a87 2
   e.g. get: <i>fftw-2.1.5.tar.gz</i><br/>
   e.g. <i>gunzip fftw-2.1.5.tar.gz; tar xvf fftw-2.1.5.tar</i></li><p/>
d95 1
a95 37
   e.g. <i>./configure --enable-float --enable-type-prefix </i></li> <p/>

   <p><li><b>Optional:</b> Prepare threaded libraries if desired<br/>
   We have been unable to use the precompiled FFTW libraries
   available from the FFTW download site with SPIDER libraries due to
   problems with the length of identifier names for threaded use in FFTW.  
   This is usually not a problem since we no longer advise use of the
   threaded FFTW since it is slower on our Opteron and Altix systems than
   the single thread libraries. If you wish to experiment with these libraries
   you will have to compile FFTW for threaded use:<br/>
   e.g.  edit file: <i>threads/ rfftw_f77_threads.c</i>  and add:<br/>

<pre>
/**-------------------------edit: threads/ rfftw_f77_threads.c----------------*/
/* added by leith to shorten names */

void F77_FUNC_(rfftwnd_f77_threads_one_r_to_c,RFFTWND_F77_THREADS_ONE_REAL_TO_COMPLEX)
(int *nthreads, fftwnd_plan *p, fftw_real *in, fftw_complex *out)
   { rfftwnd_threads_one_real_to_complex(*nthreads,*p,in,out); }

void F77_FUNC_(rfftwnd_f77_threads_one_c_to_r,RFFTWND_F77_THREADS_ONE_COMPLEX_TO_REAL)
(int *nthreads, fftwnd_plan *p, fftw_complex *in, fftw_real *out)
   {  rfftwnd_threads_one_complex_to_real(*nthreads,*p,in,out); }
/* end leith Mar 2000 to shorten names */
/*  ---------------------------------- end of edit ---------------------------*/
</pre>

   reconfigure FFTW for threaded library creation<br/>
   e.g. <i>./configure --enable-threads --enable-float --enable-type-prefix --enable-shared </i></li> <p/>

   <p><li>Compile<br/>
   e.g. <i>make CFLAGS="-O3 -fpic"</i> </li> <p/>

   <p><li><b>Optional:</b> If you wish to use the shared libraries set LD_LIBRARY_PATH environment variable so that
   fftw shared libraries are located in your library search path.<br>
   e.g. <i>setenv LD_LIBRARY_PATH ..spider/fftw/fftw-linux-altix/lib</i></li>
   <p/>
d97 2
a98 4
 </ol>
   <p/>
<hr>
<h2 align="center">On SGI</h2>
d100 2
a101 154
A sample <a href="../src/Makefile4fftw">Makefile4fftw</a> is
available for single processor SGI machines which shows the use of
the environment variable: <b>SP_LIBFFTWMP</b> which activates the
code for FFTW usage. <br>
<br>
 Another sample <a href=
"../src/Makefile4mpfftw">Makefile4mpfftwmp</a> is available for
multiple processor SGI machines which shows the use of the
environment variable: <b>SP_LIBFFTWMP</b> which activates the code
for FFTW usage on multiple threads.<br>
<br>
 Due to the terms of The <a href=
"http://www.gnu.org/copyleft/gpl.html">GNU General Public
License</a> which FFTW is distributed under we can not include it
with our SPIDER distribution. If you wish to use this library to
replace SPIDER's FFT code or SGI's COmplib FFT code, you will have
to download the FFTW yourself, compile it on your machine, and copy
the libraries to your SPIDER directory.<br>
<br>
 We attach the following info which we used for the installation: 

<ol>
<li><kbd>setenv CFLAGS " -O3 -mips4 -n32 -mp"</kbd></li>

<li><kbd>configure --prefix=location-of-your-FFTW/fftw-2.1.3/
--enable-threads --enable-mpi- -enable-float</kbd></li>

<li><kbd>make CFLAGS="-O3 -mips4 -n32 -mp"</kbd></li>

<li><kbd>make install</kbd></li>

<li><kbd>\cp location-of-FFTW/fftw-2.1.3/lib/*.a
location-of-your-spider-libraries</kbd></li>
</ol>

<p>Some modifications were necessary to shorten two subroutine
names to suit SGI's compiler and to modify threads to use the SGI
Multiprocessing threads available when compiled with -mp.</p>

<p></p>

<pre>
/*--------------edit: fftw_threads-int.h ----------------------------*/

/***********************************************************************/
/* after preceeding line add: */

/* added leith Mar 2000 */
#define FFTW_USING_SGI_SPROC 
#undef FFTW_USING_POSIX_THREADS 
/* end added leith Mar 2000 */

#include &lt;fftw-int.h&gt;
.
.
.
.

/************************** POSIX Threads ****************************/
/* after preceeding line add: */


/* added leith Mar 2000 */

/************************** SGI sproc ****************************/
      
#elif defined(FFTW_USING_SGI_SPROC)

/* all changes for use with SGI mp are handled in fftw_threads.c  */
/* end added leith Mar 2000 */


/*------------------------edit: fftw_threads.c -------------------*/

#include &lt;fftw_threads-int.h&gt;
/* after preceeding line  add following code */

/* leith additions Mar 2000   */
#ifdef FFTW_USING_SGI_SPROC 
#undef FFTW_USING_POSIX_THREADS 
#endif
/* end leith additions Mar 2000 */
.
.
.
.

    d = (fftw_loop_data *) ALLOCA(sizeof(fftw_loop_data) * nthreads);
/* after preceeding line  add following code */

/* added leith Mar 2000 */
#ifdef FFTW_USING_SGI_SPROC
      d = (fftw_loop_data *) ALLOCA(sizeof(fftw_loop_data) * nthreads);

          /* fprintf(stderr,"Parallel mp_threads: %d\n",nthreads); */

      for (i = 0; i &lt; nthreads; ++i)
               { 
           d[i].max = (d[i].min = i * block_size) + block_size;
               if (d[i].max &gt; loopmax) d[i].max = loopmax;
           d[i].thread_num = i;
           d[i].data       = data;
               }

#pragma parallel 
          {
#pragma pfor local(i)
      for (i = 0; i &lt; nthreads; ++i)
               { 
           proc(&amp;d[i]); 
               }
          }
#else
      fftw_thread_id *tid;
      d = (fftw_loop_data *) ALLOCA(sizeof(fftw_loop_data) * nthreads);
      tid = (fftw_thread_id *) 
           ALLOCA(sizeof(fftw_thread_id) * (--nthreads));

          for (i = 0; i &lt; nthreads; ++i) 
               {
               d[i].max = (d[i].min = i * block_size) + block_size;
               d[i].thread_num = i;
               d[i].data       = data;

               fftw_thread_spawn(&amp;tid[i], (fftw_thread_function) proc, 
                                 (void *) &amp;d[i]);
               }

          d[i].min        = i * block_size;
          d[i].max        = loopmax;
          d[i].thread_num = i;
          d[i].data       = data;
          proc(&amp;d[i]); 

          for (i = 0; i &lt; nthreads; ++i)
               fftw_thread_wait(tid[i]);

      ALLOCA_CLEANUP(tid);
#endif
/* end added leith Mar 2000 */

*-------------------------edit:  rfftw_f77_threads.c----------------*/

/* added leith Mar 2000 to shorten names */
void F77_FUNC_(rfftwnd_f77_threads_one_r_to_c,RFFTWND_F77_THREADS_ONE_REAL_TO_COMPLEX)
(int *nthreads, fftwnd_plan *p, fftw_real *in, fftw_complex *out)
{   rfftwnd_threads_one_real_to_complex(*nthreads,*p,in,out); }

void F77_FUNC_(rfftwnd_f77_threads_one_c_to_r,RFFTWND_F77_THREADS_ONE_COMPLEX_TO_REAL)
(int *nthreads, fftwnd_plan *p, fftw_complex *in, fftw_real *out)
{ rfftwnd_threads_one_complex_to_real(*nthreads,*p,in,out); }
/* end leith Mar 2000 to shorten names */
*-------------------------edit: threads/Makefile ----------------*/
#noinst_PROGRAMS = fftw_threads_test rfftw_threads_test
d103 3
d107 1
a107 1
</pre>
d111 1
a111 1
      Updated: 4 Aug. 2006         &nbsp;&nbsp;&nbsp; 
@


1.15
log
@*** empty log message ***
@
text
@d57 4
a60 5
   <li><a href= "../fftw.fftw-linux">for AMD/INTEL 32 bits</a> </li>

   <li><a href="../fftw.fftw-linux-altix">for SGI Altix 64 bits</a></li>

   <li><a href="../fftw.fftw-linux-altix">for AMD Opteron 64 bits</a></li>
d64 1
a64 1
   statically linked with the respective libraries for these three
d66 4
a69 3
   <a href= "../fftw.fftw-linux">fftw_linux/lib</a>,
   <a href= "../fftw.fftw-linux">fftw_linux-altix/lib</a>, and 
   <a href= "../fftw.fftw-linux">fftw_linux-oopt64/lib</a>.
d296 1
a296 1
      Updated: 18 Oct. 2005         &nbsp;&nbsp;&nbsp; 
@


1.14
log
@opteron added
@
text
@a3 1
<meta name="generator" content="HTML Tidy, see www.w3.org">
d6 1
d10 1
d19 2
a20 3
architectures without modification."</cite> <br>
<br>
 
d22 1
a22 3
<p>We have added code to SPIDER to allow use version 2.1.5 of this
library. (SPIDER can <b>NOT</b> use the newer API of FFTW 3.x).  
FFTW is <a href="http://www.gnu.org/philosophy/categories.html">
d25 18
a42 7
License</a>. Due to the terms of the GPL license we can not include
statically linked FFTW libraries within our SPIDER distribution. If
you wish to use the FFTW library to replace SPIDER's FFT code or
SGI's Complib FFT code, you will have to download and install FFTW
on your system.<br>
However, if you lack a suitable compiler we can separately provide
compiled FFTW static and shared libraries for some systems.</p>
d44 1
a44 1
<p><b>To install FFTW for use with SPIDER.</b></p>
d50 1
a50 5
<li>Using FFTW package with precompiled FFTW libraries.<br/>
   (Note: We have been unable to use the precompiled FFTW libraries
   available from the FFTW download site with SPIDER libraries due to
   problems with the length of identifier names).</li>
   <p/>
d52 4
a55 11
   <ol>

   <li>Create directory for FFTW (in default location)<br>
   <i>mkdir /usr/local/fftw</i></li>
   <p/>

   <li>Move to FFTW directory<br>
   <i>cd /usr/local/fftw</i></li>
   <p/>

   <li>Download precompiled FFTW libraries from SPIDER site<br> 
d57 1
a57 5
   <li><a href= "http://www.wadsworth.org/spider_doc/spider/download/fftw-linux.tar.gz">
   for AMD/INTEL 32 bits</a> </li>

   <li><a href="http://www.wadsworth.org/spider_doc/spider/download/fftw-linux-altix.tar.gz">
   for SGI Altix 64 bits</a></li>
d59 1
a59 2
   <li><a href="http://www.wadsworth.org/spider_doc/spider/download/fftw-linux-opt64.tar.gz">
   for AMD Opteron 64 bits</a></li>
d61 1
d63 7
a69 16
   e.g. get: <i>fftw-linux.tar.gz</i></li>
   <p/>

   <li>Uncompress the download and extract the tar archive<br>
   e.g. <i>gunzip fftw-linux.tar.gz ; tar xvf fftw-linux.tar</i></li>
   <p/>

   <li>Copy contents of: <i>/usr/local/fftw/lib</i> to:
   <i>/usr/local/lib</i><br>
    e.g. <i>cp /usr/local/fftw/lib/* /usr/local/lib</i></li>
   <p/>

   <li>Set LD_LIBRARY_PATH environment variable so that
   <i>/usr/local/lib</i> is in your shared library search path.<br>
    e.g. <i>setenv LD_LIBRARY_PATH /usr/local/lib</i></li>
   <p/>
d71 1
a71 8
   <li>If you have installed FFTW as described above, the SPIDER
   executables which require FFTW should run correctly using the shared
   (run-time) FFTW libraries. You should NOT have to relink SPIDER.
   and you are finished with this installation.</li>
   </ol>
   <p/>

<li>Using original FFTW package from: www.fftw.org.</li>
a72 1
   <p></p>
a73 4
   <li><a href="http://www.fftw.org/download.html">Download complete
   FFTW package</a> from <i>www.fftw.org</i><br>
   e.g. get: <i>fftw-2.1.5.tar.gz</i></li>
   <p/>
d75 2
a76 2
   <li>Uncompress the download and extract the tar archive<br>
   e.g. <i>gunzip fftw-2.1.5.tar.gz; tar xvf fftw-2.1.5.tar</i></li>
a77 11

   <li>If using Portland group compiler set 'C' shell environment
   variable for pgf90 compiler<br>
   <i>setenv F77 pgf90</i></li>
   <p/>

   <li>If using Portland group compilers:<br>
   Create an executable script file named <i>'cc'</i> and make sure
   your path is set up to find this <i>'cc'</i> script file before the
   native <i>'cc'</i> command. The script file, using <i>csh</i>
   syntax, should contain:<br>
d79 12
a90 7
   <p><kbd>#!/bin/csh<br>
   setenv PGI /usr/pgi #! or wherever pgcc is installed<br>
   set path=($PGI/linux86/bin $path)<br>
   pgcc $*<br>
   </kbd></p>
   </li>
   <p/>
d92 2
a93 4
   <li>Configure FFTW<br>
   <i>./configure --enable-threads --enable-float --enable-shared
   --prefix=/usr/local/ --enable-type-prefix</i></li>
   <p/>
d95 9
a103 2
   <li>edit file: <i>threads/ rfftw_f77_threads.c</i><br>
   and add: 
a106 1

d111 1
a111 3
{
     rfftwnd_threads_one_real_to_complex(*nthreads,*p,in,out);
}
d115 1
a115 3
{
     rfftwnd_threads_one_complex_to_real(*nthreads,*p,in,out);
}
a116 1

d118 1
a118 3
   </pre>
   </li>
   <p/>
d120 2
a121 3
   <li>make fftw<br>
   <i>make</i></li>
   <p/>
d123 2
a124 3
   <li>install fftw<br>
   <i>make install</i></li>
   <p/>
d126 3
a128 3
   <li>Set LD_LIBRARY_PATH environment variable so that
   <i>/usr/local/lib</i> is in your shared library search path.<br>
    e.g. <i>setenv LD_LIBRARY_PATH /usr/local/lib</i></li>
d131 1
a131 5
    <li>If you have installed FFTW as described above the SPIDER
   executables<br>
   <i>cd spider_linux_fftw &amp; spider_linux_mpfftw</i>should run
   correctly using the shared (run-time) FFTW libraries. You should
   NOT have to relink SPIDER</li>
a132 3

</ol>

a207 1

a222 1

a276 1

a279 1

d282 1
a282 3
{
     rfftwnd_threads_one_real_to_complex(*nthreads,*p,in,out);
}
d286 1
a286 3
{
     rfftwnd_threads_one_complex_to_real(*nthreads,*p,in,out);
}
a287 1

d296 1
a296 1
      Updated: 11 Jul. 2005         &nbsp;&nbsp;&nbsp; 
@


1.13
log
@LD_LIB msg
@
text
@d57 12
a68 6
   <li>Download precompiled FFTW libraries 
   <a href= "http://www.wadsworth.org/spider_doc/spider/download/fftw-linux.tar.gz">
   for AMD/INTEL 32 bits</a> or<br>
   <a href="http://www.wadsworth.org/spider_doc/spider/download/fftw-linux-altix.tar.gz">
   for SGI Altix 64 bits</a><br>
   from SPIDER site<br>
d350 2
a351 2
Updated: 09 Nov. 2004         &nbsp;&nbsp;&nbsp; 
ArDean Leith</small>
@


1.12
log
@bad xhtml formatting fixed
@
text
@d158 6
a163 1
   <li>If you have installed FFTW as described above the SPIDER
d165 1
a165 1
    <i>cd spider_linux_fftw &amp; spider_linux_mpfftw</i>should run
@


1.11
log
@xhtml
@
text
@d12 1
a12 1
the Discrete Fourier Transform (DFT) in one or more dimensions, of
d23 4
a26 5
library. (SPIDER can not use the newer API of FFTW 3.x). However,
FFTW is <a href=
"http://www.gnu.org/philosophy/categories.html">'free open source
software'</a> distributed under the <a href=
"http://www.gnu.org/copyleft/gpl.html">GNU General Public
d29 2
a30 2
you wish to use the FFTW library to replace SPIDER's fft code or
SGI's Complib fft code, you will have to download and install FFTW
d32 1
a32 1
 However, if you lack a suitable compiler we can separately provide
d40 46
a85 76
<ol>
<li>Create directory for FFTW (in default location)<br>
 <i>mkdir /usr/local/fftw</i></li>

<li>Move to FFTW directory<br>
 <i>cd /usr/local/fftw</i></li>

<li style="list-style: none">
<p></p>
</li>

<li>Using FFTW package with precompiled FFTW libraries.</li>

<li style="list-style: none">
<p></p>

<ol>
<li>Download precompiled FFTW libraries <a href=
"http://www.wadsworth.org/spider_doc/spider/download/fftw-linux.tar.gz">
for AMD/INTEL 32 bits</a> or<br>
 <a href=
"http://www.wadsworth.org/spider_doc/spider/download/fftw-linux-altix.tar.gz">
for Altix 64 bits</a><br>
 from SPIDER site<br>
 e.g. get: <i>fftw-linux.tar.gz</i></li>

<li style="list-style: none">
<p></p>
</li>

<li>Uncompress the download and extract the tar archive<br>
 e.g. <i>gunzip fftw-linux.tar.gz ; tar xvf fftw-linux.tar</i></li>

<li style="list-style: none">
<p></p>
</li>

<li>Copy contents of: <i>/usr/local/fftw/lib</i> to:
<i>/usr/local/lib</i><br>
 e.g. <i>cp /usr/local/fftw/lib/* /usr/local/lib</i></li>
</ol>
</li>

<li style="list-style: none">
<p></p>
</li>

<li>Set LD_LIBRARY_PATH environment variable so that
<i>/usr/local/lib</i> is in your shared library search path.<br>
 e.g. <i>setenv LD_LIBRARY_PATH /usr/local/lib</i></li>

<li style="list-style: none">
<p></p>
</li>

<li>If you have installed FFTW as described above, the SPIDER
executableswhich require FFTW should run correctly using the shared
(run-time) FFTW libraries. You should NOT have to relink SPIDER.
and you are finished with this installation.</li>

<li style="list-style: none">
<p></p>
</li>

<li>Note: We have been unable to use the precompiled FFTW libraries
available from the FFTW download site with SPIDER libraries due to
problems with the length of identifier names.</li>

<li style="list-style: none">
<p></p>
</li>
</ol>

<br>
<br>
 
a86 1
<ul class="noindent">
a87 3
</ul>

<p></p>
d89 21
a109 29
<ol>
<li><a href="http://www.fftw.org/download.html">Download complete
FFTW package</a> from <i>www.fftw.org</i><br>
 e.g. get: <i>fftw-2.1.3.tar.gz</i></li>

<li style="list-style: none">
<p></p>
</li>

<li>Uncompress the download and extract the tar archive<br>
 e.g. <i>gunzip fftw-2.1.3.tar.gz; tar xvf fftw-2.1.3.tar</i></li>

<li style="list-style: none">
<p></p>
</li>

<li>If using Portland group compiler set 'C' shell environment
variable for pgf90 compiler<br>
 <i>setenv F77 pgf90</i></li>

<li style="list-style: none">
<p></p>
</li>

<li>If using Portland group compilers:<br>
 Create an executable script file named <i>'cc'</i> and make sure
your path is set up to find this <i>'cc'</i> script file before the
native <i>'cc'</i> command. The script file, using <i>csh</i>
syntax, should contain:<br>
d111 12
a122 15

<p><kbd>#!/bin/csh<br>
 setenv PGI /usr/pgi #! or wherever pgcc is installed<br>
 set path=($PGI/linux86/bin $path)<br>
 pgcc $*<br>
</kbd></p>
</li>

<li style="list-style: none">
<p></p>
</li>

<li>Configure FFTW<br>
 <i>./configure --enable-threads --enable-float --enable-shared
--prefix=/usr/local/ --enable-type-prefix</i></li>
d124 2
a125 6
<li style="list-style: none">
<p></p>
</li>

<li>edit file: <i>threads/ rfftw_f77_threads.c</i><br>
 and add: 
d146 18
a163 34
</pre>
</li>

<li style="list-style: none">
<p></p>
</li>

<li>make fftw<br>
 <i>make</i></li>

<li style="list-style: none">
<p></p>
</li>

<li>install fftw<br>
 <i>make install</i></li>

<li style="list-style: none">
<p></p>
</li>

<li>If you have installed FFTW as described above the SPIDER
executables<br>
 <i>cd spider_linux_fftw &amp; spider_linux_mpfftw</i>should run
correctly using the shared (run-time) FFTW libraries. You should
NOT have to relink SPIDER</li>

<li style="list-style: none">
<p></p>
</li>

<li>Note: We have been unable to use the precompiled FFTW libraries
available from the FFTW download site with SPIDER libraries due to
problems with the length of identifier names.</li>
a164 3
<li style="list-style: none">
<p></p>
</li>
a334 1

d338 4
a341 6
<pre>
<br>
<small>Source:      fftw.html       
Last update: 15 Jul. 2004     
ArDean Leith </small><br>
</pre>
@


1.10
log
@<>
@
text
@d1 1
d4 2
a5 1
<title>SPIDER: Using FFTW </title>
d7 14
d22 13
a34 2
<body>
<h1 align="center">Using FFTW WITH SPIDER </h1>
d36 1
a36 30
The <a HREF="http://www.fftw.org/">FFTW</a> (The Fastest Fourier
Transform in the West) is a 'C' subroutine library for computing the 
Discrete Fourier Transform (DFT) in one or more dimensions, of both 
real and complex data, and of arbitrary input size. The FFTW package 
was developed at MIT by Matteo Frigo and Steven G. Johnson. They 
believe that <cite>"
  FFTW's performance is typically superior to that of other publicly
  available FFT software. Moreover, FFTW's performance is portable: 
  the program will perform well on
  most architectures without modification."</cite>
</p>

<p> We have added code to SPIDER to allow use version 2.1.5 of this library. 
(SPIDER can not use the newer API of FFTW 3.x). 
However, FFTW is 
<a href="http://www.gnu.org/philosophy/categories.html">'free open source software'</a>
 distributed under the <a href="http://www.gnu.org/copyleft/gpl.html">
GNU General Public License</a>.

Due to the terms of the GPL license we 
can not include statically linked FFTW libraries within our SPIDER distribution. 
If you wish to use the FFTW library to replace SPIDER's fft code or SGI's Complib fft code,
you will have to download and install FFTW on your 
system.<br> However, if you lack a suitable compiler we can separately provide compiled FFTW
static and shared libraries for some systems.
</p>

<p>
<b>To install FFTW for use with SPIDER.</b>
</p>
d39 82
d122 1
a122 1
<h2 align="center"> On GNU/Linux </h2>
d125 51
a175 74
<li> Create directory for FFTW (in default location)<br>
     <i>mkdir /usr/local/fftw</i></li>
<p>
<li> Move to FFTW directory<br>
     <i>cd /usr/local/fftw</i></li>
<p>

<li> Using FFTW package with precompiled FFTW libraries.</li>
</p>

<p>
   <ol> 
   <li> Download precompiled FFTW libraries
        <A href="http://www.wadsworth.org/spider_doc/spider/download/fftw-linux.tar.gz">      for AMD/INTEL 32 bits</a>  or <br>
        <A href="http://www.wadsworth.org/spider_doc/spider/download/fftw-linux-altix.tar.gz">for Altix 64 bits</a>  <br>
        from SPIDER site <br>
        e.g. get: <i>fftw-linux.tar.gz</i></li>
   <p>
   <li> Uncompress the download and extract the tar archive<br>
        e.g. <i>gunzip fftw-linux.tar.gz ; tar xvf fftw-linux.tar</i></li>
   <p>
   <li> Copy contents of: <i>/usr/local/fftw/lib</i> to: <i>/usr/local/lib</i><br>
         e.g. <i>cp /usr/local/fftw/lib/*  /usr/local/lib</i> </li></li>
   <p>
   <li> Set LD_LIBRARY_PATH environment variable so that <i>/usr/local/lib</i> is in your shared library
        search path.<br>
        e.g. <i> setenv LD_LIBRARY_PATH /usr/local/lib</i></li>
   <p>
   <li> If you have installed FFTW as described above, the SPIDER executableswhich require FFTW should run
        correctly using the shared (run-time) FFTW libraries. You should NOT have
        to relink SPIDER. and you are finished with this installation. </li>
   <p>
   <li> Note: We have been unable to use the precompiled FFTW libraries available from
        the FFTW download site with SPIDER libraries due to problems with the length  of 
        identifier names. </li>
   <p>

   </ol>
</p>

<li> Using original FFTW package from: www.fftw.org.</li>
</p>
<p>
   <ol> 
   <li> <A href="http://www.fftw.org/download.html">Download complete FFTW package</a>
        from <i>www.fftw.org</i> <br>
         e.g. get: <i>fftw-2.1.3.tar.gz</i></li>
   <p>
   <li> Uncompress the download and extract the tar archive<br>
     e.g. <i>gunzip fftw-2.1.3.tar.gz; tar xvf fftw-2.1.3.tar</i></li>

   <p>
   <li> If using Portland group compiler set 'C' shell environment variable
        for pgf90 compiler<br>
        <i>setenv F77 pgf90</i></li>
   <p>
   <li> If using  Portland group compilers:<br>
        Create an executable script file named <i>'cc'</i> and make sure your path is set up to
        find this <i>'cc'</i> script file before the native <i>'cc'</i> command. 
        The script file, using <i>csh</i> syntax, should contain: <br>
   <p>
        <kbd>
        #!/bin/csh<br>
        setenv PGI /usr/pgi      #! or wherever pgcc is installed<br>
        set path=($PGI/linux86/bin $path)<br>
        pgcc $*<br>
        </kbd></li>
   <p>
   <li> Configure FFTW<br>
        <i> ./configure --enable-threads --enable-float --enable-shared 
                        --prefix=/usr/local/ --enable-type-prefix </i></li>
   <p>
   <li> edit file:  <i>threads/ rfftw_f77_threads.c</i><br>
        and add:
d197 1
a197 18
   </li>
   <p>
   <li> make fftw<br>
        <i>  make</i></li>
   <p>
   <li> install fftw<br>
        <i>make install</i></li>
   <p>
   <li> If you have installed FFTW as described above the SPIDER executables<br>
        <i>cd spider_linux_fftw & spider_linux_mpfftw</i>should run
        correctly using the shared (run-time) FFTW libraries. You should NOT have
        to relink SPIDER</li>
   <p>
   <li> Note: We have been unable to use the precompiled FFTW libraries available from
        the FFTW download site with SPIDER libraries due to problems with the length  of 
        identifier names. </li>
   <p>
   </ol>
d199 35
d235 1
d237 1
a237 1

d239 20
a258 1
<h2 align="center"> On SGI </h2>
a259 20
A sample  <A HREF="../src/Makefile4fftw">Makefile4fftw</A> is available
for single processor SGI machines which shows the use of the 
environment variable: <B>SP_LIBFFTWMP</B>
which activates the code for FFTW usage. </P>

Another sample  <A HREF="../src/Makefile4mpfftw">Makefile4mpfftwmp</A> is available
for multiple processor SGI machines which shows the use of the 
environment variable: <B>SP_LIBFFTWMP</B>
which activates the code for FFTW usage on multiple threads.</P>

Due to the terms of The 
<A href="http://www.gnu.org/copyleft/gpl.html">
GNU General Public License</A> which FFTW is distributed under we 
can not include it with our SPIDER distribution. If you wish to use 
this library to replace SPIDER's FFT code or SGI's COmplib FFT code,
you will have to download the FFTW yourself, compile it on your 
machine, and copy the libraries to your SPIDER directory.</P>

We attach the following info which we used for the installation:

d261 1
a261 1
<li> <kbd>setenv CFLAGS " -O3 -mips4 -n32 -mp"</kbd></li>
d263 2
a264 1
<li> <kbd>configure --prefix=location-of-your-FFTW/fftw-2.1.3/ --enable-threads --enable-mpi- -enable-float</kbd></li>
d266 1
a266 1
<li> <kbd>make CFLAGS="-O3 -mips4 -n32 -mp"</kbd></li>
d268 1
a268 1
<li> <kbd>make install</kbd></li>
d270 2
a271 1
<li> <kbd>\cp location-of-FFTW/fftw-2.1.3/lib/*.a     location-of-your-spider-libraries</kbd> </li>
d274 5
a278 7
<p>
Some modifications were necessary to shorten two subroutine names
to suit SGI's compiler and to modify threads to use the SGI
Multiprocessing threads available when compiled with -mp.
<p>
 
<listing>
d280 1
d333 1
a333 1
	  d = (fftw_loop_data *) ALLOCA(sizeof(fftw_loop_data) * nthreads);
d337 1
a337 1
	  for (i = 0; i < nthreads; ++i)
d339 4
a342 4
	       d[i].max = (d[i].min = i * block_size) + block_size;
               if (d[i].max > loopmax) d[i].max = loopmax;
	       d[i].thread_num = i;
	       d[i].data       = data;
d348 1
a348 1
	  for (i = 0; i < nthreads; ++i)
d350 1
a350 1
	       proc(&d[i]); 
d354 4
a357 4
	  fftw_thread_id *tid;
	  d = (fftw_loop_data *) ALLOCA(sizeof(fftw_loop_data) * nthreads);
	  tid = (fftw_thread_id *) 
	       ALLOCA(sizeof(fftw_thread_id) * (--nthreads));
d359 1
a359 1
          for (i = 0; i < nthreads; ++i) 
d365 2
a366 2
               fftw_thread_spawn(&tid[i], (fftw_thread_function) proc, 
                                 (void *) &d[i]);
d373 1
a373 1
          proc(&d[i]); 
d375 1
a375 1
          for (i = 0; i < nthreads; ++i)
d378 1
a378 1
	  ALLOCA_CLEANUP(tid);
d403 3
a405 1
</listing>
d407 7
a413 4
<hr> <p><small>
Source:      fftw.html  &nbsp;&nbsp;&nbsp;  
Last update: 15 Jul. 2004  &nbsp;&nbsp;&nbsp;
ArDean Leith  </small><p>
d416 1
@


1.9
log
@update
@
text
@d14 1
a14 1
believe that <quote>"
d18 1
a18 1
  most architectures without modification."</quote>
d106 1
a106 1
        <kb>
d111 1
a111 1
        </kb></li>
d215 1
a215 1
#include <fftw-int.h>
d238 1
a238 1
#include <fftw_threads-int.h>
@


1.8
log
@*** empty log message ***
@
text
@d9 2
a10 2
The <A HREF="http://www.fftw.org/">FFTW</A> (The Fastest Fourier
Transform in the West) is a C subroutine library for computing the 
d21 13
a33 11
FFTW is free open source software from <a href="http://www.gnu.org/philosophy/categories.html">GNU</A>
We have added code to SPIDER to allow use of this library. 
Due to the terms of The 
<A href="http://www.gnu.org/copyleft/gpl.html">
GNU General Public License</A> which FFTW is distributed under we 
can not include it with our SPIDER distribution. If you wish to use 
this library to replace SPIDER's fft code or SGI's Complib fft code,
you will have to download, install, and compile it on your 
system, and copy the libraries to your SPIDER directory.
Note: If you lack a suitable compiler we can separately provide compiled FFTW
run-time (shared) libraries.
d57 4
a60 2
   <li> Download <A href="ftp:../download/fftw-linux.tar.gz">FFTW package with precompiled FFTW libraries</a>
        from SPIDER site<br>
d69 1
a69 1
   <li> Set environment variable so that <i>/usr/local/lib</i> is in your shared library
d73 1
a73 2
   <li> If you have installed FFTW as described above, the SPIDER executables<br>
        <i> spider_linux_fftw & spider_linux_mpfftw</i> should run
d179 1
a179 1
this library to replace SPIDER's fft code or SGI's COmplib fft code,
d331 1
a331 1
Last update: 26 Mar. 2003  &nbsp;&nbsp;&nbsp;
@


1.7
log
@*** empty log message ***
@
text
@d35 1
a35 1
To install FFTW for use with SPIDER.
d70 1
a70 1
        <i> spider_linuxfftw & spider_linuxmpfftw</i> should run
d146 1
a146 1
        <i>cd spider_linuxfftw & spider_linuxmpfftw</i>should run
d328 1
a328 1
Last update: 13 Feb. 2003  &nbsp;&nbsp;&nbsp;
@


1.6
log
@*** empty log message ***
@
text
@d55 1
a55 1
   <li> Download <A href="ftp:../download/fftw_linux.tar.gz">FFTW package with precompiled FFTW libraries</a>
d60 1
a60 1
        e.g. <i>gunzip fftw_linux.tar.gz ; tar xvf fftw_linux.tar</i> <br>
d63 1
a63 1
         e.g. <i>cp /usr/local/fftw/lib/*  /usr/local/lib</i> </li>
d65 4
d86 2
a87 1
   <li> <A href="http://www.fftw.org/download.html">Download complete FFTW package</a><br>
d112 1
a112 1
            --prefix=/usr/local/ --enable-type-prefix </i></li>
@


1.5
log
@precompiled
@
text
@d55 1
a55 1
   <li> Download <A href="http://www.wadsworth.org/anonftp/pub/spider/fftw.html">FFTW package with precompiled FFTW libraries</a>
d60 1
a60 1
        e.g. <i>gunzip fftw-linux.tar.gz ; tar xvf fftw-linux.tar</i> <br>
@


1.4
log
@for linux
@
text
@d30 3
a32 2
Note: If you lack a suitable compiler we can seperately provide compiled FFTW
run-time (shared) libraries.</p>
d34 4
d39 1
a41 2
To install FFTW for use with SPIDER.

d47 1
a47 1
<li> <i>cd /usr/local/fftw</i></li>
d49 4
a52 9
<li> <A href="http://www.fftw.org/download.html">Download FFTW</a><br>
     <i> get :  fftw-2.1.3.tar.gz</i></li>
<p>
<li> Uncompress the download and extract the tar archive<br>
     <i>gunzip fftw-2.1.3.tar.gz; tar xvf fftw-2.1.3.tar</i></li>
<p>
<li> If using Portland group compiler set 'C' shell environment variable
     for pgf90 compiler<br>
     <i>setenv F77 pgf90</i></li>
d54 57
a110 18
<li> If using  Portland group compilers:<br>
     Create an executable script file named <i>'cc'</i> and make sure your path is set up to
     find this <i>'cc'</i> script file before the native <i>'cc'</i> command. 
     The script file, using <i>csh</i> syntax, should contain: <br>
<p>
     <kb>
     #!/bin/csh<br>
     setenv PGI /usr/pgi      #! or wherever pgcc is installed<br>
     set path=($PGI/linux86/bin $path)<br>
     pgcc $*<br>
     </kb></li>
<p>
<li> Configure FFTW<br>
     <i> ./configure --enable-threads --enable-float --enable-shared 
          --prefix=/usr/local/ --enable-type-prefix </i></li>
<p>
<li> edit file:  <i>threads/ rfftw_f77_threads.c</i><br>
     and add:
d132 19
a150 17
</li>
<p>
<li> make fftw<br>
     <i>  make</i></li>
<p>
<li> install fftw<br>
     <i>make install</i></li>
<p>
<li> If you have installed FFTW as described above the SPIDER executables<br>
     <i>cd spider_linuxfftw & spider_linuxmpfftw</i>should run
     correctly using the shared (run-time) FFTW libraries. You should NOT have
     to relink SPIDER</li>
<p>
<li> Note: We have been unable to use the precompiled FFTW libraries available from
     the FFTW download site with SPIDER librareis due to problems with the length  of 
     identifier names. </li>
<p>
d153 1
@


1.3
log
@*** empty log message ***
@
text
@d1 4
a4 4
<HTML>
<HEAD>
<TITLE>SPIDER: Using FFTW </TITLE>
</HEAD>
d6 2
a7 2
<BODY>
<H2 ALIGN=CENTER>Using FFTW WITH SPIDER </H2>
d14 1
a14 1
believe that <Q>"
d18 2
a19 1
  most architectures without modification."</Q></P>
d21 63
a83 4
FFTW is <a href="http://www.gnu.org/philosophy/categories.html">Free</A>
software, released under the <a href="http://www.gnu.org">GNU</a> 
General Public License (<a href="http://www.gnu.org/copyleft/gpl.html">
GPL</A>).</P>
d85 6
a90 1
We have added code to SPIDER to allow use of this library.
d92 24
d136 2
a137 1
<OL>
d139 1
a139 1
<LI> <KBD>setenv CFLAGS " -O3 -mips4 -n32 -mp"</KBD>
d141 1
a141 1
<LI> <KBD>configure --prefix=location-of-your-FFTW/fftw-2.1.3/ --enable-threads --enable-mpi- -enable-float</KBD>
d143 1
a143 1
<LI> <KBD>make CFLAGS="-O3 -mips4 -n32 -mp"</KBD>
d145 2
a146 1
<LI> <KBD>make install</KBD>
d148 1
a148 3
<LI> <KBD>\cp location-of-FFTW/fftw-2.1.3/lib/*.a     location-of your-spider</KBD> 
</OL>
<P>
d152 1
a152 1
<P>
d154 1
a154 1
<LISTING>
d278 1
a278 4
</LISTING>



d280 1
a280 1
<HR> <P><SMALL>
d282 4
a285 4
Last update: 14 March 2000  &nbsp;&nbsp;&nbsp;
ArDean Leith  </SMALL><P>
</BODY>
</HTML>
@


1.2
log
@*** empty log message ***
@
text
@d14 1
a14 1
beleive that <Q>"
d27 1
a27 1
A sample  <A HREF="../src/Makefilefft">Makefilefft</A> is available
d29 1
a29 1
environment variable: <B>LIBFFTWMP</B>
d32 1
a32 1
Another sample  <A HREF="../src/Makefilefftmp">Makefilefftmp</A> is available
d34 1
a34 1
environment variable: <B>LIBFFTWMP</B>
@


1.1
log
@Initial revision
@
text
@d49 1
a49 1
<LI> <KBD>setenv CFLAGS " -O3 -mips4 -n32"</KBD>
d53 1
a53 1
<LI> <KBD>make CFLAGS="-O3 -mips4 -n32"</KBD>
d59 6
a64 1

d67 1
a67 1
/*------------------------edit  fftw_threads-int.h and add ----------------*/
d69 2
a70 1
#elif defined(FFTW_USING_SGI_SPROC)
d72 4
a75 4
#include <sys/types.h>
#include <sys/prctl.h>
#include <sys/wait.h>
#include <ulocks.h>
d77 5
d83 2
a84 2
/* Thread entry point: */
typedef void (*fftw_thread_function) (void *);
a85 1
typedef pid_t fftw_thread_id;
d87 1
a87 4
/* Note that the PR_NOLIBC flag means that libc routines like malloc
   will not work.  This should be fine, I think, as long as we have the
   alloca stack-allocation function, and it is preferable because only
   a limited number of processes are allowed to be in the "libc arena." */
d89 3
a91 5
#ifdef HAVE_ALLOCA
#  define FFTW_SPROC_FLAGS PR_NOLIBC | PR_SADDR
#else
#  define FFTW_SPROC_FLAGS PR_SADDR /* defaults */
#endif
d93 2
a94 2
#define fftw_thread_spawn(tid_ptr, proc, data) \
     ((*tid_ptr) = sproc(proc, FFTW_SPROC_FLAGS, data))
a95 2
/* fftw_thread_wait(tid) is handled by change in in fftw_threads.c  */
/* and additions in rfftwnd_threads.c  */
a96 1
/*-------------------------edit  fftw_threads.c -------------------*/
d98 1
d101 1
d103 1
a103 3

/* leith additions Mar 2000 -------------------------- */

d107 1
a107 1
/* leith additions Mar 2000 */
d112 4
a115 2
.
	  int i;
d119 1
a119 12
          pid_t     tidt;
          int       status;
          usinit ("/dev/zero");
#endif
/* end added leith Mar 2000 */
.
.
.
.
.
/* added leith Mar 2000 */
#ifdef FFTW_USING_SGI_SPROC
d121 1
a121 4
	  do
	     {
	     tidt = wait(&status);
	  } while (tidt > 0);
d123 16
a138 1
 
d140 20
a159 4
	  for (i = 0; i < nthreads; ++i)
	       fftw_thread_wait(tid[i]);
#endif
/* end added leith Mar 2000 */
d161 2
a162 1
/*--------------------------edit rfftwnd_threads.c ----------------*/
d164 1
a164 3
/* added leith Mar 2000 */
#ifdef FFTW_USING_SGI_SPROC
     usinit ("/dev/zero");
d167 1
a167 2
/* add before the for loop: e.g. */
/*    for (; min < max; ++min)  */
d169 1
a169 1
/*--------------------------edit: rfftw_f77_threads.c----------------*/
d186 1
a186 1
/*************************edit:  threads/Makefile ********/
@

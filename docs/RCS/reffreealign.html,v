head	1.5;
access;
symbols;
locks;
comment	@# @;


1.5
date	2012.06.21.18.47.28;	author leith;	state Exp;
branches;
next	1.4;

1.4
date	2006.09.13.13.22.29;	author leith;	state Exp;
branches;
next	1.3;

1.3
date	2004.07.29.13.57.37;	author leith;	state Exp;
branches;
next	1.2;

1.2
date	98.03.16.17.31.00;	author leith;	state Exp;
branches;
next	1.1;

1.1
date	97.05.29.20.13.35;	author leith;	state Exp;
branches;
next	;


desc
@@


1.5
log
@*** empty log message ***
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
<head>
   <title>Reference-Free Alignment Operations</title>
</head>

<body>

<h2 align="center">Reference-Free Alignment Operations</h2> </center>

<center>Introduction</center>

<p>The problem of aligning a set of single-particle projections has
  a number of possible solutions. Usually it is assumed that a
  reference image is available, to which each particle is matched
  using the maximum of the cross-correlation function to determine
  the translation and rotation parameters. The disadvantage of this
  approach is that the resulting parameters are biased by the choice
  of the reference image. As a remedy, the alignment is normally
  repeated once or twice, using the average obtained in the previous
  step as new reference. However, this measure fails when the images
  are extremely noisy or when the input images show particles in more
  than one view : features of the original reference still tend to
  dominate the final average. In addition, certain steps in the
  preparation of a reference image, such as masking and filtration,
  require choices of parameters that are more or less intuitive. From
  this brief outline of the problem is is clear that, to obtain a
  result that does not depend on subjective decisions, the use of a
  reference image must be entirely eliminated. This is particularly
  important for images of ice-embedded particles.</p>

<p>In devising a reference-free alignment scheme, it is
  advantageous to use a concept of alignment as a feature of the
  entire image set. We say that the set of images is aligned if
  certain function calculated for the entire set reaches maximum. The
  value of this function is calculated in the following way: we sum
  up all the images (taking into account their current position
  parameters), we square each pixel and finally we add all the values
  of these squared pixels. In this way we arrive at one number which
  describes the 'quality' of alignment. It can be shown that such
  'measure of alignment' is well defined: it agrees with our
  intuitive notion about the 'best' relative orientation of the
  series of images. It can be also shown that this definition is
  equivalent to the following definition: the set of images is
  aligned if all the possible pairs of images from this set are in
  the 'best' relative orientation as determined by the maximum of
  cross-correlation function (CCF). This second definition suggests
  calculation of CCFs between pairs of 'raw' images, which is not
  recommended because the usually low signal- to-noise ratio (SNR).
  The algorithm implemented in the Alignment Operations (AP **)
  therefore uses the first definition.</p>

<p>More details and test results are given in: "Three- dimensional
  reconstruction of single particles embedded in ice", P.Penczek et
  al., Ultramicroscopy 40 (1992) 33-53.</p>

<center><b>The Reference-free Alignment Algorithm</b></center>

<p>The reference-free alignment algorithm consists of two parts: in
  the first, a "random approximation" of the global average is found
  and in the second, this average is iteratively refined until
  convergence is achieved.</p>

<p>The purpose of the first part is to find a good approximation of
  the global average without using a reference image. At the
  beginning two images are randomly picked from the whole set and
  brought into mutual register. These two images are added according
  to the orientation parameters found, thereby providing the first
  approximation of the average with improved SNR compared with a
  single image. Then this average can be used to find the position of
  the third image (again picked randomly), which again is added to
  the sum of the two initial images. This procedure continues using
  in each step an 'improved' average, until all images from the whole
  set are included.</p>

<p>From this description one can easily see that the result of this
  procedure is not the 'optimal' one as it depends on the particular
  random sequence used. To mitigate this bias the whole first part is
  repeated using another random order of image inclusions, resulting
  in a new initial average. Then the two averages are brought into
  register and added, resulting in the initial "randomly" estimated
  average.</p>

<p>The second part of the algorithm is the iterative refinement of
  the initial average. In each step one image is removed from the set
  and the subaverage is created from the remaining images. (It should
  be noted that the exclusion of images is now done in sequential
  order.) The removed image is brought into register with the
  subaverage and a new average is created. This step is repeated for
  each image in the set. The whole procedure is repeated until a
  'stable' position of each image is reached. This means that the
  algorithm is terminated if no single image changes its
  position.</p>

<p>In summary, the main features of the algorithm described are as
  follows:</p>

<p>a) a reference image is not used; thus, the problem of its
  selection and preparation is eliminated, and the result of the
  alignment no longer depends on the choice of any particular
  reference image;</p>

<p>b) the assumption of similarity among the input images is not
  used; thus the algorithm is able to align even images that share
  only a small number of common features;</p>

<p>c) the algorithm is suboptimal, which means that the scheme
  proposed does not lead to such positions of images for which the
  'measure of alignment' used reaches maximum. It also means that by
  using some more elaborated (and much more time-consuming) scheme,
  further improvement of alignment can be achieved. In particular,
  the result depends on the initial estimate of the average. Since
  the calculation of this estimate is based on the random order of
  image inclusion, the overall result will differ for different runs
  of the procedure on the same data set.</p>

<p></p>

<center><b>Implementation and Alignment Strategies</b></center>

<p>There are two implementations of the alignment-free algorithm in
  SPIDER: the first (operation 
  <a href="man/apsr.html">'AP SR'</a>) performs both shift and
  rotational alignment with additional placement of the center of
  gravity of the particles at the image center and a second one,
  which separates the shift from the rotational alignment (operations
  <a href="man/apra.html">'AP SA'</a> and 
  <a href="man/apra.html">'AP RA'</a>, respectively), giving the user more freedom in the
  choice of the procedure parameters and allowing either of the
  alignment procedures to be performed separately.</p>

<p>Combined Alignment (<a href="man/apsr.html">'AP SR'</a>)</p>

<p>Operation <a href="man/apsr.html">'AP SR'</a> 
  is recommended in most cases - it works faster and
  doesn't require writing or modifying lengthy procedures. Nor
  does it have any memory requirements, as it is able to switch
  automatically between "in-core" and "on-disk" versions. The
  strategy implemented closely follows the description given in the
  latter part of this text. The main part of the procedure brings two
  objects into register. This is achieved by alternating shift and
  rotational alignment until the relative change of position is
  smaller than 0.5 pixels (tests show that smaller numbers result in
  numerical instabilities due to interpolation errors). After
  alignment of all the objects (which constitutes one iteration step
  of the procedure) the global average is centered using the
  approximated location of its center of gravity (see the
  <a href="man/cgph.html">'CG PH'</a> manual page) and alignment
  parameters for all the images are modified accordingly. Iterations
  are repeated until stable alignment is reached (see above). For
  each iteration the resulting alignment parameters are stored in a
  document file and the corresponding average is produced.</p>

<p>Strategy for <a href="man/apsr.html">'AP SR'</a></p>

<p>a) All the input images should have positive contrast, i.e.
  objects should be bright on the dark background.</p>

<p>b) Decide the limits of integration for the rotational search
  (in terms of inside and outside rings). The outer radius has to
  correspond to the particle size. To avoid oversampling (and thus
  the relatively large error of interpolation) an inner radius of 5
  was found to be sufficient for all practical purposes.</p>

<p>c) Specify expected size of the objects to be aligned. The
  number given restricts the shift allowed, thus a fragmentation of
  the objects (due to shift beyond image frame) is avoided.</p>

<p>d) Perform <a href="man/apsr.html">'AP SR'</a> 
  on the input image series.</p>

<p>e) Use alignment parameters stored in the document file and
  operation <a href="man/rtsf.html">'RT SF'</a> to create the aligned image series and, optionally,
  verify resolution achieved using operation RF M. Should the results
  be unsatisfactorily: (i) modify parameters specified in (b) and (c)
  and repeat alignment; (ii) increase number of input images to
  improve SNR and repeat alignment; (iii) use separate alignment
  operations described in next part and control each step
  carefully.</p>

<p>Further reading is suggested only for users wishing to apply
operations implementing separate shift and/or rotational
alignments.</p>

<p>Separate Alignment Operations 
  (<a href="man/apra.html">'AP SA'</a> and 
   <a href="man/apra.html">'AP RA'</a>)</p>

<p>Two operations implement the idea of reference-free alignment
  separately: first to find the shift alignment 
  (<a href="man/apra.html">'AP SA'</a>) and a second
  to find the rotational alignment 
  (<a href="man/apra.html">'AP RA'</a>).</p>

<p>Both operations were implemented in a way that minimizes the time
  of calculations. The shift alignment operation reads each image into
  the memory and calculates its Fourier transform using the
  mixed-radix FFT (Fast Fourier Transform) algorithm. This makes
  possible the use of images with almost any size (except for
  dimensions involving large prime numbers), in particular with the
  size very close to the actual size of the particles. The limitation
  of the surrounding background noise achieved in this way improves
  the SNR of the cross-correlation functions calculated. All
  following operations (shifts, averaging, calculation of CCF) are
  performed in Fourier space on the transformed images stored in
  memory. No padding is done, which means that images are treated as
  circularly continuous (i.e., the left side of the image borders the
  right and the top borders the bottom). An additional option allows
  checking for the 180-degree rotation of images (also readily
  implemented in Fourier space), which further speeds up the whole
  alignment process. The output of the operation contains the shift
  parameters found for each image. An important feature in the design
  of this opeeration is that it does not enforce any particular position
  of the final average.</p>

<p>The next step, the rotational alignment, requires all particles
  to be placed in such a way that their centers coincide with the
  origin of the coordinate system used for rotation. Since such
  centers are, for obvious reasons, difficult to define or find for
  raw data, it is recommended that the average obtained from the
  shift alignment step be used for the estimation of necessary
  centering parameters. This average has usually high SNR and can be
  easily centered using, for example, a low-pass filtered disc as
  reference or using 
  <a href="man/cgph.html">'CG PH'</a> to find its approximate center of
  gravity. The parameters found by the shift alignment operation must
  be subsequently corrected by this additional shift so that all
  particles will be moved to the central position.</p>

<p>The rotational alignment operation is used as follows: First, the
  limits of integration (in terms of inside and outside rings) must
  be decided. The outer radius must correspond to the particle size.
  To avoid oversampling (and thus the relatively large error of
  interpolation) an inner radius of 5 was found to be sufficient for
  all practical purposes. With these limits set each image is read
  into the memory and its quadratic interpolation is calculated. This
  interpolation is used to re-sample the image in polar coordinates,
  with the number of points in each ring equal to the power-of-two
  number which is closest to 2*pi*l, where l is the ring radius. Then
  the Fourier transform of each ring is calculated, and this
  initialization procedure is repeated for each image. The
  "reference-free" algorithm described in the previous section is
  implemented entirely in the Fourier domain using the CCF for the
  search of the optimum rotation parameter.</p>

<p>Strategy for <a href="man/apra.html">'AP SA'</a> and 
                <a href="man/apra.html">'AP RA'</a></p>

<p>The recommended strategy of alignment using two separate
  operations is as follows:</p>

<p>a) Use shift alignment operation 
(<a href="man/apra.html">'AP SA'</a>) for the whole data set
  with option "180-degree check" turned on (to speed up the alignment
  process). In this way the entire input data set will be 'centered',
  which means that the majority of particles will have the same
  position with respect to the image center.</p>

<p>b) Center the average obtained from step a) using some kind of
  neutral rotationally symmetric shape (for example, a disk) as the
  reference, or using the operation 
  <a href="man/cgph.html">'CG PH'</a> to find its center of
  gravity.</p>

<p>c) Calculate the resulting position parameters for each image
  and create the new, 'centered' data set.</p>

<p>d) Apply rotational alignment 
  (<a href="man/apra.html">'AP RA'</a>) to the image series
   calculated in step c).</p>

<p>e) Apply shift alignment 
  (<a href="man/apra.html">'AP SA'</a>) to the image series calculated
  in step c) using angles found during step d) and stored in the
  document file.</p>

<p>f) Calculate the resulting position parameters for each image,
taking into account shifts and rotations found during steps d) and
e) using the operation <a href="man/sap.html">'SA P'</a>, and create the new data set. Store the
alignment parameters found in the document file.</p>

<p>g) Repeat steps d-e-f as many times as needed (usually 3-5),
each time calculating resulting alignment parameters and storing
them in the document file. After each step the resolution of the
data set obtained can be checked, and if there is no substantial
improvement the procedure can be terminated.</p>

<p>The strategy described is implemented in the Spider procedure
  included as an example in the 
  <a href="man/apra.html">'AP SA'</a> and 
  <a href="man/apra.html">'AP RA'</a> manual
  chapters.</p>

</body>
</html>

@


1.4
log
@operation
@
text
@d4 1
a4 1
   <title>Reference-Free Alignment Programs</title>
d9 1
a9 1
<center> <h2>Reference-Free Alignment Programs</h2> </center>
d14 17
a30 17
a number of possible solutions. Usually it is assumed that a
reference image is available, to which each particle is matched
using the maximum of the cross-correlation function to determine
the translation and rotation parameters. The disadvantage of this
approach is that the resulting parameters are biased by the choice
of the reference image. As a remedy, the alignment is normally
repeated once or twice, using the average obtained in the previous
step as new reference. However, this measure fails when the images
are extremely noisy or when the input images show particles in more
than one view : features of the original reference still tend to
dominate the final average. In addition, certain steps in the
preparation of a reference image, such as masking and filtration,
require choices of parameters that are more or less intuitive. From
this brief outline of the problem is is clear that, to obtain a
result that does not depend on subjective decisions, the use of a
reference image must be entirely eliminated. This is particularly
important for images of ice-embedded particles.</p>
d33 19
a51 19
advantageous to use a concept of alignment as a feature of the
entire image set. We say that the set of images is aligned if
certain function calculated for the entire set reaches maximum. The
value of this function is calculated in the following way: we sum
up all the images (taking into account their current position
parameters), we square each pixel and finally we add all the values
of these squared pixels. In this way we arrive at one number which
describes the 'quality' of alignment. It can be shown that such
'measure of alignment' is well defined: it agrees with our
intuitive notion about the 'best' relative orientation of the
series of images. It can be also shown that this definition is
equivalent to the following definition: the set of images is
aligned if all the possible pairs of images from this set are in
the 'best' relative orientation as determined by the maximum of
cross-correlation function (CCF). This second definition suggests
calculation of CCFs between pairs of 'raw' images, which is not
recommended because the usually low signal- to-noise ratio (SNR).
The algorithm implemented in the Alignment Programs operations (AP)
therefore uses the first definition.</p>
d54 2
a55 2
reconstruction of single particles embedded in ice", P.Penczek et
al., Ultramicroscopy 40 (1992) 33-53.</p>
d60 3
a62 3
the first, a "random approximation" of the global average is found
and in the second, this average is iteratively refined until
convergence is achieved.</p>
d65 10
a74 10
the global average without using a reference image. At the
beginning two images are randomly picked from the whole set and
brought into mutual register. These two images are added according
to the orientation parameters found, thereby providing the first
approximation of the average with improved SNR compared with a
single image. Then this average can be used to find the position of
the third image (again picked randomly), which again is added to
the sum of the two initial images. This procedure continues using
in each step an 'improved' average, until all images from the whole
set are included.</p>
d77 6
a82 6
procedure is not the 'optimal' one as it depends on the particular
random sequence used. To mitigate this bias the whole first part is
repeated using another random order of image inclusions, resulting
in a new initial average. Then the two averages are brought into
register and added, resulting in the initial "randomly" estimated
average.</p>
d85 9
a93 9
the initial average. In each step one image is removed from the set
and the subaverage is created from the remaining images. (It should
be noted that the exclusion of images is now done in sequential
order.) The removed image is brought into register with the
subaverage and a new average is created. This step is repeated for
each image in the set. The whole procedure is repeated until a
'stable' position of each image is reached. This means that the
algorithm is terminated if no single image changes its
position.</p>
d96 1
a96 1
follows:</p>
d99 3
a101 3
selection and preparation is eliminated, and the result of the
alignment no longer depends on the choice of any particular
reference image;</p>
d104 2
a105 2
used; thus the algorithm is able to align even images that share
only a small number of common features;</p>
d108 8
a115 8
proposed does not lead to such positions of images for which the
'measure of alignment' used reaches maximum. It also means that by
using some more elaborated (and much more time-consuming) scheme,
further improvement of alignment can be achieved. In particular,
the result depends on the initial estimate of the average. Since
the calculation of this estimate is based on the random order of
image inclusion, the overall result will differ for different runs
of the program on the same data set.</p>
d122 31
a152 28
SPIDER: the first (operation AP SR) performs both shift and
rotational alignment with additional placement of the center of
gravity of the particles at the image center and a second one,
which separates the shift from the rotational alignment (operations
AP SA and AP RA, respectively), giving the user more freedom in the
choice of the procedure parameters and allowing either of the
alignment procedures to be performed separately.</p>

<p>Combined Alignment (AP SR)</p>

<p>Operation AP SR is recommended in most cases - it works faster and
doesn't require writing or modifying lengthy procedure programs. Nor
does it have any memory requirements, as it is able to switch
automatically between "in-core" and "on-disk" versions. The
strategy implemented closely follows the description given in the
latter part of this text. The main part of the program brings two
objects into register. This is achieved by alternating shift and
rotational alignment until the relative change of position is
smaller than 0.5 pixels (tests show that smaller numbers result in
numerical instabilities due to interpolation errors). After
alignment of all the objects (which constitutes one iteration step
of the program) the global average is centered using the
approximated location of its center of gravity (description of the
corresponding method is in the CG PH manual chapter) and alignment
parameters for all the images are modified accordingly. Iterations
are repeated until stable alignment is reached (see above). For
each iteration the resulting alignment parameters are stored in a
document file and the corresponding average is produced.</p>
d154 1
a154 1
<p>Strategy for AP SR</p>
d157 1
a157 1
objects should be bright on the dark background.</p>
d160 4
a163 4
(in terms of inside and outside rings). The outer radius has to
correspond to the particle size. To avoid oversampling (and thus
the relatively large error of interpolation) an inner radius of 5
was found to be sufficient for all practical purposes.</p>
d166 2
a167 2
number given restricts the shift allowed, thus a fragmentation of
the objects (due to shift beyond image frame) is avoided.</p>
d169 2
a170 1
<p>d) Perform AP SR on the input image series.</p>
d173 7
a179 7
operation RT SQ to create the aligned image series and, optionally,
verify resolution achieved using operation RF M. Should the results
be unsatisfactorily: (i) modify parameters specified in (b) and (c)
and repeat alignment; (ii) increase number of input images to
improve SNR and repeat alignment; (iii) use separate alignment
operations described in next part and control each step
carefully.</p>
d185 30
a214 26
<p>Separate Alignment Programs (AP SA and AP RA)</p>

<p>Two programs implement the idea of reference-free alignment
separately: first to find the shift alignment (AP SA) and a second
to find the rotational alignment (AP RA).</p>

<p>Both programs were implemented in a way that minimizes the time
of calculations. The shift alignment program reads each image into
the memory and calculates its Fourier transform using the
mixed-radix FFT (Fast Fourier Transform) algorithm. This makes
possible the use of images with almost any size (except for
dimensions involving large prime numbers), in particular with the
size very close to the actual size of the particles. The limitation
of the surrounding background noise achieved in this way improves
the SNR of the cross-correlation functions calculated. All
following operations (shifts, averaging, calculation of CCF) are
performed in Fourier space on the transformed images stored in
memory. No padding is done, which means that images are treated as
circularly continuous (i.e., the left side of the image borders the
right and the top borders the bottom). An additional option allows
checking for the 180-degree rotation of images (also readily
implemented in Fourier space), which further speeds up the whole
alignment process. The output of the program contains the shift
parameters found for each image. An important feature in the design
of this program is that it does not enforce any particular position
of the final average.</p>
d217 28
a244 27
to be placed in such a way that their centers coincide with the
origin of the coordinate system used for rotation. Since such
centers are, for obvious reasons, difficult to define or find for
raw data, it is recommended that the average obtained from the
shift alignment step be used for the estimation of necessary
centering parameters. This average has usually high SNR and can be
easily centered using, for example, a low-pass filtered disc as
reference or using operation CG PH to find its approximate center of
gravity. The parameters found by the shift alignment program must
be subsequently corrected by this additional shift so that all
particles will be moved to the central position.</p>

<p>The rotational alignment program is used as follows: First, the
limits of integration (in terms of inside and outside rings) must
be decided. The outer radius must correspond to the particle size.
To avoid oversampling (and thus the relatively large error of
interpolation) an inner radius of 5 was found to be sufficient for
all practical purposes. With these limits set each image is read
into the memory and its quadratic interpolation is calculated. This
interpolation is used to re-sample the image in polar coordinates,
with the number of points in each ring equal to the power-of-two
number which is closest to 2*pi*l, where l is the ring radius. Then
the Fourier transform of each ring is calculated, and this
initialization procedure is repeated for each image. The
"reference-free" algorithm described in the previous section is
implemented entirely in the Fourier domain using the CCF for the
search of the optimum rotation parameter.</p>
d246 2
a247 1
<p>Strategy for AP SA and AP RA</p>
d250 1
a250 1
operations is as follows:</p>
d252 6
a257 5
<p>a) Use shift alignment operation (AP SA) for the whole data set
with option "180-degree check" turned on (to speed up the alignment
process). In this way the entire input data set will be 'centered',
which means that the majority of particles will have the same
position with respect to the image center.</p>
d260 4
a263 3
neutral rotationally symmetric shape (for example, a disk) as the
reference, or using the operation CG PH to find its center of
gravity.</p>
d266 1
a266 4
and create the new, 'centered' data set.</p>

<p>d) Apply rotational alignment (AP RA) to the image series
calculated in step c).</p>
d268 8
a275 3
<p>e) Apply shift alignment (AP SA) to the image series calculated
in step c) using angles found during step d) and stored in the
document file.</p>
d279 1
a279 1
e) using the operation SA P, and create the new data set. Store the
d289 5
a293 2
included as an example in the AP SA and AP RA manual
chapters.</p>
@


1.3
log
@xhtml
@
text
@d4 1
a4 2
<meta name="generator" content="HTML Tidy, see www.w3.org">
<title>Reference-Free Alignment Programs</title>
d6 1
d8 2
a9 3
<center>
<h2>Reference-Free Alignment Programs</h2>
</center>
d50 1
a50 1
The algorithm implemented in the Alignment Programs commands (AP)
d122 1
a122 1
SPIDER: the first (command AP SR) performs both shift and
d125 1
a125 1
which separates the shift from the rotational alignment (commands
d132 2
a133 2
<p>Command AP SR is recommended in most cases - it works faster and
doesn't require writing or modifying lengthy batch programs. Nor
d169 2
a170 2
command RT SQ to create the aligned image series and, optionally,
verify resolution achieved using command RF M. Should the results
d174 1
a174 1
commands described in next part and control each step
d178 1
a178 1
commands implementing separate shift and/or rotational
d216 1
a216 1
reference or using command CG PH to find its approximate center of
d240 1
a240 1
commands is as follows:</p>
d242 1
a242 1
<p>a) Use shift alignment command (AP SA) for the whole data set
d250 1
a250 1
reference, or using the command CG PH to find its center of
d265 1
a265 1
e) using the command SA P, and create the new data set. Store the
d274 2
a275 2
<p>The strategy described is implemented in the Spider batch
program included as an example in the APSA and APRA manual
@


1.2
log
@Yiwei Chen added HTML tags to <PRE> document now
@
text
@d1 10
a10 5
<HTML>
<HEAD>
<TITLE>             Reference-Free Alignment Programs</TITLE>
</HEAD>
<BODY>
d12 1
a12 1
<CENTER><H2>         Reference-Free Alignment Programs</H2></CENTER>
d14 2
a15 6

 	<CENTER>Introduction</CENTER>

<P>
 	The problem of aligning a set of single-particle projections
has a number of possible solutions. Usually it is assumed that a
d19 15
a33 16
approach is that the resulting parameters are biased by the
choice of the reference image. As a remedy, the alignment is
normally repeated once or twice, using the average obtained in
the previous step as new reference. However, this measure fails
when the images are extremely noisy or when the input images show
particles in more than one view : features of the original
reference still tend to dominate the final average. In addition,
certain steps in the preparation of a reference image, such as
masking and filtration, require choices of parameters that are
more or less intuitive. From this brief outline of the problem is
is clear that, to obtain a result that does not depend on
subjective decisions, the use of a reference image must be
entirely eliminated. This is particularly important for images of
ice-embedded particles.</P>
<P>
	In devising a reference-free alignment scheme, it is
d36 31
a66 33
certain function calculated for the entire set reaches maximum.
The value of this function is calculated in the following way: we
sum up all the images (taking into account their current position
parameters), we square each pixel and finally we add all the
values of these squared pixels. In this way we arrive at one
number which describes the 'quality' of alignment. It can be
shown that such 'measure of alignment' is well defined: it agrees
with our intuitive notion about the 'best' relative orientation
of the series of images. It can be also shown that this
definition is equivalent to the following definition: the set of
images is aligned if all the possible pairs of images from this
set are in the 'best' relative orientation as determined by the
maximum of cross-correlation function (CCF). This second
definition suggests calculation of CCFs between pairs of 'raw'
images, which is not recommended because the usually low signal-
to-noise ratio (SNR). The algorithm implemented in the Alignment
Programs commands (AP) therefore uses the first definition.</P>
<P>
	More details and test results are given in: "Three-
dimensional reconstruction of single particles embedded in ice",
P.Penczek et al., Ultramicroscopy 40 (1992) 33-53.</P>

<P>
<CENTER><B>	The Reference-free Alignment Algorithm</B></CENTER>

<P>
 	The reference-free alignment algorithm consists of two parts:
in the first, a "random approximation" of the global average is
found and in the second, this average is iteratively refined
until convergence is achieved.</P>
<P>
	The purpose of the first part is to find a good approximation
of the global average without using a reference image. At the
d68 56
a123 57
brought into mutual register. These two images are added
according to the orientation parameters found, thereby providing
the first approximation of the average with improved SNR compared
with a single image. Then this average can be used to find the
position of the third image (again picked randomly), which again
is added to the sum of the two initial images. This procedure
continues using in each step an 'improved' average, until all
images from the whole set are included.</P>
<P>
	From this description one can easily see that the result of
this procedure is not the 'optimal' one as it depends on the
particular random sequence used. To mitigate this bias the whole
first part is repeated using another random order of image
inclusions, resulting in a new initial average. Then the two
averages are brought into register and added, resulting in the
initial "randomly" estimated average.</P>
<P>
	The second part of the algorithm is the iterative refinement
of the initial average. In each step one image is removed from
the set and the subaverage is created from the remaining images.
(It should be noted that the exclusion of images is now done in
sequential order.) The removed image is brought into register
with the subaverage and a new average is created. This step is
repeated for each image in the set. The whole procedure is
repeated until a 'stable' position of each image is reached. This
means that the algorithm is terminated if no single image changes
its position.</P>
<P>
	In summary, the main features of the algorithm described are
as follows:</P>
<P>
  a)	a reference image is not used; thus, the problem of
	  its selection and preparation is eliminated, and the result
	  of the alignment no longer depends on the choice of any
	  particular reference image;
<P>
  b)	the assumption of similarity among the input images is not
	  used; thus the algorithm is able to align even images that
	  share only a small number of common features;
<P>
  c)	the algorithm is suboptimal, which means that the scheme
	  proposed does not lead to such positions of images for
	  which the 'measure of alignment' used reaches maximum. It
	  also means that by using some more elaborated (and much
	  more time-consuming) scheme, further improvement of
	  alignment can be achieved. In particular, the result
	  depends on the initial estimate of the average. Since the
	  calculation of this estimate is based on the random order
	  of image inclusion, the overall result will differ for
	  different runs of the program on the same data set.

<P>
 <CENTER><B>	Implementation and Alignment Strategies</B></CENTER>

<P>
	There are two implementations of the alignment-free algorithm
in SPIDER: the first (command AP SR) performs both shift and
d127 12
a138 13
AP SA and AP RA, respectively), giving the user more freedom in
the choice of the procedure parameters and allowing either of the
alignment procedures to be performed separately.
</P>
<P>
Combined Alignment (AP SR) 
<P>
	Command AP SR is recommended in most cases - it works faster
and doesn't require writing or modifying lengthy batch programs.
Nor does it have any memory requirements, as it is able to
switch automatically between "in-core" and "on-disk" versions.
The strategy implemented closely follows the description given in
the latter part of this text. The main part of the program brings two
d141 17
a157 19
smaller than 0.5 pixels (tests show that smaller numbers result
in numerical instabilities due to interpolation errors). After
alignment of all the objects (which constitutes one iteration
step of the program) the global average is centered using
the approximated location of its center of gravity (description
of the corresponding method is in the CG PH manual chapter) and
alignment parameters for all the images are modified accordingly.
Iterations are repeated until stable alignment is reached (see
above). For each iteration the resulting alignment parameters 
are stored in a document file and the corresponding average is 
produced.</P>

<P>
Strategy for AP SR
<P>
	a) All the input images should have positive contrast, i.e.
objects should be bright on the dark background.
<P>
	b) Decide the limits of integration for the rotational search
d161 3
a163 3
was found to be sufficient for all practical purposes.
<P>
	c) Specify expected size of the objects to be aligned. The
d165 3
a167 1
the objects (due to shift beyond image frame) is avoided.
d169 1
a169 3
<P>	d) Perform AP SR on the input image series.
<P>
	e) Use alignment parameters stored in the document file and
d171 6
a176 6
verify resolution achieved using command RF M.  Should the
results be unsatisfactorily: (i) modify parameters specified in
(b) and (c) and repeat alignment; (ii) increase number of input
images to improve SNR and repeat alignment; (iii) use separate
alignment commands described in next part and control each step
carefully.
d178 1
a178 2
<P>
	Further reading is suggested only for users wishing to apply
d180 1
a180 1
alignments.
d182 1
a182 2
<P>
Separate Alignment Programs (AP SA and AP RA)
d184 9
a192 9
<P>	Two programs implement the idea of reference-free alignment
separately: first to find the shift alignment (AP SA) and a
second to find the rotational alignment (AP RA).
<P>
	Both programs were implemented in a way that minimizes the
time of calculations. The shift alignment program reads each
image into the memory and calculates its Fourier transform using
the mixed-radix FFT (Fast Fourier Transform) algorithm. This
makes possible the use of images with almost any size (except for
d194 74
a267 76
size very close to the actual size of the particles. The
limitation of the surrounding background noise achieved in this
way improves the SNR of the cross-correlation functions
calculated. All following operations (shifts, averaging,
calculation of CCF) are performed in Fourier space on the
transformed images stored in memory. No padding is done, which
means that images are treated as circularly continuous (i.e., the
left side of the image borders the right and the top borders the
bottom). An additional option allows checking for the 180-degree
rotation of images (also readily implemented in Fourier space),
which further speeds up the whole alignment process. The output
of the program contains the shift parameters found for each
image. An important feature in the design of this program is that
it does not enforce any particular position of the final average.</P>

<P>	The next step, the rotational alignment, requires all
particles to be placed in such a way that their centers coincide
with the origin of the coordinate system used for rotation. Since
such centers are, for obvious reasons, difficult to define or
find for raw data, it is recommended that the average obtained
from the shift alignment step be used for the estimation of
necessary centering parameters. This average has usually high SNR
and can be easily centered using, for example, a low-pass
filtered disc as reference or using command CG PH to find its
approximate center of gravity. The parameters found by the shift
alignment program must be subsequently corrected by this
additional shift so that all particles will be moved to the
central position.</P>
<P>
	The rotational alignment program is used as follows: First,
the limits of integration (in terms of inside and outside rings)
must be decided. The outer radius must correspond to the
particle size. To avoid oversampling (and thus the relatively
large error of interpolation) an inner radius of 5 was found to
be sufficient for all practical purposes. With these limits set
each image is read into the memory and its quadratic
interpolation is calculated. This interpolation is used to
re-sample the image in polar coordinates, with the number of
points in each ring equal to the power-of-two number which is
closest to 2*pi*l, where l is the ring radius. Then the Fourier
transform of each ring is calculated, and this initialization
procedure is repeated for each image. The "reference-free"
algorithm described in the previous section is implemented
entirely in the Fourier domain using the CCF for the search of
the optimum rotation parameter.</P>

<P>
Strategy for AP SA and AP RA
<P>
	The recommended strategy of alignment using two separate
commands is as follows:
<P>
	a) Use shift alignment command (AP SA) for the whole data set
with option "180-degree check" turned on (to speed up the
alignment process). In this way the entire input data set will be
'centered', which means that the majority of particles will have
the same position with respect to the image center.
<P>
	b) Center the average obtained from step a) using some kind
of neutral rotationally symmetric shape (for example, a disk) as the
reference, or using the command CG PH to find its center of gravity.
<P>
	c) Calculate the resulting position parameters for each image
and create the new, 'centered' data set.
<P>
	d) Apply rotational alignment (AP RA) to the image series
calculated in step c).

<P>	e) Apply shift alignment (AP SA) to the image series
calculated in step c) using angles found during step d) and
stored in the document file.

<P>	f) Calculate the resulting position parameters for each image,
taking into account shifts and rotations found during steps d)
and e) using the command SA P, and create the new data set. Store the
alignment parameters found in the document file.
d269 1
a269 1
<P>	g) Repeat steps d-e-f as many times as needed (usually 3-5),
d273 1
a273 1
improvement the procedure can be terminated.
d275 1
a275 1
<P>	The strategy described is implemented in the Spider batch
d277 3
a279 4
chapters.

</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@d1 5
a5 1
<PRE>
d7 1
a8 1
               Reference-Free Alignment Programs
d10 1
d12 1
a12 3
 	Introduction


d31 2
a32 2
ice-embedded particles.

d52 2
a53 2
Programs commands (AP) therefore uses the first definition.

d56 1
a56 2
P.Penczek et al., Ultramicroscopy 40 (1992) 33-53.

d58 2
a59 1
	The Reference-free Alignment Algorithm
d61 1
a61 1

d65 2
a66 2
until convergence is achieved.

d77 2
a78 2
images from the whole set are included.

d85 2
a86 2
initial "randomly" estimated average.

d96 2
a97 2
its position.

d99 2
a100 2
as follows:

d105 1
a105 1

d109 1
a109 1

d121 2
d124 1
a124 3
 	Implementation and Alignment Strategies


d133 2
a134 2


d136 1
a136 1

d155 1
a155 2
produced.

d157 1
d159 1
a159 1

d162 1
a162 1

d168 1
a168 1

d173 2
a174 2
	d) Perform AP SR on the input image series.

d184 1
a184 1

d189 1
a189 1

d192 1
a192 1
	Two programs implement the idea of reference-free alignment
d195 1
a195 1

d215 1
a215 1
it does not enforce any particular position of the final average.
d217 1
a217 1
	The next step, the rotational alignment, requires all
d229 2
a230 2
central position.

d246 1
a246 2
the optimum rotation parameter.

d248 1
d250 1
a250 1

d253 1
a253 1

d259 1
a259 1

d263 1
a263 1

d266 1
a266 1

d270 1
a270 1
	e) Apply shift alignment (AP SA) to the image series
d274 1
a274 1
	f) Calculate the resulting position parameters for each image,
d279 1
a279 1
	g) Repeat steps d-e-f as many times as needed (usually 3-5),
d285 1
a285 1
	The strategy described is implemented in the Spider batch
d289 2
a290 2
</PRE>

@
